{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/pages/articoli/[articleId].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../../styles/Home.module.css';\nimport { useLanguage } from '../../context/siteLanguageContext'; //context\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Row, Col } from 'react-bootstrap';\nimport { Header } from '../../components/layout/Header';\nimport { Navigation } from '../../components/layout/Navbar';\nimport { Breadcrumbs } from '../../components/layout/Breadcrumbs';\nimport { Footer } from '../../components/layout/Footer';\nimport { ArticleRead } from \"../../components/articles/ArticleRead\";\nimport { RelatedArticles } from \"../../components/articles/RelatedArticles\";\nimport { getRelatedArticles, getBreadcrumbsForArticles } from '../../utils/articles';\nimport { getBreadcrumbsForErrors } from '../../utils/errors';\nimport { ErrorComponent } from '../../components/layout/ErrorComponent';\n\nfunction articoli(_ref) {\n  _s();\n\n  var glossarywords = _ref.glossarywords,\n      DBarticles = _ref.DBarticles;\n  var siteLanguage = useLanguage(); //context\n\n  var router = useRouter();\n  var articleId = router.query.articleId;\n\n  var _useState = useState(DBarticles),\n      articles = _useState[0],\n      setArticles = _useState[1];\n\n  var _useState2 = useState(articleId),\n      openedArticle = _useState2[0],\n      setOpenedArticle = _useState2[1];\n\n  var handleOpenedArticle = function handleOpenedArticle(id) {\n    var fullRoute = id !== null ? '/articoli/' + id : '/articoli/';\n    router.push(fullRoute);\n    setOpenedArticle(id);\n  };\n\n  var relatedArticles = getRelatedArticles(articleId, articles, siteLanguage);\n  useEffect(function () {\n    if (!openedArticle) {\n      console.log(\"useEffect - there is no openedArticle!\");\n\n      if (DBarticles.map(function (el) {\n        return el.id;\n      }).includes(articleId)) {\n        setOpenedArticle(articleId);\n      }\n    }\n  });\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    title: siteLanguage === \"ita\" ? \"Articoli\" : \"Articles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), __jsx(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), console.log(\"About to render breadcrumbs, articles:\", articles), openedArticle && articles.length > 0 && __jsx(Breadcrumbs, {\n    breadcrumbsList: getBreadcrumbsForArticles(openedArticle, articles.find(function (art) {\n      return art.id === openedArticle;\n    })[siteLanguage].title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), !openedArticle && __jsx(Breadcrumbs, {\n    breadcrumbsList: getBreadcrumbsForErrors({\n      ita: \"Articolo inesistente\",\n      eng: \"No such article\"\n    }, \"/articoli\", siteLanguage),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), __jsx(\"main\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, !openedArticle && __jsx(ErrorComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), __jsx(Row, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    md: 3,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }), openedArticle && articles.length > 0 && __jsx(React.Fragment, null, __jsx(Col, {\n    md: 6,\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, __jsx(ArticleRead, {\n    article: articles.find(function (art) {\n      return art.id === openedArticle;\n    }),\n    allArticles: articles,\n    setOpenedArticle: handleOpenedArticle,\n    glossarywords: glossarywords,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), __jsx(Col, {\n    md: 3,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, __jsx(RelatedArticles, {\n    relatedArticles: relatedArticles,\n    setOpenedArticle: handleOpenedArticle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }))))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(articoli, \"ocjaoeaJJOE3flcXRJHAGt7QggE=\", false, function () {\n  return [useLanguage, useRouter];\n});\n\narticoli.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var propsObj, apiUrlGlossary, resGlossaryword, glossarywords, apiUrlArticle, resArticle, DBarticles;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            propsObj = {\n              DBarticles: [],\n              glossarywords: []\n            };\n\n            if (context) {\n              _context.next = 5;\n              break;\n            }\n\n            console.log(\"context was undefined\"); //never printed\n\n            _context.next = 24;\n            break;\n\n          case 5:\n            if (context.req) {\n              _context.next = 9;\n              break;\n            }\n\n            console.log(\"location:\", location); //location.reload();\n            //location.replace(\"http://localhost:3000/articoli/0\")\n\n            _context.next = 24;\n            break;\n\n          case 9:\n            //api of glossary\n            apiUrlGlossary = \"http://\" + context.req.headers.host + \"/api/glossaryword\";\n            _context.next = 12;\n            return fetch(apiUrlGlossary);\n\n          case 12:\n            resGlossaryword = _context.sent;\n            _context.next = 15;\n            return resGlossaryword.json();\n\n          case 15:\n            glossarywords = _context.sent;\n            //api of all articles (for the related articles)\n            apiUrlArticle = \"http://\" + context.req.headers.host + \"/api/article\";\n            _context.next = 19;\n            return fetch(apiUrlArticle);\n\n          case 19:\n            resArticle = _context.sent;\n            _context.next = 22;\n            return resArticle.json();\n\n          case 22:\n            DBarticles = _context.sent;\n            propsObj = {\n              DBarticles: DBarticles.data,\n              glossarywords: glossarywords.data\n            };\n\n          case 24:\n            return _context.abrupt(\"return\", propsObj);\n\n          case 25:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default articoli;\n/* //Rimozione di getServerSideProps per deployare su Firebase\nexport async function getServerSideProps({ req }) {\n  //api of glossary\n  const apiUrlGlossary = \"http://\" + req.headers.host + \"/api/glossaryword\"\n  const resGlossaryword = await fetch(apiUrlGlossary)\n  const glossarywords = await resGlossaryword.json()\n  //api of all articles (for the related articles)\n  const apiUrlArticle = \"http://\" + req.headers.host + \"/api/article\"\n  const resArticle = await fetch(apiUrlArticle)\n  const DBarticles = await resArticle.json()\n  return { props: { DBarticles: DBarticles.data, glossarywords: glossarywords.data } }\n}\n*/","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/pages/articoli/[articleId].js"],"names":["styles","useLanguage","useState","useEffect","useRouter","Row","Col","Header","Navigation","Breadcrumbs","Footer","ArticleRead","RelatedArticles","getRelatedArticles","getBreadcrumbsForArticles","getBreadcrumbsForErrors","ErrorComponent","articoli","glossarywords","DBarticles","siteLanguage","router","articleId","query","articles","setArticles","openedArticle","setOpenedArticle","handleOpenedArticle","id","fullRoute","push","relatedArticles","console","log","map","el","includes","container","length","find","art","title","ita","eng","main","getInitialProps","context","propsObj","req","location","apiUrlGlossary","headers","host","fetch","resGlossaryword","json","apiUrlArticle","resArticle","data"],"mappings":"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","sourcesContent":["import styles from '../../styles/Home.module.css'\nimport { useLanguage } from '../../context/siteLanguageContext' //context\nimport { useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport {\n  Row,\n  Col\n} from 'react-bootstrap'\nimport { Header } from '../../components/layout/Header'\nimport { Navigation } from '../../components/layout/Navbar'\nimport { Breadcrumbs } from '../../components/layout/Breadcrumbs'\nimport { Footer } from '../../components/layout/Footer'\nimport { ArticleRead } from \"../../components/articles/ArticleRead\"\nimport { RelatedArticles } from \"../../components/articles/RelatedArticles\"\nimport { getRelatedArticles, getBreadcrumbsForArticles } from '../../utils/articles'\nimport { getBreadcrumbsForErrors } from '../../utils/errors'\nimport { ErrorComponent } from '../../components/layout/ErrorComponent'\n\nfunction articoli({ glossarywords, DBarticles }) {\n  const siteLanguage = useLanguage() //context\n  const router = useRouter()\n  const { articleId } = router.query\n  const [articles, setArticles] = useState(DBarticles)\n  const [openedArticle, setOpenedArticle] = useState(articleId)\n\n  const handleOpenedArticle = (id) => {\n    const fullRoute = id !== null ? '/articoli/' + id : '/articoli/'\n    router.push(fullRoute)\n    setOpenedArticle(id)\n  }\n\n  let relatedArticles = getRelatedArticles(articleId, articles, siteLanguage)\n\n  useEffect(() => {\n    if (!openedArticle) {\n      console.log(\"useEffect - there is no openedArticle!\")\n      if (DBarticles.map(el => el.id).includes(articleId)) {\n        setOpenedArticle(articleId)\n      }\n    }\n  })\n\n  return (\n    <div className={styles.container}>\n      <Header\n        title={siteLanguage === \"ita\" ? \"Articoli\" : \"Articles\"}\n      />\n      {/* Navbar */}\n      <Navigation />\n      {console.log(\"About to render breadcrumbs, articles:\", articles)}\n      {(openedArticle && articles.length > 0) &&\n        <Breadcrumbs\n          breadcrumbsList={getBreadcrumbsForArticles(openedArticle, articles.find(art => art.id === openedArticle)[siteLanguage].title)}\n        />\n      }\n      {!openedArticle &&\n        <Breadcrumbs\n          breadcrumbsList={getBreadcrumbsForErrors({ ita: \"Articolo inesistente\", eng: \"No such article\" }, \"/articoli\", siteLanguage)}\n        />\n      }\n      {/* Page Content */}\n      <main className={styles.main}>\n        {!openedArticle &&\n          <ErrorComponent />\n        }\n        <Row className=\"w-100\">\n          <Col md={3} className=\"\">\n          </Col>\n          {(openedArticle && articles.length > 0) &&\n            <>\n              <Col md={6} className=\"justify-content-center\">\n                <ArticleRead\n                  article={articles.find(art => art.id === openedArticle)}\n                  allArticles={articles}\n                  setOpenedArticle={handleOpenedArticle}\n                  glossarywords={glossarywords}\n                />\n              </Col>\n              <Col md={3} className=\"\">\n                <RelatedArticles\n                  relatedArticles={relatedArticles}\n                  setOpenedArticle={handleOpenedArticle}\n                />\n              </Col>\n            </>\n          }\n        </Row>\n      </main>\n      {/* Footer */}\n      <Footer />\n    </div>\n  )\n}\n\narticoli.getInitialProps = async (context) => {\n  let propsObj = { DBarticles: [], glossarywords: [] }\n  if (!context) {\n    console.log(\"context was undefined\") //never printed\n  } else if (!context.req) {\n    console.log(\"location:\", location)\n    //location.reload();\n    //location.replace(\"http://localhost:3000/articoli/0\")\n  } else {\n    //api of glossary\n    const apiUrlGlossary = \"http://\" + context.req.headers.host + \"/api/glossaryword\"\n    const resGlossaryword = await fetch(apiUrlGlossary)\n    const glossarywords = await resGlossaryword.json()\n    //api of all articles (for the related articles)\n    const apiUrlArticle = \"http://\" + context.req.headers.host + \"/api/article\"\n    const resArticle = await fetch(apiUrlArticle)\n    const DBarticles = await resArticle.json()\n    propsObj = { DBarticles: DBarticles.data, glossarywords: glossarywords.data }\n  }\n  return propsObj\n}\n\nexport default articoli\n\n/* //Rimozione di getServerSideProps per deployare su Firebase\nexport async function getServerSideProps({ req }) {\n  //api of glossary\n  const apiUrlGlossary = \"http://\" + req.headers.host + \"/api/glossaryword\"\n  const resGlossaryword = await fetch(apiUrlGlossary)\n  const glossarywords = await resGlossaryword.json()\n  //api of all articles (for the related articles)\n  const apiUrlArticle = \"http://\" + req.headers.host + \"/api/article\"\n  const resArticle = await fetch(apiUrlArticle)\n  const DBarticles = await resArticle.json()\n  return { props: { DBarticles: DBarticles.data, glossarywords: glossarywords.data } }\n}\n*/"]},"metadata":{},"sourceType":"module"}