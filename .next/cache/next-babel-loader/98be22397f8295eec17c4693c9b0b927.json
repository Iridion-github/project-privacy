{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\nimport it from 'date-fns/locale/it';\nregisterLocale('it', it);\nsetDefaultLocale('it');\nimport { Form, Row, Col, Badge } from 'react-bootstrap';\nexport const DateInput = function ({\n  formGroupClass = \"\",\n  formLabelClass = \"\",\n  calendarClassName = \"\",\n  datepickerClassName = \"\",\n  colSpan = 6,\n  validationFunc = () => true,\n  label = \"\",\n  textmuted = false,\n  value = \"\",\n  onChange = val => val,\n  isDisabled = false,\n  withTime = false,\n  dateFormat = 'dd/MM/yyyy',\n  excludeDates = [],\n  filterDate = () => true,\n  locale = \"it\",\n  maxDate = undefined,\n  minDate = undefined,\n  readOnly = false,\n  required = true,\n  removeDate = null\n}) {\n  const props = {\n    formGroupClass,\n    formLabelClass,\n    calendarClassName,\n    datepickerClassName,\n    colSpan,\n    validationFunc,\n    label,\n    textmuted,\n    value,\n    onChange,\n    isDisabled,\n    withTime,\n    dateFormat,\n    excludeDates,\n    filterDate,\n    locale,\n    maxDate,\n    minDate,\n    readOnly,\n    required,\n    removeDate\n  };\n\n  const handleChange = val => {\n    if (validationFunc(val)) {\n      onChange(val);\n      return;\n    }\n  };\n\n  return __jsx(Form.Group, {\n    className: formGroupClass\n  }, __jsx(Form.Label, {\n    className: formLabelClass\n  }, label), __jsx(Row, {\n    className: \"w-100 ml-0 mr-0 justify-content-center\"\n  }, __jsx(Col, {\n    md: colSpan,\n    className: \"pl-1 pr-1\"\n  }, __jsx(Row, {\n    className: \"w-100 ml-0 mr-0 justify-content-center\"\n  }, __jsx(Col, {\n    md: typeof value === \"object\" ? 11 : 12,\n    className: \"pl-1 pr-1\"\n  }, __jsx(DatePicker, {\n    selected: value,\n    className: datepickerClassName + \" datepicker-input\" //input-class\n    ,\n    calendarClassName: calendarClassName,\n    onChange: date => handleChange(date),\n    showTimeInput: withTime,\n    dateFormat: dateFormat,\n    disabled: isDisabled ? true : false,\n    excludeDates: excludeDates,\n    filterDate: filterDate,\n    locale: locale,\n    maxDate: maxDate,\n    minDate: minDate,\n    readOnly: readOnly,\n    required: required\n  })), value && typeof value === \"object\" && __jsx(Col, {\n    md: 1,\n    className: \"pl-1 pr-1 text-right\"\n  }, __jsx(Badge, {\n    className: \"pt-1 pb-1 clickable-badge\",\n    variant: \"danger\",\n    onClick: removeDate\n  }, __jsx(\"i\", {\n    className: \"text-center align-items-center fas fa-times-circle\"\n  })))))), textmuted && __jsx(Form.Text, {\n    className: \"text-muted\"\n  }, textmuted));\n};\n/*\n------------------------------[RETURN]------------------------------\n      <DateInput\n        formGroupClass={\"\"}\n        formLabelClass={\"\"}\n        //colSpan={8}\n        label={\"prova label\"}\n        placeholderText={\"\"}\n        textmuted={\"prova textmuted\"}\n        value={startEs}\n        onChange={setStartEs}\n        validationFunc={el => el}\n        isDisabled={false}\n        calendarClassName={\"\"}\n        datepickerClassName={\"\"}\n        //withTime={true}\n        //dateFormat='MM/dd/yyyy'\n        excludeDates={[]}\n        filterDate={() => true}\n        locale={\"es\"}\n        //maxDate={new Date}\n        //minDate={new Date}\n        //readOnly={true}\n        required={true}\n      />\n*/","map":null,"metadata":{},"sourceType":"module"}