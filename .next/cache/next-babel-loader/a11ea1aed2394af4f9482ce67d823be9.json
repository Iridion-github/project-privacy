{"ast":null,"code":"import dbConnect from '../../../utils/dbConnect';\nimport Consultation from '../../../models/Consultation';\nimport { whichToUpdate } from '../../../utils/dbFunctions';\ndbConnect();\nexport default (async (req, res) => {\n  const {\n    query: {\n      id\n    },\n    method,\n    body\n  } = req;\n  let targetConsult = await Consultation.findOne({\n    id: id\n  });\n  if (!targetConsult) return res.status(400).json({\n    success: false,\n    error: \"No consultation found for that id!\"\n  });\n\n  switch (method) {\n    case \"GET\":\n      try {\n        return res.status(200).json({\n          success: true,\n          data: consultation\n        });\n      } catch (error) {\n        return res.status(400).json({\n          success: false,\n          error\n        });\n      }\n\n    case \"PUT\":\n      try {\n        const updatedConsult = whichToUpdate(body, targetConsult);\n        targetConsult = updatedConsult;\n        await targetConsult.save();\n        return res.status(200).json({\n          success: true,\n          data: updatedConsult\n        });\n      } catch (error) {\n        return res.status(400).json({\n          success: false,\n          error: \"Failed update of existing consultation!\"\n        });\n      }\n\n    case \"DELETE\":\n      try {\n        await Consultation.deleteOne({\n          _id: targetConsult.id\n        });\n        await targetConsult.save();\n        return res.status(200).json({\n          success: true,\n          data: {}\n        });\n      } catch (error) {\n        return res.status(400).json({\n          success: false,\n          error: \"Failed deletion of existing consultation!\"\n        });\n      }\n\n    default:\n      return res.status(400).json({\n        success: false,\n        error\n      });\n  }\n});","map":null,"metadata":{},"sourceType":"module"}