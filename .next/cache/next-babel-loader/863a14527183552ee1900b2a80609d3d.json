{"ast":null,"code":"var _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/archive/ui/Select.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Row, Col } from 'react-bootstrap';\nexport const Select = function (props) {\n  const {\n    formGroupClass = \"\",\n    formLabelClass = \"\",\n    validationFunc = () => true,\n    label = \"\",\n    textmuted = false,\n    onChange = val => val,\n    isDisabled = false,\n    selectableOptions = [],\n    defaultValue = \"\",\n    placeholder,\n    getOptionValue = el => el && el !== \"\" ? el : null,\n    getOptionStyle = () => ({})\n  } = props;\n\n  const handleChange = val => {\n    if (validationFunc(val)) {\n      onChange(val);\n      return;\n    }\n  };\n\n  return __jsx(Form.Group, {\n    className: formGroupClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Label, {\n    className: formLabelClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, label), __jsx(Row, {\n    className: \"w-100 ml-0 mr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    md: 12,\n    className: \"pl-1 pr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Control, {\n    as: \"select\",\n    placeholder: placeholder,\n    onChange: event => handleChange(event.target.value),\n    disabled: isDisabled,\n    value: defaultValue,\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, selectableOptions.map(el => __jsx(\"option\", {\n    style: getOptionStyle(el),\n    key: el,\n    value: getOptionValue(el),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 42\n    }\n  }, el))))), textmuted && __jsx(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, textmuted));\n};\n/*\n------------------------------[STATE]------------------------------\nconst [selectVal, setSelectVal] = useState(\"\")\n\nconst [optionsList, setOptionsList] = useState([\n  \"blue\", \"red\", \"green\", \"cyan\"\n])\n\nconst handleChangeSelectVal = (val) => {\n  setSelectVal(val)\n}\n\n\n------------------------------[RETURN]------------------------------\n<Select\n  //formGroupClass={\"mt-5\"}\n  //formLabelClass={\"mt-5\"}\n  validationFunc={() => true}\n  label={\"label\"}\n  textmuted={\"text muted\"}\n  onChange={handleChangeSelectVal}\n  isDisabled={false}\n  selectableOptions={optionsList}\n  //placeholder={\"placeholder\"}\n  //getOptionValue={col => col}\n  //getOptionStyle={col => ({ color: `${col} !important` })}\n  defaultValue={selectVal}\n/>\n*/","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/archive/ui/Select.js"],"names":["Form","Row","Col","Select","props","formGroupClass","formLabelClass","validationFunc","label","textmuted","onChange","val","isDisabled","selectableOptions","defaultValue","placeholder","getOptionValue","el","getOptionStyle","handleChange","event","target","value","map"],"mappings":";;;AAAA,SACEA,IADF,EAEEC,GAFF,EAGEC,GAHF,QAIO,iBAJP;AAOA,OAAO,MAAMC,MAAM,GAAG,UAAUC,KAAV,EAAiB;AAErC,QAAM;AACJC,IAAAA,cAAc,GAAG,EADb;AAEJC,IAAAA,cAAc,GAAG,EAFb;AAGJC,IAAAA,cAAc,GAAG,MAAM,IAHnB;AAIJC,IAAAA,KAAK,GAAG,EAJJ;AAKJC,IAAAA,SAAS,GAAG,KALR;AAMJC,IAAAA,QAAQ,GAAGC,GAAG,IAAIA,GANd;AAOJC,IAAAA,UAAU,GAAG,KAPT;AAQJC,IAAAA,iBAAiB,GAAG,EARhB;AASJC,IAAAA,YAAY,GAAG,EATX;AAUJC,IAAAA,WAVI;AAWJC,IAAAA,cAAc,GAAGC,EAAE,IAAKA,EAAE,IAAIA,EAAE,KAAK,EAAd,GAAoBA,EAApB,GAAyB,IAX5C;AAYJC,IAAAA,cAAc,GAAG,OAAO,EAAP;AAZb,MAaFd,KAbJ;;AAeA,QAAMe,YAAY,GAAIR,GAAD,IAAS;AAC5B,QAAIJ,cAAc,CAACI,GAAD,CAAlB,EAAyB;AACvBD,MAAAA,QAAQ,CAACC,GAAD,CAAR;AACA;AACD;AACF,GALD;;AAOA,SACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAEN,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAEC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCE,KAAxC,CADF,EAEE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,EAAE,EAAC,QADL;AAEE,IAAA,WAAW,EAAEO,WAFf;AAGE,IAAA,QAAQ,EAAGK,KAAD,IAAWD,YAAY,CAACC,KAAK,CAACC,MAAN,CAAaC,KAAd,CAHnC;AAIE,IAAA,QAAQ,EAAEV,UAJZ;AAKE,IAAA,KAAK,EAAEE,YALT;AAME,IAAA,MAAM,MANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGD,iBAAiB,CAACU,GAAlB,CAAsBN,EAAE,IAAI;AAC3B,IAAA,KAAK,EAAEC,cAAc,CAACD,EAAD,CADM;AAE3B,IAAA,GAAG,EAAEA,EAFsB;AAG3B,IAAA,KAAK,EAAED,cAAc,CAACC,EAAD,CAHM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAK1BA,EAL0B,CAA5B,CAPH,CADF,CADF,CAFF,EAsBGR,SAAS,IAAI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACXA,SADW,CAtBhB,CADF;AA4BD,CApDM;AAsDP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {\n  Form,\n  Row,\n  Col\n} from 'react-bootstrap'\n\n\nexport const Select = function (props) {\n\n  const {\n    formGroupClass = \"\",\n    formLabelClass = \"\",\n    validationFunc = () => true,\n    label = \"\",\n    textmuted = false,\n    onChange = val => val,\n    isDisabled = false,\n    selectableOptions = [],\n    defaultValue = \"\",\n    placeholder,\n    getOptionValue = el => (el && el !== \"\") ? el : null,\n    getOptionStyle = () => ({}),\n  } = props\n\n  const handleChange = (val) => {\n    if (validationFunc(val)) {\n      onChange(val)\n      return\n    }\n  }\n\n  return (\n    <Form.Group className={formGroupClass}>\n      <Form.Label className={formLabelClass}>{label}</Form.Label>\n      <Row className=\"w-100 ml-0 mr-0\">\n        <Col md={12} className=\"pl-1 pr-1\">\n          <Form.Control\n            as=\"select\"\n            placeholder={placeholder}\n            onChange={(event) => handleChange(event.target.value)}\n            disabled={isDisabled}\n            value={defaultValue}\n            custom>\n            {selectableOptions.map(el => <option\n              style={getOptionStyle(el)}\n              key={el}\n              value={getOptionValue(el)}\n            >\n              {el}\n            </option>\n            )}\n          </Form.Control>\n        </Col>\n      </Row>\n      {textmuted && <Form.Text className=\"text-muted\">\n        {textmuted}\n      </Form.Text>}\n    </Form.Group>\n  )\n}\n\n/*\n------------------------------[STATE]------------------------------\nconst [selectVal, setSelectVal] = useState(\"\")\n\nconst [optionsList, setOptionsList] = useState([\n  \"blue\", \"red\", \"green\", \"cyan\"\n])\n\nconst handleChangeSelectVal = (val) => {\n  setSelectVal(val)\n}\n\n\n------------------------------[RETURN]------------------------------\n<Select\n  //formGroupClass={\"mt-5\"}\n  //formLabelClass={\"mt-5\"}\n  validationFunc={() => true}\n  label={\"label\"}\n  textmuted={\"text muted\"}\n  onChange={handleChangeSelectVal}\n  isDisabled={false}\n  selectableOptions={optionsList}\n  //placeholder={\"placeholder\"}\n  //getOptionValue={col => col}\n  //getOptionStyle={col => ({ color: `${col} !important` })}\n  defaultValue={selectVal}\n/>\n*/"]},"metadata":{},"sourceType":"module"}