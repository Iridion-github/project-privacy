{"ast":null,"code":"import dbConnect from '../../../utils/dbConnect';\nimport Review from '../../../models/Review';\ndbConnect();\nexport default (async (req, res) => {\n  const {\n    method\n  } = req;\n\n  switch (method) {\n    case \"GET\":\n      try {\n        const reviews = await Review.find({});\n        const orderedReviews = reviews.sort((a, b) => {\n          return new Date(a.date) - new Date(b.date);\n        });\n        res.status(200).json({\n          success: true,\n          data: orderedReviews\n        });\n      } catch (err) {\n        res.status(400).json({\n          success: false,\n          error: err\n        });\n      }\n\n      break;\n\n    case \"POST\":\n      try {\n        const review = await Review.create(req.body);\n        res.status(201).json({\n          success: true,\n          data: review\n        });\n      } catch (err) {\n        res.status(400).json({\n          success: false,\n          error: err\n        });\n      }\n\n      break;\n\n    default:\n      res.status(400).json({\n        success: false,\n        error: \"Unexpected case!\"\n      });\n  }\n});","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/pages/api/review/index.js"],"names":["dbConnect","Review","req","res","method","reviews","find","orderedReviews","sort","a","b","Date","date","status","json","success","data","err","error","review","create","body"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEAD,SAAS;AAET,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAaF,GAAnB;;AACA,UAAQE,MAAR;AACE,SAAK,KAAL;AACE,UAAI;AACF,cAAMC,OAAO,GAAG,MAAMJ,MAAM,CAACK,IAAP,CAAY,EAAZ,CAAtB;AACA,cAAMC,cAAc,GAAGF,OAAO,CAACG,IAAR,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC5C,iBAAO,IAAIC,IAAJ,CAASF,CAAC,CAACG,IAAX,IAAmB,IAAID,IAAJ,CAASD,CAAC,CAACE,IAAX,CAA1B;AACD,SAFsB,CAAvB;AAIAT,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAET;AAAvB,SAArB;AACD,OAPD,CAOE,OAAOU,GAAP,EAAY;AACZd,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,KAAX;AAAkBG,UAAAA,KAAK,EAAED;AAAzB,SAArB;AACD;;AACD;;AACF,SAAK,MAAL;AACE,UAAI;AACF,cAAME,MAAM,GAAG,MAAMlB,MAAM,CAACmB,MAAP,CAAclB,GAAG,CAACmB,IAAlB,CAArB;AACAlB,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAEG;AAAvB,SAArB;AACD,OAHD,CAGE,OAAOF,GAAP,EAAY;AACZd,QAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,KAAX;AAAkBG,UAAAA,KAAK,EAAED;AAAzB,SAArB;AACD;;AACD;;AACF;AACEd,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBG,QAAAA,KAAK,EAAE;AAAzB,OAArB;AAtBJ;AAwBD,CA1BD","sourcesContent":["import dbConnect from '../../../utils/dbConnect'\nimport Review from '../../../models/Review'\n\ndbConnect()\n\nexport default async (req, res) => {\n  const { method } = req\n  switch (method) {\n    case \"GET\":\n      try {\n        const reviews = await Review.find({})\n        const orderedReviews = reviews.sort((a, b) => {\n          return new Date(a.date) - new Date(b.date)\n        })\n\n        res.status(200).json({ success: true, data: orderedReviews })\n      } catch (err) {\n        res.status(400).json({ success: false, error: err })\n      }\n      break\n    case \"POST\":\n      try {\n        const review = await Review.create(req.body)\n        res.status(201).json({ success: true, data: review })\n      } catch (err) {\n        res.status(400).json({ success: false, error: err })\n      }\n      break\n    default:\n      res.status(400).json({ success: false, error: \"Unexpected case!\" })\n  }\n}"]},"metadata":{},"sourceType":"module"}