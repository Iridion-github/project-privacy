{"ast":null,"code":"var _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/pages/areaTest.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/Home.module.css';\nimport { useState } from 'react';\nimport { useLanguage } from '../context/siteLanguageContext'; //context\n\nimport { Row } from 'react-bootstrap';\nimport { Header } from '../components/layout/Header';\nimport { Navigation } from '../components/layout/Navbar';\nimport { TopicChoice } from '../components/areaTest/TopicChoice';\nimport { Quiz } from '../components/areaTest/Quiz';\nimport { Results } from '../components/areaTest/Results';\nimport { Footer } from '../components/layout/Footer';\n\nfunction areaTest({\n  tests\n}) {\n  console.log(\"areaTest - tests:\", tests);\n  const {\n    0: selectedTopic,\n    1: setSelectedTopic\n  } = useState(null);\n  const {\n    0: selectedTest,\n    1: setSelectedTest\n  } = useState(null);\n  const {\n    0: showResults,\n    1: setShowResults\n  } = useState(false);\n  const {\n    0: results,\n    1: setResults\n  } = useState([]);\n  const siteLanguage = useLanguage(); //context\n\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    title: siteLanguage === \"ita\" ? \"Area Test\" : \"Test Area\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), __jsx(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    className: \"w-100 m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, selectedTopic === null && showResults === false && __jsx(TopicChoice, {\n    setSelectedTopic: setSelectedTopic,\n    setSelectedTest: setSelectedTest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), selectedTopic && __jsx(Quiz, {\n    selectedTopic: selectedTopic,\n    selectedTest: tests[selectedTest],\n    setSelectedTopic: setSelectedTopic,\n    setShowResults: setShowResults,\n    setResults: setResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }), showResults && __jsx(Results, {\n    selectedTopic: selectedTopic,\n    selectedTest: tests[selectedTest],\n    setShowResults: setShowResults,\n    results: results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 27\n    }\n  }))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }));\n}\n\nareaTest.getInitialProps = async context => {\n  const apiUrl = \"http://\" + context.req.headers.host + \"/api/test\";\n  const res = await fetch(apiUrl);\n  const {\n    data\n  } = await res.json();\n  return {\n    tests: data\n  };\n};\n\nexport default areaTest;\n/* //Rimozione di getServerSideProps per deployare su Firebase\nexport async function getServerSideProps(context) {\n  const apiUrl = \"http://\" + context.req.headers.host + \"/api/test\"\n  const res = await fetch(apiUrl)\n  const { data } = await res.json()\n  return { props: { tests: data } }\n}\n*/","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/pages/areaTest.js"],"names":["styles","useState","useLanguage","Row","Header","Navigation","TopicChoice","Quiz","Results","Footer","areaTest","tests","console","log","selectedTopic","setSelectedTopic","selectedTest","setSelectedTest","showResults","setShowResults","results","setResults","siteLanguage","container","main","getInitialProps","context","apiUrl","req","headers","host","res","fetch","data","json"],"mappings":"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","sourcesContent":["import styles from '../styles/Home.module.css'\nimport { useState } from 'react'\nimport { useLanguage } from '../context/siteLanguageContext' //context\nimport {\n  Row\n} from 'react-bootstrap'\nimport { Header } from '../components/layout/Header'\nimport { Navigation } from '../components/layout/Navbar'\nimport { TopicChoice } from '../components/areaTest/TopicChoice'\nimport { Quiz } from '../components/areaTest/Quiz'\nimport { Results } from '../components/areaTest/Results'\nimport { Footer } from '../components/layout/Footer'\n\n\nfunction areaTest({ tests }) {\n\n  console.log(\"areaTest - tests:\", tests)\n\n  const [selectedTopic, setSelectedTopic] = useState(null)\n\n  const [selectedTest, setSelectedTest] = useState(null)\n\n  const [showResults, setShowResults] = useState(false)\n\n  const [results, setResults] = useState([])\n\n  const siteLanguage = useLanguage() //context\n\n  return (\n    <div className={styles.container}>\n      <Header\n        title={siteLanguage === \"ita\" ? \"Area Test\" : \"Test Area\"}\n      />\n      {/* Navbar */}\n      <Navigation />\n      {/* Page Content */}\n      <main className={styles.main}>\n        <Row className=\"w-100 m-auto\">\n          {/* Scelta Quiz */}\n          {(selectedTopic === null && showResults === false) &&\n            <TopicChoice\n              setSelectedTopic={setSelectedTopic}\n              setSelectedTest={setSelectedTest}\n            />}\n          {/* Fine Scelta Quiz */}\n          {/* Quiz */}\n          {selectedTopic && <Quiz\n            selectedTopic={selectedTopic}\n            selectedTest={tests[selectedTest]}\n            setSelectedTopic={setSelectedTopic}\n            setShowResults={setShowResults}\n            setResults={setResults}\n          />}\n          {/* Fine Quiz */}\n          {/* Risultati */}\n          {showResults && <Results\n            selectedTopic={selectedTopic}\n            selectedTest={tests[selectedTest]}\n            setShowResults={setShowResults}\n            results={results}\n          />}\n          {/* Fine Risultati */}\n        </Row>\n      </main>\n      {/* Footer */}\n      <Footer />\n    </div>\n  )\n}\n\nareaTest.getInitialProps = async (context) => {\n  const apiUrl = \"http://\" + context.req.headers.host + \"/api/test\"\n  const res = await fetch(apiUrl)\n  const { data } = await res.json()\n  return { tests: data }\n}\n\nexport default areaTest\n\n/* //Rimozione di getServerSideProps per deployare su Firebase\nexport async function getServerSideProps(context) {\n  const apiUrl = \"http://\" + context.req.headers.host + \"/api/test\"\n  const res = await fetch(apiUrl)\n  const { data } = await res.json()\n  return { props: { tests: data } }\n}\n*/"]},"metadata":{},"sourceType":"module"}