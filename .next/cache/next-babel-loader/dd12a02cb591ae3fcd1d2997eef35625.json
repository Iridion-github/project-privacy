{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Card, Button, Table } from 'react-bootstrap';\nimport { ResultRow } from './ResultRow';\nimport { ContactsBtn } from '../buttons/ContactsBtn';\nexport var Results = function Results(props) {\n  var getUserAnswerText = function getUserAnswerText(answers) {\n    var userAnswers = [];\n    answers.forEach(function (elem) {\n      if (elem.selected === true) userAnswers.push(elem);\n    });\n    return userAnswers;\n  };\n\n  var getCorrectAnswer = function getCorrectAnswer(answers) {\n    var rightAnswers = [];\n    answers.forEach(function (elem) {\n      if (elem.value === true) rightAnswers.push(elem);\n    });\n    return rightAnswers;\n  };\n\n  var getUserCorrectAnswer = function getUserCorrectAnswer(answers) {\n    var rightSelectedAnswers = [];\n    answers.forEach(function (elem) {\n      if (elem.value === true && elem.selected === true) rightSelectedAnswers.push(elem);\n    });\n    return rightSelectedAnswers;\n  };\n\n  var getPoints = function getPoints(answers) {\n    var points = 0;\n    answers.forEach(function (elem) {\n      if (elem.value === true && elem.selected === true) points += elem.points;\n    });\n    return points;\n  };\n\n  return __jsx(Row, {\n    className: \"w-100 text-center align-items-center justify-content-center m-auto\"\n  }, __jsx(Row, {\n    className: \"w-100 mb-3\"\n  }, __jsx(Col, {\n    md: {\n      span: 4\n    },\n    className: \"\"\n  }), __jsx(Col, {\n    md: {\n      span: 1\n    },\n    className: \"d-flex align-items-center\"\n  }, __jsx(Button, {\n    block: true,\n    variant: \"info\",\n    onClick: function onClick() {\n      return props.setShowResults(false);\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-long-arrow-alt-left mr-2\"\n  }), \"I Test\")), __jsx(Col, {\n    md: 2\n  }, __jsx(\"div\", {\n    style: {\n      fontSize: \"1.5rem\",\n      fontWeight: \"600\",\n      minWidth: \"285px !important\"\n    }\n  }, \"Argomento: \", props.selectedTopic))), __jsx(Row, {\n    className: \"w-100\"\n  }, __jsx(Col, {\n    md: {\n      span: 6,\n      offset: 3\n    }\n  }, __jsx(Card, {\n    className: \"w-100 p-2 grey-border justify-content-center\"\n  }, __jsx(Card.Img, {\n    variant: \"top\",\n    src: \"\"\n  }), __jsx(Card.Body, null, __jsx(Card.Title, {\n    className: \"text-center\"\n  }, \"Risultati del Test: \"), __jsx(Row, {\n    className: \"mb-4\"\n  }, __jsx(Col, null, __jsx(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\"\n  }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n    scope: \"col\",\n    key: \"1\"\n  }, \"Domanda\"), __jsx(\"th\", {\n    scope: \"col\",\n    key: \"2\"\n  }, \"Tua Risposta\"), __jsx(\"th\", {\n    scope: \"col\",\n    key: \"3\"\n  }, \"Risposta Corretta\"), props.selectedTest.pointsSystem && __jsx(\"th\", {\n    scope: \"col\",\n    key: \"4\"\n  }, \"Punti\"))), __jsx(\"tbody\", null, props.results.map(function (elem, index) {\n    return __jsx(ResultRow, {\n      key: index,\n      questionNumber: index + 1,\n      questionText: elem.text,\n      correctAnswer: getCorrectAnswer(elem.answers),\n      userAnswer: getUserAnswerText(elem.answers),\n      color: getUserCorrectAnswer(elem.answers).length > 0 ? \"green\" : \"red\",\n      points: props.selectedTest.pointsSystem ? getPoints(elem.answers) : null\n    });\n  }))))), __jsx(Row, {\n    className: \"justify-content-center\"\n  }, __jsx(ContactsBtn, null)))))));\n};","map":null,"metadata":{},"sourceType":"module"}