{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/reviews/ReviewContent.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Image } from 'react-bootstrap';\nimport { getGlossaryPopover } from '../../utils/text';\nexport var ReviewContent = function ReviewContent(props) {\n  var getSections = function getSections(imgs, paragraphs) {\n    var specifiedGlossary = props.glossarywords.filter(function (word) {\n      return props.glossary.includes(word.name);\n    });\n    return paragraphs.map(function (parag, i) {\n      return __jsx(\"div\", {\n        key: i,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }\n      }, __jsx(\"p\", {\n        className: \"article-paragraph\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }, getGlossaryPopover(parag, specifiedGlossary)), __jsx(Image, {\n        className: \"article-img-\" + imgs[i].size + \"-\" + imgs[i].position + imgs[i].margin + \" black-border\",\n        src: imgs[i].src,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }\n      }));\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Image, {\n    className: \"article-img-md-left mr-2 black-border\",\n    src: props.previewImg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), getSections(props.images, props.paragraphs));\n};\n_c = ReviewContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReviewContent\");","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/reviews/ReviewContent.js"],"names":["Image","getGlossaryPopover","ReviewContent","props","getSections","imgs","paragraphs","specifiedGlossary","glossarywords","filter","word","glossary","includes","name","map","parag","i","size","position","margin","src","previewImg","images"],"mappings":";;;;;AAAA,SACEA,KADF,QAEO,iBAFP;AAGA,SAASC,kBAAT,QAAmC,kBAAnC;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AACtC,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAOC,UAAP,EAAsB;AACxC,QAAMC,iBAAiB,GAAGJ,KAAK,CAACK,aAAN,CAAoBC,MAApB,CAA2B,UAAAC,IAAI;AAAA,aAAIP,KAAK,CAACQ,QAAN,CAAeC,QAAf,CAAwBF,IAAI,CAACG,IAA7B,CAAJ;AAAA,KAA/B,CAA1B;AACA,WAAOP,UAAU,CAACQ,GAAX,CACL,UAACC,KAAD,EAAQC,CAAR,EAAc;AACZ,aACE;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkCf,kBAAkB,CAACc,KAAD,EAAQR,iBAAR,CAApD,CADF,EAEE,MAAC,KAAD;AAAO,QAAA,SAAS,EAAE,iBAAiBF,IAAI,CAACW,CAAD,CAAJ,CAAQC,IAAzB,GAAgC,GAAhC,GAAsCZ,IAAI,CAACW,CAAD,CAAJ,CAAQE,QAA9C,GAAyDb,IAAI,CAACW,CAAD,CAAJ,CAAQG,MAAjE,GAA0E,eAA5F;AAA6G,QAAA,GAAG,EAAEd,IAAI,CAACW,CAAD,CAAJ,CAAQI,GAA1H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF;AAMD,KARI,CAAP;AAUD,GAZD;;AAaA,SACE,4BACE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,uCAAjB;AAAyD,IAAA,GAAG,EAAEjB,KAAK,CAACkB,UAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGjB,WAAW,CAACD,KAAK,CAACmB,MAAP,EAAenB,KAAK,CAACG,UAArB,CAFd,CADF;AAMD,CApBM;KAAMJ,a","sourcesContent":["import {\n  Image\n} from 'react-bootstrap'\nimport { getGlossaryPopover } from '../../utils/text'\n\nexport const ReviewContent = (props) => {\n  const getSections = (imgs, paragraphs) => {\n    const specifiedGlossary = props.glossarywords.filter(word => props.glossary.includes(word.name))\n    return paragraphs.map(\n      (parag, i) => {\n        return (\n          <div key={i}>\n            <p className=\"article-paragraph\">{getGlossaryPopover(parag, specifiedGlossary)}</p>\n            <Image className={\"article-img-\" + imgs[i].size + \"-\" + imgs[i].position + imgs[i].margin + \" black-border\"} src={imgs[i].src} />\n          </div>\n        )\n      }\n    )\n  }\n  return (\n    <>\n      <Image className=\"article-img-md-left mr-2 black-border\" src={props.previewImg} />\n      {getSections(props.images, props.paragraphs)}\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}