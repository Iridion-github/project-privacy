{"ast":null,"code":"import dbConnect from '../../../utils/dbConnect';\nimport ArticleTopics from '../../../models/ArticleTopics';\ndbConnect();\nexport default (async (req, res) => {\n  const {\n    method\n  } = req;\n\n  switch (method) {\n    case \"GET\":\n      try {\n        const articleTopics = await ArticleTopics.find();\n        res.status(200).json({\n          success: true,\n          data: articleTopics\n        });\n      } catch (err) {\n        res.status(400).json({\n          success: false,\n          error: err\n        });\n      }\n\n      break;\n\n    case \"POST\":\n      try {\n        const glossaryWord = await ArticleTopics.create(req.body);\n        res.status(201).json({\n          success: true,\n          data: glossaryWord\n        });\n      } catch (err) {\n        res.status(400).json({\n          success: false,\n          error: err\n        });\n      }\n\n      break;\n\n    default:\n      res.status(400).json({\n        success: false,\n        error: \"Unexpected case!\"\n      });\n  }\n});","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/pages/api/articleTopics/index.js"],"names":["dbConnect","ArticleTopics","req","res","method","articleTopics","find","status","json","success","data","err","error","glossaryWord","create","body"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AAEAD,SAAS;AAET,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAaF,GAAnB;;AACA,UAAQE,MAAR;AACE,SAAK,KAAL;AACE,UAAI;AACF,cAAMC,aAAa,GAAG,MAAMJ,aAAa,CAACK,IAAd,EAA5B;AACAH,QAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAEL;AAAvB,SAArB;AACD,OAHD,CAGE,OAAOM,GAAP,EAAY;AACZR,QAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,KAAX;AAAkBG,UAAAA,KAAK,EAAED;AAAzB,SAArB;AACD;;AACD;;AACF,SAAK,MAAL;AACE,UAAI;AACF,cAAME,YAAY,GAAG,MAAMZ,aAAa,CAACa,MAAd,CAAqBZ,GAAG,CAACa,IAAzB,CAA3B;AACAZ,QAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAEG;AAAvB,SAArB;AACD,OAHD,CAGE,OAAOF,GAAP,EAAY;AACZR,QAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,KAAX;AAAkBG,UAAAA,KAAK,EAAED;AAAzB,SAArB;AACD;;AACD;;AACF;AACER,MAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBG,QAAAA,KAAK,EAAE;AAAzB,OAArB;AAlBJ;AAoBD,CAtBD","sourcesContent":["import dbConnect from '../../../utils/dbConnect'\nimport ArticleTopics from '../../../models/ArticleTopics'\n\ndbConnect()\n\nexport default async (req, res) => {\n  const { method } = req\n  switch (method) {\n    case \"GET\":\n      try {\n        const articleTopics = await ArticleTopics.find()\n        res.status(200).json({ success: true, data: articleTopics })\n      } catch (err) {\n        res.status(400).json({ success: false, error: err })\n      }\n      break\n    case \"POST\":\n      try {\n        const glossaryWord = await ArticleTopics.create(req.body)\n        res.status(201).json({ success: true, data: glossaryWord })\n      } catch (err) {\n        res.status(400).json({ success: false, error: err })\n      }\n      break\n    default:\n      res.status(400).json({ success: false, error: \"Unexpected case!\" })\n  }\n}"]},"metadata":{},"sourceType":"module"}