{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Row, Col } from 'react-bootstrap';\nimport { NumberInput } from './NumberInput';\nexport var DateInputNoCalendar = function DateInputNoCalendar(_ref) {\n  var _ref$formGroupClass = _ref.formGroupClass,\n      formGroupClass = _ref$formGroupClass === void 0 ? \"\" : _ref$formGroupClass,\n      _ref$formLabelClass = _ref.formLabelClass,\n      formLabelClass = _ref$formLabelClass === void 0 ? \"\" : _ref$formLabelClass,\n      _ref$calendarClassNam = _ref.calendarClassName,\n      calendarClassName = _ref$calendarClassNam === void 0 ? \"\" : _ref$calendarClassNam,\n      _ref$datepickerClassN = _ref.datepickerClassName,\n      datepickerClassName = _ref$datepickerClassN === void 0 ? \"\" : _ref$datepickerClassN,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? \"\" : _ref$label,\n      _ref$textmuted = _ref.textmuted,\n      textmuted = _ref$textmuted === void 0 ? false : _ref$textmuted,\n      _ref$selectedDay = _ref.selectedDay,\n      selectedDay = _ref$selectedDay === void 0 ? \"\" : _ref$selectedDay,\n      _ref$selectedMonth = _ref.selectedMonth,\n      selectedMonth = _ref$selectedMonth === void 0 ? \"\" : _ref$selectedMonth,\n      _ref$selectedYear = _ref.selectedYear,\n      selectedYear = _ref$selectedYear === void 0 ? \"\" : _ref$selectedYear,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? null : _ref$onChange,\n      _ref$isDisabled = _ref.isDisabled,\n      isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled,\n      _ref$withTime = _ref.withTime,\n      withTime = _ref$withTime === void 0 ? false : _ref$withTime,\n      _ref$dateFormat = _ref.dateFormat,\n      dateFormat = _ref$dateFormat === void 0 ? 'dd/MM/yyyy' : _ref$dateFormat,\n      _ref$excludeDates = _ref.excludeDates,\n      excludeDates = _ref$excludeDates === void 0 ? [] : _ref$excludeDates,\n      _ref$filterDate = _ref.filterDate,\n      filterDate = _ref$filterDate === void 0 ? function () {\n    return true;\n  } : _ref$filterDate,\n      _ref$locale = _ref.locale,\n      locale = _ref$locale === void 0 ? \"it\" : _ref$locale,\n      _ref$maxDate = _ref.maxDate,\n      maxDate = _ref$maxDate === void 0 ? undefined : _ref$maxDate,\n      _ref$minDate = _ref.minDate,\n      minDate = _ref$minDate === void 0 ? undefined : _ref$minDate,\n      _ref$readOnly = _ref.readOnly,\n      readOnly = _ref$readOnly === void 0 ? false : _ref$readOnly,\n      _ref$required = _ref.required,\n      required = _ref$required === void 0 ? true : _ref$required;\n  var props = {\n    formGroupClass: formGroupClass,\n    formLabelClass: formLabelClass,\n    calendarClassName: calendarClassName,\n    datepickerClassName: datepickerClassName,\n    label: label,\n    textmuted: textmuted,\n    selectedDay: selectedDay,\n    selectedMonth: selectedMonth,\n    selectedYear: selectedYear,\n    onChange: onChange,\n    isDisabled: isDisabled,\n    withTime: withTime,\n    dateFormat: dateFormat,\n    excludeDates: excludeDates,\n    filterDate: filterDate,\n    locale: locale,\n    maxDate: maxDate,\n    minDate: minDate,\n    readOnly: readOnly,\n    required: required\n  };\n  var currentDate = new Date();\n  var currentYear = Number(currentDate.getYear()) + 1900;\n\n  var validateDay = function validateDay(num) {\n    return num >= 0 && num <= 31;\n  };\n\n  var validateMonth = function validateMonth(num) {\n    return num >= 0 && num <= 12;\n  };\n\n  var validateYear = function validateYear(num) {\n    if (num.length < 4) {\n      return num >= 0 && num <= currentYear;\n    } else {\n      return num >= 1800 && num <= currentYear;\n    }\n  };\n\n  return __jsx(Form.Group, {\n    className: formGroupClass\n  }, __jsx(Form.Label, {\n    className: formLabelClass\n  }, label), __jsx(Row, {\n    className: \"w-100 ml-0 mr-0\"\n  }, __jsx(Col, {\n    md: 4,\n    className: \"pl-0 pr-1 PROVA\"\n  }, __jsx(NumberInput, {\n    formGroupClass: \"w-100\",\n    colSpan: 12,\n    placeholderText: \"GG\",\n    textmuted: \"\",\n    value: props.selectedDay,\n    onChange: function onChange(num) {\n      return props.onChange(\"day\", num);\n    },\n    validationFunc: validateDay\n  })), __jsx(Col, {\n    md: 4,\n    className: \"pl-1 pr-1\"\n  }, __jsx(NumberInput, {\n    colSpan: 12,\n    formGroupClass: \"w-100\",\n    placeholderText: \"MM\",\n    textmuted: \"\",\n    value: props.selectedMonth,\n    onChange: function onChange(num) {\n      return props.onChange(\"month\", num);\n    },\n    validationFunc: validateMonth\n  })), __jsx(Col, {\n    md: 4,\n    className: \"pl-1 pr-0\"\n  }, __jsx(NumberInput, {\n    colSpan: 12,\n    formGroupClass: \"w-100\",\n    placeholderText: \"AAAA\",\n    textmuted: \"\",\n    value: props.selectedYear,\n    onChange: function onChange(num) {\n      return props.onChange(\"year\", num);\n    },\n    validationFunc: validateYear\n  }))), textmuted && __jsx(Form.Text, {\n    className: \"text-muted\"\n  }, textmuted));\n};","map":null,"metadata":{},"sourceType":"module"}