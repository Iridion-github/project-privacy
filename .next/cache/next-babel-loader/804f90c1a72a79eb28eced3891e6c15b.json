{"ast":null,"code":"import dbConnect from '../../../utils/dbConnect';\nimport Article from '../../../models/Article';\ndbConnect();\nexport default (async (req, res) => {\n  const {\n    method\n  } = req;\n\n  switch (method) {\n    case \"GET\":\n      try {\n        const articles = await Article.find({});\n        const orderedArticles = articles.sort((a, b) => {\n          return new Date(a.date) - new Date(b.date);\n        });\n        return res.status(200).json({\n          success: true,\n          data: orderedArticles\n        });\n      } catch (err) {\n        return res.status(400).json({\n          success: false,\n          error: err\n        });\n      }\n\n    case \"POST\":\n      try {\n        const article = await Article.create(req.body);\n        return res.status(201).json({\n          success: true,\n          data: article\n        });\n      } catch (err) {\n        return res.status(400).json({\n          success: false,\n          error: err\n        });\n      }\n\n    default:\n      return res.status(400).json({\n        success: false,\n        error: \"Unexpected case!\"\n      });\n  }\n});","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/pages/api/article/index.js"],"names":["dbConnect","Article","req","res","method","articles","find","orderedArticles","sort","a","b","Date","date","status","json","success","data","err","error","article","create","body"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAEAD,SAAS;AAET,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAaF,GAAnB;;AACA,UAAQE,MAAR;AACE,SAAK,KAAL;AACE,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,IAAR,CAAa,EAAb,CAAvB;AACA,cAAMC,eAAe,GAAGF,QAAQ,CAACG,IAAT,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC9C,iBAAO,IAAIC,IAAJ,CAASF,CAAC,CAACG,IAAX,IAAmB,IAAID,IAAJ,CAASD,CAAC,CAACE,IAAX,CAA1B;AACD,SAFuB,CAAxB;AAIA,eAAOT,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAET;AAAvB,SAArB,CAAP;AACD,OAPD,CAOE,OAAOU,GAAP,EAAY;AACZ,eAAOd,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,KAAX;AAAkBG,UAAAA,KAAK,EAAED;AAAzB,SAArB,CAAP;AACD;;AAEH,SAAK,MAAL;AACE,UAAI;AACF,cAAME,OAAO,GAAG,MAAMlB,OAAO,CAACmB,MAAR,CAAelB,GAAG,CAACmB,IAAnB,CAAtB;AACA,eAAOlB,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAEG;AAAvB,SAArB,CAAP;AACD,OAHD,CAGE,OAAOF,GAAP,EAAY;AACZ,eAAOd,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,KAAX;AAAkBG,UAAAA,KAAK,EAAED;AAAzB,SAArB,CAAP;AACD;;AAEH;AACE,aAAOd,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBG,QAAAA,KAAK,EAAE;AAAzB,OAArB,CAAP;AAtBJ;AAwBD,CA1BD","sourcesContent":["import dbConnect from '../../../utils/dbConnect'\nimport Article from '../../../models/Article'\n\ndbConnect()\n\nexport default async (req, res) => {\n  const { method } = req\n  switch (method) {\n    case \"GET\":\n      try {\n        const articles = await Article.find({})\n        const orderedArticles = articles.sort((a, b) => {\n          return new Date(a.date) - new Date(b.date)\n        })\n\n        return res.status(200).json({ success: true, data: orderedArticles })\n      } catch (err) {\n        return res.status(400).json({ success: false, error: err })\n      }\n\n    case \"POST\":\n      try {\n        const article = await Article.create(req.body)\n        return res.status(201).json({ success: true, data: article })\n      } catch (err) {\n        return res.status(400).json({ success: false, error: err })\n      }\n\n    default:\n      return res.status(400).json({ success: false, error: \"Unexpected case!\" })\n  }\n}"]},"metadata":{},"sourceType":"module"}