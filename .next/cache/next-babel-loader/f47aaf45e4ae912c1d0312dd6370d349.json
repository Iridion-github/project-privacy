{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/archive/ui/ReactSelect.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Form, Row, Col } from 'react-bootstrap';\nimport Select from 'react-select';\nexport var ReactSelect = function ReactSelect(props) {\n  //[CHECKPOINT] Cominciato con l'uso di react-select. Per ora si fallisce nel fargli prendere un tema.\n  var getStandardTheme = function getStandardTheme(theme) {\n    console.log(\"full theme:\", theme);\n    return _objectSpread(_objectSpread({}, theme), {}, {\n      //borderRadius: 100,\n      colors: _objectSpread(_objectSpread({}, theme.colors), {}, {\n        text: 'red !important' //primary25: 'hotpink',\n        //primary: 'black',\n\n      })\n    });\n  };\n\n  var _props$formGroupClass = props.formGroupClass,\n      formGroupClass = _props$formGroupClass === void 0 ? \"\" : _props$formGroupClass,\n      _props$formLabelClass = props.formLabelClass,\n      formLabelClass = _props$formLabelClass === void 0 ? \"\" : _props$formLabelClass,\n      _props$isMulti = props.isMulti,\n      isMulti = _props$isMulti === void 0 ? false : _props$isMulti,\n      _props$validationFunc = props.validationFunc,\n      validationFunc = _props$validationFunc === void 0 ? function () {\n    return true;\n  } : _props$validationFunc,\n      _props$label = props.label,\n      label = _props$label === void 0 ? \"\" : _props$label,\n      _props$textmuted = props.textmuted,\n      textmuted = _props$textmuted === void 0 ? false : _props$textmuted,\n      _props$onChange = props.onChange,\n      onChange = _props$onChange === void 0 ? function (val) {\n    return val;\n  } : _props$onChange,\n      _props$isDisabled = props.isDisabled,\n      isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled,\n      _props$selectableOpti = props.selectableOptions,\n      selectableOptions = _props$selectableOpti === void 0 ? [] : _props$selectableOpti,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? \"\" : _props$defaultValue,\n      placeholder = props.placeholder,\n      _props$getOptionValue = props.getOptionValue,\n      getOptionValue = _props$getOptionValue === void 0 ? function (el) {\n    return el && el !== \"\" ? el : null;\n  } : _props$getOptionValue,\n      _props$getOptionStyle = props.getOptionStyle,\n      getOptionStyle = _props$getOptionStyle === void 0 ? function () {\n    return {};\n  } : _props$getOptionStyle,\n      _props$getCustomTheme = props.getCustomTheme,\n      getCustomTheme = _props$getCustomTheme === void 0 ? null : _props$getCustomTheme;\n\n  var handleChange = function handleChange(val) {\n    if (validationFunc(val)) {\n      onChange(val);\n      return;\n    }\n  };\n\n  return __jsx(Form.Group, {\n    className: formGroupClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Label, {\n    className: formLabelClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, label), __jsx(Row, {\n    className: \"w-100 ml-0 mr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    md: 12,\n    className: \"pl-1 pr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, __jsx(Select, {\n    isMulti: isMulti,\n    options: selectableOptions,\n    disabled: isDisabled,\n    defaultValue: defaultValue,\n    placeholder: placeholder,\n    onChange: handleChange,\n    getOptionValue: getOptionValue,\n    theme: getCustomTheme ? getCustomTheme : getStandardTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }))), textmuted && __jsx(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 27\n    }\n  }, textmuted));\n};\n_c = ReactSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactSelect\");","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/archive/ui/ReactSelect.js"],"names":["Form","Row","Col","Select","ReactSelect","props","getStandardTheme","theme","console","log","colors","text","formGroupClass","formLabelClass","isMulti","validationFunc","label","textmuted","onChange","val","isDisabled","selectableOptions","defaultValue","placeholder","getOptionValue","el","getOptionStyle","getCustomTheme","handleChange"],"mappings":"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","sourcesContent":["import {\n    Form,\n    Row,\n    Col\n} from 'react-bootstrap'\nimport Select from 'react-select'\n\n\nexport const ReactSelect = function (props) {\n\n    //[CHECKPOINT] Cominciato con l'uso di react-select. Per ora si fallisce nel fargli prendere un tema.\n\n    const getStandardTheme = (theme) => {\n        console.log(\"full theme:\", theme)\n        return {\n            ...theme,\n            //borderRadius: 100,\n            colors: {\n                ...theme.colors,\n                text: 'red !important',\n                //primary25: 'hotpink',\n                //primary: 'black',\n            }\n        }\n    }\n\n    const {\n        formGroupClass = \"\",\n        formLabelClass = \"\",\n        isMulti = false,\n        validationFunc = () => true,\n        label = \"\",\n        textmuted = false,\n        onChange = val => val,\n        isDisabled = false,\n        selectableOptions = [],\n        defaultValue = \"\",\n        placeholder,\n        getOptionValue = el => (el && el !== \"\") ? el : null,\n        getOptionStyle = () => ({}),\n        getCustomTheme = null\n    } = props\n\n    const handleChange = (val) => {\n        if (validationFunc(val)) {\n            onChange(val)\n            return\n        }\n    }\n\n    return (\n        <Form.Group className={formGroupClass}>\n            <Form.Label className={formLabelClass}>{label}</Form.Label>\n            <Row className=\"w-100 ml-0 mr-0\">\n                <Col md={12} className=\"pl-1 pr-1\">\n                    <Select\n                        isMulti={isMulti}\n                        options={selectableOptions}\n                        disabled={isDisabled}\n                        defaultValue={defaultValue}\n                        placeholder={placeholder}\n                        onChange={handleChange}\n                        getOptionValue={getOptionValue}\n                        theme={getCustomTheme ? getCustomTheme : getStandardTheme}\n                    />\n                </Col>\n            </Row>\n            {textmuted && <Form.Text className=\"text-muted\">\n                {textmuted}\n            </Form.Text>}\n        </Form.Group>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}