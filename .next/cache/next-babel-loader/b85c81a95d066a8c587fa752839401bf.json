{"ast":null,"code":"var _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/archive/ui/TextInput.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Form } from 'react-bootstrap';\nexport const TextInput = function ({\n  formGroupClass = \"\",\n  formLabelClass = \"\",\n  colSpan = 12,\n  validationFunc = () => true,\n  label = \"\",\n  placeholderText = \"\",\n  textmuted = null,\n  value = \"\",\n  onChange = () => {},\n  isDisabled = false\n}) {\n  const handleChange = val => {\n    if (validationFunc(val)) {\n      onChange(val);\n      return;\n    }\n  };\n\n  return __jsx(Form.Group, {\n    className: formGroupClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Label, {\n    className: formLabelClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, label), __jsx(Form.Control, {\n    type: \"text\",\n    placeholder: placeholderText,\n    value: value,\n    onChange: event => handleChange(event.target.value),\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }), textmuted && __jsx(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, textmuted));\n};\n/*\n------------------------------[RETURN]------------------------------\n\n<TextInput\n        formGroupClass={\"ml-5\"}\n        formLabelClass={\"ml-5\"}\n        label={\"prova label\"}\n        placeholderText={\"prova placeholder\"}\n        textmuted={\"prova textmuted\"}\n        value={\"prova value\"}\n        onChange={() => {\n          console.log(\"prova callback\")\n          return true\n        }}\n        isDisabled={true}\n      />\n\n*/","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/archive/ui/TextInput.js"],"names":["Form","TextInput","formGroupClass","formLabelClass","colSpan","validationFunc","label","placeholderText","textmuted","value","onChange","isDisabled","handleChange","val","event","target"],"mappings":";;;AAAA,SACEA,IADF,QAEO,iBAFP;AAIA,OAAO,MAAMC,SAAS,GAAG,UAAU;AACjCC,EAAAA,cAAc,GAAG,EADgB;AAEjCC,EAAAA,cAAc,GAAG,EAFgB;AAGjCC,EAAAA,OAAO,GAAG,EAHuB;AAIjCC,EAAAA,cAAc,GAAG,MAAM,IAJU;AAKjCC,EAAAA,KAAK,GAAG,EALyB;AAMjCC,EAAAA,eAAe,GAAG,EANe;AAOjCC,EAAAA,SAAS,GAAG,IAPqB;AAQjCC,EAAAA,KAAK,GAAG,EARyB;AASjCC,EAAAA,QAAQ,GAAG,MAAM,CAAG,CATa;AAUjCC,EAAAA,UAAU,GAAG;AAVoB,CAAV,EAWtB;AAED,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC5B,QAAIR,cAAc,CAACQ,GAAD,CAAlB,EAAyB;AACvBH,MAAAA,QAAQ,CAACG,GAAD,CAAR;AACA;AACD;AACF,GALD;;AAOA,SACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAEX,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAEC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCG,KAAxC,CADF,EAEE,MAAC,IAAD,CAAM,OAAN;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAEC,eAFf;AAGE,IAAA,KAAK,EAAEE,KAHT;AAIE,IAAA,QAAQ,EAAGK,KAAD,IAAWF,YAAY,CAACE,KAAK,CAACC,MAAN,CAAaN,KAAd,CAJnC;AAKE,IAAA,QAAQ,EAAEE,UALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASGH,SAAS,IAAI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACXA,SADW,CAThB,CADF;AAeD,CAnCM;AAqCP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import {\n  Form\n} from 'react-bootstrap'\n\nexport const TextInput = function ({\n  formGroupClass = \"\",\n  formLabelClass = \"\",\n  colSpan = 12,\n  validationFunc = () => true,\n  label = \"\",\n  placeholderText = \"\",\n  textmuted = null,\n  value = \"\",\n  onChange = () => { },\n  isDisabled = false\n}) {\n\n  const handleChange = (val) => {\n    if (validationFunc(val)) {\n      onChange(val)\n      return\n    }\n  }\n\n  return (\n    <Form.Group className={formGroupClass}>\n      <Form.Label className={formLabelClass}>{label}</Form.Label>\n      <Form.Control\n        type=\"text\"\n        placeholder={placeholderText}\n        value={value}\n        onChange={(event) => handleChange(event.target.value)}\n        disabled={isDisabled}\n      />\n      {textmuted && <Form.Text className=\"text-muted\">\n        {textmuted}\n      </Form.Text>}\n    </Form.Group>\n  )\n}\n\n/*\n------------------------------[RETURN]------------------------------\n\n<TextInput\n        formGroupClass={\"ml-5\"}\n        formLabelClass={\"ml-5\"}\n        label={\"prova label\"}\n        placeholderText={\"prova placeholder\"}\n        textmuted={\"prova textmuted\"}\n        value={\"prova value\"}\n        onChange={() => {\n          console.log(\"prova callback\")\n          return true\n        }}\n        isDisabled={true}\n      />\n\n*/"]},"metadata":{},"sourceType":"module"}