{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\nimport it from 'date-fns/locale/it';\nregisterLocale('it', it);\nsetDefaultLocale('it');\nimport { Form, Row, Col, Badge } from 'react-bootstrap';\nexport var DateInput = function DateInput(_ref) {\n  var _ref$formGroupClass = _ref.formGroupClass,\n      formGroupClass = _ref$formGroupClass === void 0 ? \"\" : _ref$formGroupClass,\n      _ref$formLabelClass = _ref.formLabelClass,\n      formLabelClass = _ref$formLabelClass === void 0 ? \"\" : _ref$formLabelClass,\n      _ref$calendarClassNam = _ref.calendarClassName,\n      calendarClassName = _ref$calendarClassNam === void 0 ? \"\" : _ref$calendarClassNam,\n      _ref$datepickerClassN = _ref.datepickerClassName,\n      datepickerClassName = _ref$datepickerClassN === void 0 ? \"\" : _ref$datepickerClassN,\n      _ref$colSpan = _ref.colSpan,\n      colSpan = _ref$colSpan === void 0 ? 6 : _ref$colSpan,\n      _ref$validationFunc = _ref.validationFunc,\n      validationFunc = _ref$validationFunc === void 0 ? function () {\n    return true;\n  } : _ref$validationFunc,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? \"\" : _ref$label,\n      _ref$textmuted = _ref.textmuted,\n      textmuted = _ref$textmuted === void 0 ? false : _ref$textmuted,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? \"\" : _ref$value,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? function (val) {\n    return val;\n  } : _ref$onChange,\n      _ref$isDisabled = _ref.isDisabled,\n      isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled,\n      _ref$withTime = _ref.withTime,\n      withTime = _ref$withTime === void 0 ? false : _ref$withTime,\n      _ref$dateFormat = _ref.dateFormat,\n      dateFormat = _ref$dateFormat === void 0 ? 'dd/MM/yyyy' : _ref$dateFormat,\n      _ref$excludeDates = _ref.excludeDates,\n      excludeDates = _ref$excludeDates === void 0 ? [] : _ref$excludeDates,\n      _ref$filterDate = _ref.filterDate,\n      filterDate = _ref$filterDate === void 0 ? function () {\n    return true;\n  } : _ref$filterDate,\n      _ref$locale = _ref.locale,\n      locale = _ref$locale === void 0 ? \"it\" : _ref$locale,\n      _ref$maxDate = _ref.maxDate,\n      maxDate = _ref$maxDate === void 0 ? undefined : _ref$maxDate,\n      _ref$minDate = _ref.minDate,\n      minDate = _ref$minDate === void 0 ? undefined : _ref$minDate,\n      _ref$readOnly = _ref.readOnly,\n      readOnly = _ref$readOnly === void 0 ? false : _ref$readOnly,\n      _ref$required = _ref.required,\n      required = _ref$required === void 0 ? true : _ref$required,\n      _ref$removeDate = _ref.removeDate,\n      removeDate = _ref$removeDate === void 0 ? null : _ref$removeDate;\n  var props = {\n    formGroupClass: formGroupClass,\n    formLabelClass: formLabelClass,\n    calendarClassName: calendarClassName,\n    datepickerClassName: datepickerClassName,\n    colSpan: colSpan,\n    validationFunc: validationFunc,\n    label: label,\n    textmuted: textmuted,\n    value: value,\n    onChange: onChange,\n    isDisabled: isDisabled,\n    withTime: withTime,\n    dateFormat: dateFormat,\n    excludeDates: excludeDates,\n    filterDate: filterDate,\n    locale: locale,\n    maxDate: maxDate,\n    minDate: minDate,\n    readOnly: readOnly,\n    required: required,\n    removeDate: removeDate\n  };\n\n  var handleChange = function handleChange(val) {\n    if (validationFunc(val)) {\n      onChange(val);\n      return;\n    }\n  };\n\n  return __jsx(Form.Group, {\n    className: formGroupClass\n  }, __jsx(Form.Label, {\n    className: formLabelClass\n  }, label), __jsx(Row, {\n    className: \"w-100 ml-0 mr-0 justify-content-center\"\n  }, __jsx(Col, {\n    md: colSpan,\n    className: \"pl-1 pr-1\"\n  }, __jsx(Row, {\n    className: \"w-100 ml-0 mr-0 justify-content-center\"\n  }, __jsx(Col, {\n    md: typeof value === \"object\" ? 11 : 12,\n    className: \"pl-1 pr-1\"\n  }, __jsx(DatePicker, {\n    selected: value,\n    className: datepickerClassName + \" datepicker-input\" //input-class\n    ,\n    calendarClassName: calendarClassName,\n    onChange: function onChange(date) {\n      return handleChange(date);\n    },\n    showTimeInput: withTime,\n    dateFormat: dateFormat,\n    disabled: isDisabled ? true : false,\n    excludeDates: excludeDates,\n    filterDate: filterDate,\n    locale: locale,\n    maxDate: maxDate,\n    minDate: minDate,\n    readOnly: readOnly,\n    required: required\n  })), value && typeof value === \"object\" && __jsx(Col, {\n    md: 1,\n    className: \"pl-1 pr-1 text-right\"\n  }, __jsx(Badge, {\n    className: \"pt-1 pb-1 clickable-badge\",\n    variant: \"danger\",\n    onClick: removeDate\n  }, __jsx(\"i\", {\n    className: \"text-center align-items-center fas fa-times-circle\"\n  })))))), textmuted && __jsx(Form.Text, {\n    className: \"text-muted\"\n  }, textmuted));\n};\n/*\n------------------------------[RETURN]------------------------------\n      <DateInput\n        formGroupClass={\"\"}\n        formLabelClass={\"\"}\n        //colSpan={8}\n        label={\"prova label\"}\n        placeholderText={\"\"}\n        textmuted={\"prova textmuted\"}\n        value={startEs}\n        onChange={setStartEs}\n        validationFunc={el => el}\n        isDisabled={false}\n        calendarClassName={\"\"}\n        datepickerClassName={\"\"}\n        //withTime={true}\n        //dateFormat='MM/dd/yyyy'\n        excludeDates={[]}\n        filterDate={() => true}\n        locale={\"es\"}\n        //maxDate={new Date}\n        //minDate={new Date}\n        //readOnly={true}\n        required={true}\n      />\n*/","map":null,"metadata":{},"sourceType":"module"}