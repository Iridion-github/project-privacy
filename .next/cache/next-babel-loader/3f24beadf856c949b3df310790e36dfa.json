{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\nimport it from 'date-fns/locale/it';\nregisterLocale('it', it);\nsetDefaultLocale('it');\nimport { Form, Row, Col } from 'react-bootstrap';\nimport { DateInput } from './DateInput';\nexport const DateIntervalInput = function ({\n  //container\n  formLabelClass = \"\",\n  label = \"\",\n  textmuted = \"\",\n  colSpan_1 = 6,\n  colSpan_2 = 6,\n  dateFormat = 'dd/MM/yyyy',\n  //start\n  label1 = \"\",\n  value_1 = new Date(),\n  datepickerClassName_1 = \"\",\n  calendarClassName_1 = \"\",\n  onChange_1 = val => val,\n  withTime_1 = false,\n  isDisabled_1 = false,\n  filterDate_1 = () => true,\n  locale_1 = \"it\",\n  maxDate_1 = value_2,\n  minDate_1 = null,\n  readOnly_1 = false,\n  required_1 = false,\n  excludeDates_1 = [],\n  removeStartDate = null,\n  //end\n  label2 = \"\",\n  value_2 = new Date(),\n  datepickerClassName_2 = \"\",\n  calendarClassName_2 = \"\",\n  onChange_2 = val => val,\n  withTime_2 = false,\n  isDisabled_2 = false,\n  filterDate_2 = () => true,\n  locale_2 = \"it\",\n  maxDate_2 = null,\n  minDate_2 = value_1,\n  readOnly_2 = false,\n  required_2 = false,\n  excludeDates_2 = [],\n  removeEndDate = null\n}) {\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    className: \"w-100 ml-0 mr-0\"\n  }, label && label.length > 0 ? __jsx(\"h5\", {\n    className: formLabelClass + \" w-100 text-center\"\n  }, label) : \"\", label1 && label1.length > 0 ? __jsx(Col, {\n    md: 6,\n    className: \"pl-1 pr-1 justify-content-center\"\n  }, __jsx(\"h5\", {\n    className: \"w-100 text-center mb-0\"\n  }, label1)) : \"\", label2 && label2.length > 0 ? __jsx(Col, {\n    md: 6,\n    className: \"pl-1 pr-1 justify-content-center\"\n  }, __jsx(\"h5\", {\n    className: \"w-100 text-center mb-0\"\n  }, label2)) : \"\"), __jsx(Row, {\n    className: \"w-100 justify-content-center ml-0 mr-0\"\n  }, __jsx(Col, {\n    md: colSpan_1,\n    className: \"pl-1 pr-1\"\n  }, __jsx(DateInput, {\n    value: value_1,\n    datepickerClassName: datepickerClassName_1,\n    calendarClassName: calendarClassName_1,\n    onChange: onChange_1,\n    withTime: withTime_1,\n    dateFormat: dateFormat,\n    isDisabled: isDisabled_1,\n    excludeDates: excludeDates_1,\n    filterDate: filterDate_1,\n    locale: locale_1,\n    maxDate: maxDate_1,\n    minDate: minDate_1,\n    readOnly: readOnly_1,\n    required: required_1,\n    removeDate: removeStartDate\n  })), __jsx(Col, {\n    md: colSpan_2,\n    className: \"pl-1 pr-1\"\n  }, __jsx(DateInput, {\n    value: value_2,\n    datepickerClassName: datepickerClassName_2,\n    calendarClassName: calendarClassName_2,\n    onChange: onChange_2,\n    withTime: withTime_2,\n    dateFormat: dateFormat,\n    isDisabled: isDisabled_2,\n    excludeDates: excludeDates_2,\n    filterDate: filterDate_2,\n    locale: locale_2,\n    maxDate: maxDate_2,\n    minDate: minDate_2,\n    readOnly: readOnly_2,\n    required: required_2,\n    removeDate: removeEndDate\n  }))), textmuted && __jsx(Row, {\n    className: \"small-text text-muted w-100 justify-content-center ml-0 mr-0\"\n  }, textmuted));\n};\n/*\n------------------------------[RETURN]------------------------------\n<DateIntervalInput\n        //container\n        formLabelClass=\"\"\n        label=\"prova interval\"\n        textmuted=\"prova textmuted interval\"\n        colSpan_1={3}\n        colSpan_2={3}\n        //dateFormat={} //Mai passarlo come null o \"\", causa bugs di Datepicker.js\n        //start\n        value_1={startEs}\n        //datepickerClassName_1={null}\n        //calendarClassName_1={null}\n        onChange_1={setStartEs}\n        withTime_1={false}\n        //isDisabled_1={false}\n        filterDate_1={() => true}\n        //locale_1={null}\n        maxDate_1={endEs} //maxDate_1 e value_2 devono sempre essere bindati alla stessa variabile di stato!\n        //minDate_1={new Date}\n        readOnly_1={false}\n        required_1={false}\n        //excludeDates_1={null}\n        //end\n        value_2={endEs} //\n        datepickerClassName_2={null}\n        calendarClassName_2={null}\n        onChange_2={setEndEs}\n        withTime_2={false}\n        isDisabled_2={false}\n        filterDate_2={() => true}\n        locale_2={null}\n        //maxDate_2={new Date}\n        //minDate_2={new Date}\n        readOnly_2={false}\n        required_2={false}\n        excludeDates_2={null}\n      />\n\n*/","map":null,"metadata":{},"sourceType":"module"}