{"ast":null,"code":"import mongoose from 'mongoose';\nconst ReviewSchema = new mongoose.Schema({\n  id: {\n    type: String,\n    required: [true, 'id is required!'],\n    unique: true,\n    trim: true\n  },\n  glossary: {\n    type: Array\n  },\n  date: {\n    type: String,\n    required: [true, 'Date is required!'],\n    trim: true\n  },\n  authors: {\n    type: Array,\n    required: [true, 'Author is required!']\n  },\n  previewImg: {\n    type: String,\n    required: [true, 'previewImg is required!']\n  },\n  images: {\n    type: Array\n  },\n  ita: {\n    topic: {\n      type: String,\n      required: [true, 'Topic is required!'],\n      trim: true\n    },\n    tags: {\n      type: Array,\n      required: [true, 'At least one ita.tag is required!']\n    },\n    title: {\n      type: String,\n      required: [true, 'Title is required!'],\n      trim: true\n    },\n    subtitle: {\n      type: String,\n      required: [true, 'Subtitle is required!'],\n      trim: true\n    },\n    content: {\n      type: Array\n    }\n  },\n  eng: {\n    topic: {\n      type: String,\n      required: [true, 'Topic is required!'],\n      trim: true\n    },\n    tags: {\n      type: Array,\n      required: [true, 'At least one eng.tag is required!']\n    },\n    title: {\n      type: String,\n      required: [true, 'Title is required!'],\n      trim: true\n    },\n    subtitle: {\n      type: String,\n      required: [true, 'Subtitle is required!'],\n      trim: true\n    },\n    content: {\n      type: Array\n    }\n  }\n});\nexport default mongoose.models.Review || mongoose.model(\"Review\", ReviewSchema);","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/models/Review.js"],"names":["mongoose","ReviewSchema","Schema","id","type","String","required","unique","trim","glossary","Array","date","authors","previewImg","images","ita","topic","tags","title","subtitle","content","eng","models","Review","model"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,MAAMC,YAAY,GAAG,IAAID,QAAQ,CAACE,MAAb,CAAoB;AACvCC,EAAAA,EAAE,EAAE;AACFC,IAAAA,IAAI,EAAEC,MADJ;AAEFC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,iBAAP,CAFR;AAGFC,IAAAA,MAAM,EAAE,IAHN;AAIFC,IAAAA,IAAI,EAAE;AAJJ,GADmC;AAOvCC,EAAAA,QAAQ,EAAE;AACRL,IAAAA,IAAI,EAAEM;AADE,GAP6B;AAUvCC,EAAAA,IAAI,EAAE;AACJP,IAAAA,IAAI,EAAEC,MADF;AAEJC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,mBAAP,CAFN;AAGJE,IAAAA,IAAI,EAAE;AAHF,GAViC;AAevCI,EAAAA,OAAO,EAAE;AACPR,IAAAA,IAAI,EAAEM,KADC;AAEPJ,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,qBAAP;AAFH,GAf8B;AAmBvCO,EAAAA,UAAU,EAAE;AACVT,IAAAA,IAAI,EAAEC,MADI;AAEVC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,yBAAP;AAFA,GAnB2B;AAuBvCQ,EAAAA,MAAM,EAAE;AACNV,IAAAA,IAAI,EAAEM;AADA,GAvB+B;AA0BvCK,EAAAA,GAAG,EAAE;AACHC,IAAAA,KAAK,EAAE;AACLZ,MAAAA,IAAI,EAAEC,MADD;AAELC,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,oBAAP,CAFL;AAGLE,MAAAA,IAAI,EAAE;AAHD,KADJ;AAMHS,IAAAA,IAAI,EAAE;AACJb,MAAAA,IAAI,EAAEM,KADF;AAEJJ,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,mCAAP;AAFN,KANH;AAUHY,IAAAA,KAAK,EAAE;AACLd,MAAAA,IAAI,EAAEC,MADD;AAELC,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,oBAAP,CAFL;AAGLE,MAAAA,IAAI,EAAE;AAHD,KAVJ;AAeHW,IAAAA,QAAQ,EAAE;AACRf,MAAAA,IAAI,EAAEC,MADE;AAERC,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,uBAAP,CAFF;AAGRE,MAAAA,IAAI,EAAE;AAHE,KAfP;AAoBHY,IAAAA,OAAO,EAAE;AACPhB,MAAAA,IAAI,EAAEM;AADC;AApBN,GA1BkC;AAkDvCW,EAAAA,GAAG,EAAE;AACHL,IAAAA,KAAK,EAAE;AACLZ,MAAAA,IAAI,EAAEC,MADD;AAELC,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,oBAAP,CAFL;AAGLE,MAAAA,IAAI,EAAE;AAHD,KADJ;AAMHS,IAAAA,IAAI,EAAE;AACJb,MAAAA,IAAI,EAAEM,KADF;AAEJJ,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,mCAAP;AAFN,KANH;AAUHY,IAAAA,KAAK,EAAE;AACLd,MAAAA,IAAI,EAAEC,MADD;AAELC,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,oBAAP,CAFL;AAGLE,MAAAA,IAAI,EAAE;AAHD,KAVJ;AAeHW,IAAAA,QAAQ,EAAE;AACRf,MAAAA,IAAI,EAAEC,MADE;AAERC,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,uBAAP,CAFF;AAGRE,MAAAA,IAAI,EAAE;AAHE,KAfP;AAoBHY,IAAAA,OAAO,EAAE;AACPhB,MAAAA,IAAI,EAAEM;AADC;AApBN;AAlDkC,CAApB,CAArB;AA4EA,eAAeV,QAAQ,CAACsB,MAAT,CAAgBC,MAAhB,IAA0BvB,QAAQ,CAACwB,KAAT,CAAe,QAAf,EAAyBvB,YAAzB,CAAzC","sourcesContent":["import mongoose from 'mongoose'\n\nconst ReviewSchema = new mongoose.Schema({\n  id: {\n    type: String,\n    required: [true, 'id is required!'],\n    unique: true,\n    trim: true\n  },\n  glossary: {\n    type: Array\n  },\n  date: {\n    type: String,\n    required: [true, 'Date is required!'],\n    trim: true\n  },\n  authors: {\n    type: Array,\n    required: [true, 'Author is required!'],\n  },\n  previewImg: {\n    type: String,\n    required: [true, 'previewImg is required!']\n  },\n  images: {\n    type: Array\n  },\n  ita: {\n    topic: {\n      type: String,\n      required: [true, 'Topic is required!'],\n      trim: true\n    },\n    tags: {\n      type: Array,\n      required: [true, 'At least one ita.tag is required!'],\n    },\n    title: {\n      type: String,\n      required: [true, 'Title is required!'],\n      trim: true\n    },\n    subtitle: {\n      type: String,\n      required: [true, 'Subtitle is required!'],\n      trim: true\n    },\n    content: {\n      type: Array\n    }\n  },\n  eng: {\n    topic: {\n      type: String,\n      required: [true, 'Topic is required!'],\n      trim: true\n    },\n    tags: {\n      type: Array,\n      required: [true, 'At least one eng.tag is required!'],\n    },\n    title: {\n      type: String,\n      required: [true, 'Title is required!'],\n      trim: true\n    },\n    subtitle: {\n      type: String,\n      required: [true, 'Subtitle is required!'],\n      trim: true\n    },\n    content: {\n      type: Array\n    }\n  }\n})\n\nexport default mongoose.models.Review || mongoose.model(\"Review\", ReviewSchema)"]},"metadata":{},"sourceType":"module"}