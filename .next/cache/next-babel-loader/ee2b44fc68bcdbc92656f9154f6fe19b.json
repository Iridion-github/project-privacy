{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Card, Form } from 'react-bootstrap';\nimport { DateIntervalInput } from '../ui/DateIntervalInput';\nexport var FilterByData = function FilterByData(props) {\n  return __jsx(Card, {\n    className: \"pt-2 pb-2 mb-2\"\n  }, __jsx(Row, {\n    className: \"w-100 justify-content-center ml-0 mr-0 mb-4\"\n  }, __jsx(Card.Header, null, __jsx(\"h5\", null, \"Filtra per Data:\"))), __jsx(Row, {\n    className: \"w-100 justify-content-center ml-0 mr-0\"\n  }, __jsx(DateIntervalInput //container\n  , {\n    formLabelClass: \"\",\n    label: \"\",\n    textmuted: \"\",\n    colSpan_1: 6,\n    colSpan_2: 6 //dateFormat={} //Mai passarlo come null o \"\", causa bugs di Datepicker.js\n    //start\n    ,\n    label1: \"Da:\",\n    value_1: props.startDate,\n    datepickerClassName_1: \"text-center\" //calendarClassName_1={null}\n    ,\n    onChange_1: props.handleChangeStartDate,\n    withTime_1: false //isDisabled_1={false}\n    ,\n    filterDate_1: function filterDate_1() {\n      return true;\n    } //locale_1={null}\n    ,\n    maxDate_1: props.endDate //maxDate_1 e value_2 devono sempre essere bindati alla stessa variabile di stato!\n    //minDate_1={new Date}\n    ,\n    readOnly_1: false,\n    required_1: false //excludeDates_1={null}\n    ,\n    removeStartDate: props.removeStartDate //end\n    ,\n    label2: \"A:\",\n    value_2: props.endDate //\n    ,\n    datepickerClassName_2: \"text-center\",\n    calendarClassName_2: null,\n    onChange_2: props.handleChangeEndDate,\n    withTime_2: false,\n    isDisabled_2: false,\n    filterDate_2: function filterDate_2() {\n      return true;\n    },\n    locale_2: null //maxDate_2={new Date}\n    //minDate_2={new Date}\n    ,\n    readOnly_2: false,\n    required_2: false,\n    excludeDates_2: null,\n    removeEndDate: props.removeEndDate\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}