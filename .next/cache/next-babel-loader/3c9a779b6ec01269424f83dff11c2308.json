{"ast":null,"code":"var _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/areaTest/Results.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Card, Button, Table } from 'react-bootstrap';\nimport { ResultRow } from './ResultRow';\nimport { ContactsBtn } from '../buttons/ContactsBtn';\nexport const Results = function (props) {\n  const getUserAnswerText = answers => {\n    const userAnswers = [];\n    answers.forEach(elem => {\n      if (elem.selected === true) userAnswers.push(elem);\n    });\n    return userAnswers;\n  };\n\n  const getCorrectAnswer = answers => {\n    const rightAnswers = [];\n    answers.forEach(elem => {\n      if (elem.value === true) rightAnswers.push(elem);\n    });\n    return rightAnswers;\n  };\n\n  const getUserCorrectAnswer = answers => {\n    const rightSelectedAnswers = [];\n    answers.forEach(elem => {\n      if (elem.value === true && elem.selected === true) rightSelectedAnswers.push(elem);\n    });\n    return rightSelectedAnswers;\n  };\n\n  const getPoints = answers => {\n    let points = 0;\n    answers.forEach(elem => {\n      if (elem.value === true && elem.selected === true) points += elem.points;\n    });\n    return points;\n  };\n\n  return __jsx(Row, {\n    className: \"w-100 text-center align-items-center justify-content-center m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    className: \"w-100 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    md: {\n      span: 4\n    },\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }), __jsx(Col, {\n    md: {\n      span: 1\n    },\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    block: true,\n    variant: \"info\",\n    onClick: () => props.setShowResults(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-long-arrow-alt-left mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }), \"I Test\")), __jsx(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      fontSize: \"1.5rem\",\n      fontWeight: \"600\",\n      minWidth: \"285px !important\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Argomento: \", props.selectedTopic))), __jsx(Row, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    md: {\n      span: 6,\n      offset: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    className: \"w-100 p-2 grey-border justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(Card.Img, {\n    variant: \"top\",\n    src: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Title, {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, \"Risultati del Test: \"), __jsx(Row, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, __jsx(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, __jsx(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    size: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }, __jsx(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }, __jsx(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 23\n    }\n  }, __jsx(\"th\", {\n    scope: \"col\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"Domanda\"), __jsx(\"th\", {\n    scope: \"col\",\n    key: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"Tua Risposta\"), __jsx(\"th\", {\n    scope: \"col\",\n    key: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, \"Risposta Corretta\"), props.selectedTest.pointsSystem && __jsx(\"th\", {\n    scope: \"col\",\n    key: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 61\n    }\n  }, \"Punti\"))), __jsx(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, props.results.map((elem, index) => __jsx(ResultRow, {\n    key: index,\n    questionNumber: index + 1,\n    questionText: elem.text,\n    correctAnswer: getCorrectAnswer(elem.answers),\n    userAnswer: getUserAnswerText(elem.answers),\n    color: getUserCorrectAnswer(elem.answers).length > 0 ? \"green\" : \"red\",\n    points: props.selectedTest.pointsSystem ? getPoints(elem.answers) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  })))))), __jsx(Row, {\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, __jsx(ContactsBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  })))))));\n};","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/areaTest/Results.js"],"names":["Row","Col","Card","Button","Table","ResultRow","ContactsBtn","Results","props","getUserAnswerText","answers","userAnswers","forEach","elem","selected","push","getCorrectAnswer","rightAnswers","value","getUserCorrectAnswer","rightSelectedAnswers","getPoints","points","span","setShowResults","fontSize","fontWeight","minWidth","selectedTopic","offset","selectedTest","pointsSystem","results","map","index","text","length"],"mappings":"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","sourcesContent":["import {\n  Row,\n  Col,\n  Card,\n  Button,\n  Table\n} from 'react-bootstrap'\nimport { ResultRow } from './ResultRow'\nimport { ContactsBtn } from '../buttons/ContactsBtn'\nexport const Results = function (props) {\n\n  const getUserAnswerText = (answers) => {\n    const userAnswers = []\n    answers.forEach(elem => { if (elem.selected === true) userAnswers.push(elem) })\n    return userAnswers\n  }\n\n  const getCorrectAnswer = (answers) => {\n    const rightAnswers = []\n    answers.forEach(elem => { if (elem.value === true) rightAnswers.push(elem) })\n    return rightAnswers\n  }\n\n  const getUserCorrectAnswer = (answers) => {\n    const rightSelectedAnswers = []\n    answers.forEach(elem => { if (elem.value === true && elem.selected === true) rightSelectedAnswers.push(elem) })\n    return rightSelectedAnswers\n  }\n\n  const getPoints = (answers) => {\n    let points = 0\n    answers.forEach(elem => { if (elem.value === true && elem.selected === true) points += elem.points })\n    return points\n  }\n\n  return (\n    <Row className=\"w-100 text-center align-items-center justify-content-center m-auto\">\n      <Row className=\"w-100 mb-3\">\n        <Col md={{ span: 4 }} className=\"\">\n        </Col>\n        <Col md={{ span: 1 }} className=\"d-flex align-items-center\">\n          <Button\n            block\n            variant=\"info\"\n            onClick={() => props.setShowResults(false)}\n          >\n            <i className=\"fas fa-long-arrow-alt-left mr-2\"></i>\n            I Test\n          </Button>\n        </Col>\n        <Col md={2}>\n          <div style={{ fontSize: \"1.5rem\", fontWeight: \"600\", minWidth: \"285px !important\" }}>Argomento: {props.selectedTopic}</div>\n        </Col>\n      </Row>\n\n      <Row className=\"w-100\">\n        <Col md={{ span: 6, offset: 3 }}>\n          <Card className=\"w-100 p-2 grey-border justify-content-center\" >\n            <Card.Img variant=\"top\" src=\"\" />\n            <Card.Body>\n              <Card.Title className=\"text-center\">Risultati del Test: </Card.Title>\n              <Row className=\"mb-4\">\n                <Col>\n                  <Table striped bordered hover size=\"sm\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\" key=\"1\">Domanda</th>\n                        <th scope=\"col\" key=\"2\">Tua Risposta</th>\n                        <th scope=\"col\" key=\"3\">Risposta Corretta</th>\n                        {props.selectedTest.pointsSystem && <th scope=\"col\" key=\"4\">Punti</th>}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {/* \n                    [PROMEMORIA]\n                    L'elem di props.result.map() è un oggetto che contiene text (testo della domanda) ed answers: un array che contiene oggetti con le props[text, selected, value].\n                  */}\n                      {props.results.map((elem, index) => (\n                        <ResultRow\n                          key={index}\n                          questionNumber={index + 1}\n                          questionText={elem.text}\n                          correctAnswer={getCorrectAnswer(elem.answers)}\n                          userAnswer={getUserAnswerText(elem.answers)}\n                          color={getUserCorrectAnswer(elem.answers).length > 0 ? \"green\" : \"red\"}\n                          points={props.selectedTest.pointsSystem ? getPoints(elem.answers) : null}\n                        />\n                      ))}\n                    </tbody>\n                  </Table>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-center\">\n                <ContactsBtn />\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Row >\n  )\n}"]},"metadata":{},"sourceType":"module"}