{"ast":null,"code":"var _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/reviews/ReviewPreview.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { Row, Col, Card, Button, Image, Nav, Badge } from 'react-bootstrap';\nimport { datePrettifier } from '../../utils/date';\nexport const ReviewPreview = function (props) {\n  const {\n    0: language,\n    1: setLanguage\n  } = useState(\"ita\");\n  return __jsx(Card, {\n    className: \"w-100 mb-4 grey-border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(Nav, {\n    variant: \"tabs\",\n    defaultActiveKey: \"#ita\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, __jsx(Nav.Link, {\n    active: language === \"ita\",\n    href: \"#ita\",\n    onClick: () => setLanguage(\"ita\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, __jsx(Image, {\n    src: \"/bandiere/ita.png\",\n    className: \"black-border flag-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 98\n    }\n  }))), __jsx(Nav.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, __jsx(Nav.Link, {\n    active: language === \"eng\",\n    href: \"#eng\",\n    onClick: () => setLanguage(\"eng\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, \" \", __jsx(Image, {\n    src: \"/bandiere/GB.png\",\n    className: \"black-border flag-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 100\n    }\n  }))))), __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Img, {\n    className: \"article-preview-img\",\n    variant: \"top\",\n    src: props.review.previewImg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }), __jsx(Card.Title, {\n    className: \"article-preview-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, language === \"ita\" ? props.review.ita.title : props.review.eng.title), __jsx(Card.Text, {\n    className: \"article-preview-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, language === \"ita\" ? props.review.ita.subtitle : props.review.eng.subtitle), __jsx(Row, {\n    className: \"justify-content-end pr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    size: \"md\",\n    variant: \"info\",\n    onClick: () => props.setOpenedReview(props.review.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, language === \"ita\" ? \"Leggi \" : \"Read \", __jsx(\"i\", {\n    className: \"ml-2 fab fa-readme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 54\n    }\n  })))), __jsx(Card.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    md: 5,\n    className: \"pr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, __jsx(\"small\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, props.review.authors.map((author, i) => {\n    return __jsx(Row, {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }\n    }, props.review.authors.length > 1 ? \" • \" + author + \"\\n\" : \" • \" + author, \" \");\n  }))), __jsx(Col, {\n    md: 3,\n    className: \"p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \" \", props.review[language].tags.map(tag => __jsx(Badge, {\n    variant: \"info\",\n    className: \"mr-1\",\n    key: tag,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 83\n    }\n  }, tag)))), __jsx(Col, {\n    md: 4,\n    className: \"text-right p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, __jsx(\"small\", {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \" \", datePrettifier(props.review.date, language), \" \")))));\n};","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/reviews/ReviewPreview.js"],"names":["useState","Row","Col","Card","Button","Image","Nav","Badge","datePrettifier","ReviewPreview","props","language","setLanguage","review","previewImg","ita","title","eng","subtitle","setOpenedReview","id","authors","map","author","i","length","tags","tag","date"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  Image,\n  Nav,\n  Badge\n} from 'react-bootstrap'\nimport { datePrettifier } from '../../utils/date'\n\nexport const ReviewPreview = function (props) {\n  const [language, setLanguage] = useState(\"ita\")\n\n  return (\n    <Card className=\"w-100 mb-4 grey-border\">\n      <Card.Header>\n        <Nav variant=\"tabs\" defaultActiveKey=\"#ita\">\n          <Nav.Item>\n            <Nav.Link active={language === \"ita\"} href=\"#ita\" onClick={() => setLanguage(\"ita\")}><Image src=\"/bandiere/ita.png\" className=\"black-border flag-icon\" /></Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link active={language === \"eng\"} href=\"#eng\" onClick={() => setLanguage(\"eng\")} > <Image src=\"/bandiere/GB.png\" className=\"black-border flag-icon\" /></Nav.Link>\n          </Nav.Item>\n        </Nav>\n      </Card.Header>\n      <Card.Body>\n        <Card.Img className=\"article-preview-img\" variant=\"top\" src={props.review.previewImg} />\n        <Card.Title className=\"article-preview-title\">{language === \"ita\" ? props.review.ita.title : props.review.eng.title}</Card.Title>\n        <Card.Text className=\"article-preview-subtitle\">\n          {language === \"ita\" ? props.review.ita.subtitle : props.review.eng.subtitle}\n        </Card.Text>\n        <Row className=\"justify-content-end pr-3\">\n          <Button\n            size=\"md\"\n            variant=\"info\"\n            onClick={() => props.setOpenedReview(props.review.id)}\n          >\n            {language === \"ita\" ? \"Leggi \" : \"Read \"}<i className=\"ml-2 fab fa-readme\"></i>\n          </Button>\n        </Row>\n      </Card.Body>\n      <Card.Footer>\n        <Row>\n          <Col md={5} className=\"pr-0\">\n            <small className=\"text-muted\">\n              {props.review.authors.map((author, i) => {\n                return (<Row key={i}>{props.review.authors.length > 1 ? \" • \" + author + \"\\n\" : \" • \" + author} </Row>)\n              })}\n            </small>\n          </Col>\n          <Col md={3} className=\"p-0\">\n            <span className=\"text-muted\"> {props.review[language].tags.map(tag => <Badge variant=\"info\" className=\"mr-1\" key={tag}>{tag}</Badge>)}</span>\n          </Col>\n          <Col md={4} className=\"text-right p-0\">\n            <small className=\"text-muted\"> {datePrettifier(props.review.date, language)} </small>\n          </Col>\n        </Row>\n      </Card.Footer>\n    </Card >\n  )\n}"]},"metadata":{},"sourceType":"module"}