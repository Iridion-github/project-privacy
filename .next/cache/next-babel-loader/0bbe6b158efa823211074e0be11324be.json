{"ast":null,"code":"var _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/articles/ArticleRead.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport stringToHTML from 'html-react-parser';\nimport { useLanguage } from '../../context/siteLanguageContext'; //context\n\nimport { Row, Col, Card, Button, ButtonToolbar, ButtonGroup, Image } from 'react-bootstrap';\nimport { ArticleContent } from './ArticleContent';\nimport { datePrettifier } from '../../utils/date';\nexport var ArticleRead = function ArticleRead(props) {\n  _s();\n\n  var siteLanguage = useLanguage(); //context\n\n  var _useState = useState(\"ita\"),\n      language = _useState[0],\n      setLanguage = _useState[1];\n\n  return __jsx(Row, {\n    className: \"w-100 m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    className: \"w-100 mb-4 p-1 grey-border\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    className: \"\",\n    variant: \"info\",\n    href: \"/articoli\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-long-arrow-alt-left mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), \" \", siteLanguage === \"ita\" ? \"Torna agli Articoli\" : \"Back to Articles\"), __jsx(Card.Header, {\n    className: \"pb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    md: {\n      span: 12,\n      offset: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, __jsx(\"h3\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 34\n    }\n  }, props.article[language].title))))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, __jsx(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, __jsx(\"h6\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 19\n    }\n  }, \"\\xAB\", props.article[language].subtitle, \"\\xBB\"))))), __jsx(Row, {\n    className: \"w-100 ml-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    md: 9,\n    className: \"pr-0 pl-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    className: \"w-100 mr-0 ml-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, __jsx(Col, {\n    md: 6,\n    className: \"fake-navbar-item pr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 19\n    }\n  }, language === \"ita\" ? props.article.authors.length < 2 ? \"Autore: \" : \"Autori: \" : props.article.authors.length < 2 ? \"Author: \" : \"Authors: \"), props.article.authors.map(function (author, i) {\n    return i > 0 ? stringToHTML(\"<span className=\\\"pb-1\\\"> | </span> \".concat(author)) : author;\n  })), __jsx(Col, {\n    md: 6,\n    className: \"fake-navbar-item pr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, __jsx(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }\n  }, siteLanguage === \"ita\" ? \"Data: \" : \"Date: \"), \" \", datePrettifier(props.article.date, language, true)))), __jsx(Col, {\n    md: {\n      span: 1,\n      offset: 2\n    },\n    className: \"m-0 p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, __jsx(ButtonToolbar, {\n    className: \"height-100 w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, __jsx(ButtonGroup, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }, __jsx(Button, {\n    className: \"btn btn-light grey-border\",\n    active: language === \"ita\",\n    href: \"#ita\",\n    onClick: function onClick() {\n      return setLanguage(\"ita\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }\n  }, __jsx(Image, {\n    src: \"/bandiere/ita.png\",\n    className: \"black-border flag-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  })), __jsx(Button, {\n    className: \"btn btn-light grey-border\",\n    active: language === \"eng\",\n    href: \"#eng\",\n    onClick: function onClick() {\n      return setLanguage(\"eng\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, __jsx(Image, {\n    src: \"/bandiere/GB.png\",\n    className: \"black-border flag-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }))))))), __jsx(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, __jsx(Col, {\n    md: 12,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, __jsx(ArticleContent, {\n    glossarywords: props.glossarywords //array preso dal db\n    ,\n    glossary: props.article.glossary //glossario dell'articolo aperto\n    ,\n    paragraphs: props.article[language].content,\n    previewImg: props.article.previewImg,\n    images: props.article.images,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }))))));\n};\n\n_s(ArticleRead, \"xjNyuvFninSbVOsznmeF8ehAQfY=\", false, function () {\n  return [useLanguage];\n});\n\n_c = ArticleRead;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleRead\");","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/articles/ArticleRead.js"],"names":["useState","stringToHTML","useLanguage","Row","Col","Card","Button","ButtonToolbar","ButtonGroup","Image","ArticleContent","datePrettifier","ArticleRead","props","siteLanguage","language","setLanguage","span","offset","article","title","subtitle","authors","length","map","author","i","date","glossarywords","glossary","content","previewImg","images"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport stringToHTML from 'html-react-parser'\nimport { useLanguage } from '../../context/siteLanguageContext' //context\nimport {\n  Row,\n  Col,\n  Card,\n  Button,\n  ButtonToolbar,\n  ButtonGroup,\n  Image\n} from 'react-bootstrap'\nimport { ArticleContent } from './ArticleContent'\nimport { datePrettifier } from '../../utils/date'\n\n\nexport const ArticleRead = function (props) {\n  const siteLanguage = useLanguage() //context\n  const [language, setLanguage] = useState(\"ita\")\n  return (\n    <Row className=\"w-100 m-auto\">\n      <Card className=\"w-100 mb-4 p-1 grey-border\">\n        <Button\n          className=\"\"\n          variant=\"info\"\n          href=\"/articoli\"\n        >\n          <i className=\"fas fa-long-arrow-alt-left mr-2\"></i> {siteLanguage === \"ita\" ? \"Torna agli Articoli\" : \"Back to Articles\"}\n        </Button>\n        <Card.Header className=\"pb-0\">\n          <Row>\n            <Col md={{ span: 12, offset: 0 }}>\n              <Row>\n                <h3 className=\"\"><strong>{props.article[language].title}</strong></h3>\n              </Row>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={12}>\n              <Row>\n                <Col md={12}>\n                  <h6 className=\"\">«{props.article[language].subtitle}»</h6>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n          <Row className=\"w-100 ml-0\">\n            <Col md={9} className=\"pr-0 pl-0\">\n              <Row className=\"w-100 mr-0 ml-0\">\n                <Col\n                  md={6}\n                  className=\"fake-navbar-item pr-0\"\n                >\n                  <strong>\n                    {language === \"ita\"\n                      ? (props.article.authors.length < 2) ? \"Autore: \" : \"Autori: \"\n                      : (props.article.authors.length < 2) ? \"Author: \" : \"Authors: \"}\n                  </strong>\n                  {props.article.authors.map((author, i) => {\n                    return i > 0 ? stringToHTML(`<span className=\"pb-1\"> | </span> ${author}`) : author\n                  })}\n                </Col>\n                <Col\n                  md={6}\n                  className=\"fake-navbar-item pr-0\"\n                >\n                  <strong>{siteLanguage === \"ita\" ? \"Data: \" : \"Date: \"}</strong> {datePrettifier(props.article.date, language, true)}\n                </Col>\n              </Row>\n            </Col>\n            <Col md={{ span: 1, offset: 2 }} className=\"m-0 p-0\">\n              <ButtonToolbar className=\"height-100 w-100\" >\n                <ButtonGroup className=\"w-100\">\n                  <Button\n                    className=\"btn btn-light grey-border\"\n                    active={language === \"ita\"}\n                    href=\"#ita\"\n                    onClick={() => setLanguage(\"ita\")}>\n                    <Image src=\"/bandiere/ita.png\" className=\"black-border flag-icon\" />\n                  </Button>\n                  <Button\n                    className=\"btn btn-light grey-border\"\n                    active={language === \"eng\"}\n                    href=\"#eng\"\n                    onClick={() => setLanguage(\"eng\")}\n                  >\n                    <Image src=\"/bandiere/GB.png\" className=\"black-border flag-icon\" />\n                  </Button>\n                </ButtonGroup>\n              </ButtonToolbar>\n            </Col>\n          </Row>\n        </Card.Header>\n        <Card.Body>\n          <Row>\n            <Col md={12} className=\"\">\n              <ArticleContent\n                glossarywords={props.glossarywords} //array preso dal db\n                glossary={props.article.glossary} //glossario dell'articolo aperto\n                paragraphs={props.article[language].content}\n                previewImg={props.article.previewImg}\n                images={props.article.images}\n              />\n            </Col>\n          </Row>\n        </Card.Body>\n      </Card >\n    </Row>\n  )\n}"]},"metadata":{},"sourceType":"module"}