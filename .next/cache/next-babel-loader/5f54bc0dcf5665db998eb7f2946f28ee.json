{"ast":null,"code":"var _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/archive/filterSections/FilterByData.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Row, Col, Card, Form } from 'react-bootstrap';\nimport { DateIntervalInput } from '../ui/DateIntervalInput';\nexport const FilterByData = function (props) {\n  return __jsx(Card, {\n    className: \"pt-2 pb-2 mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    className: \"w-100 ml-0 mr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, \"Filtra per Autorit\\xE0:\"))), __jsx(Row, {\n    className: \"w-100 ml-0 mr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, __jsx(DateIntervalInput //container\n  , {\n    formLabelClass: \"\",\n    label: \"\",\n    textmuted: \"\",\n    colSpan_1: 6,\n    colSpan_2: 6 //dateFormat={} //Mai passarlo come null o \"\", causa bugs di Datepicker.js\n    //start\n    ,\n    label1: \"Da:\",\n    value_1: props.startDate,\n    datepickerClassName_1: \"text-center\" //calendarClassName_1={null}\n    ,\n    onChange_1: props.handleChangeStartDate,\n    withTime_1: false //isDisabled_1={false}\n    ,\n    filterDate_1: () => true //locale_1={null}\n    ,\n    maxDate_1: props.endDate //maxDate_1 e value_2 devono sempre essere bindati alla stessa variabile di stato!\n    //minDate_1={new Date}\n    ,\n    readOnly_1: false,\n    required_1: false //excludeDates_1={null}\n    ,\n    removeStartDate: props.removeStartDate //end\n    ,\n    label2: \"A:\",\n    value_2: props.endDate //\n    ,\n    datepickerClassName_2: \"text-center\",\n    calendarClassName_2: null,\n    onChange_2: props.handleChangeEndDate,\n    withTime_2: false,\n    isDisabled_2: false,\n    filterDate_2: () => true,\n    locale_2: null //maxDate_2={new Date}\n    //minDate_2={new Date}\n    ,\n    readOnly_2: false,\n    required_2: false,\n    excludeDates_2: null,\n    removeEndDate: props.removeEndDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/archive/filterSections/FilterByData.js"],"names":["Row","Col","Card","Form","DateIntervalInput","FilterByData","props","startDate","handleChangeStartDate","endDate","removeStartDate","handleChangeEndDate","removeEndDate"],"mappings":";;;AAAA,SACEA,GADF,EAEEC,GAFF,EAGEC,IAHF,EAIEC,IAJF,QAKO,iBALP;AAMA,SAASC,iBAAT,QAAkC,yBAAlC;AAGA,OAAO,MAAMC,YAAY,GAAG,UAAUC,KAAV,EAAiB;AAE3C,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CADF,CADF,EAME,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD,CACE;AADF;AAEE,IAAA,cAAc,EAAC,EAFjB;AAGE,IAAA,KAAK,EAAC,EAHR;AAIE,IAAA,SAAS,EAAC,EAJZ;AAKE,IAAA,SAAS,EAAE,CALb;AAME,IAAA,SAAS,EAAE,CANb,CAOE;AACA;AARF;AASE,IAAA,MAAM,EAAE,KATV;AAUE,IAAA,OAAO,EAAEA,KAAK,CAACC,SAVjB;AAWE,IAAA,qBAAqB,EAAE,aAXzB,CAYE;AAZF;AAaE,IAAA,UAAU,EAAED,KAAK,CAACE,qBAbpB;AAcE,IAAA,UAAU,EAAE,KAdd,CAeE;AAfF;AAgBE,IAAA,YAAY,EAAE,MAAM,IAhBtB,CAiBE;AAjBF;AAkBE,IAAA,SAAS,EAAEF,KAAK,CAACG,OAlBnB,CAkB4B;AAC1B;AAnBF;AAoBE,IAAA,UAAU,EAAE,KApBd;AAqBE,IAAA,UAAU,EAAE,KArBd,CAsBE;AAtBF;AAuBE,IAAA,eAAe,EAAEH,KAAK,CAACI,eAvBzB,CAwBE;AAxBF;AAyBE,IAAA,MAAM,EAAE,IAzBV;AA0BE,IAAA,OAAO,EAAEJ,KAAK,CAACG,OA1BjB,CA0B0B;AA1B1B;AA2BE,IAAA,qBAAqB,EAAE,aA3BzB;AA4BE,IAAA,mBAAmB,EAAE,IA5BvB;AA6BE,IAAA,UAAU,EAAEH,KAAK,CAACK,mBA7BpB;AA8BE,IAAA,UAAU,EAAE,KA9Bd;AA+BE,IAAA,YAAY,EAAE,KA/BhB;AAgCE,IAAA,YAAY,EAAE,MAAM,IAhCtB;AAiCE,IAAA,QAAQ,EAAE,IAjCZ,CAkCE;AACA;AAnCF;AAoCE,IAAA,UAAU,EAAE,KApCd;AAqCE,IAAA,UAAU,EAAE,KArCd;AAsCE,IAAA,cAAc,EAAE,IAtClB;AAuCE,IAAA,aAAa,EAAEL,KAAK,CAACM,aAvCvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADF;AAoDD,CAtDM","sourcesContent":["import {\n  Row,\n  Col,\n  Card,\n  Form\n} from 'react-bootstrap'\nimport { DateIntervalInput } from '../ui/DateIntervalInput'\n\n\nexport const FilterByData = function (props) {\n\n  return (\n    <Card className=\"pt-2 pb-2 mb-2\">\n      <Row className=\"w-100 ml-0 mr-0\">\n        <Card.Header>\n          <h5>Filtra per Autorit√†:</h5>\n        </Card.Header>\n      </Row>\n      <Row className=\"w-100 ml-0 mr-0\">\n        <DateIntervalInput\n          //container\n          formLabelClass=\"\"\n          label=\"\"\n          textmuted=\"\"\n          colSpan_1={6}\n          colSpan_2={6}\n          //dateFormat={} //Mai passarlo come null o \"\", causa bugs di Datepicker.js\n          //start\n          label1={\"Da:\"}\n          value_1={props.startDate}\n          datepickerClassName_1={\"text-center\"}\n          //calendarClassName_1={null}\n          onChange_1={props.handleChangeStartDate}\n          withTime_1={false}\n          //isDisabled_1={false}\n          filterDate_1={() => true}\n          //locale_1={null}\n          maxDate_1={props.endDate} //maxDate_1 e value_2 devono sempre essere bindati alla stessa variabile di stato!\n          //minDate_1={new Date}\n          readOnly_1={false}\n          required_1={false}\n          //excludeDates_1={null}\n          removeStartDate={props.removeStartDate}\n          //end\n          label2={\"A:\"}\n          value_2={props.endDate} //\n          datepickerClassName_2={\"text-center\"}\n          calendarClassName_2={null}\n          onChange_2={props.handleChangeEndDate}\n          withTime_2={false}\n          isDisabled_2={false}\n          filterDate_2={() => true}\n          locale_2={null}\n          //maxDate_2={new Date}\n          //minDate_2={new Date}\n          readOnly_2={false}\n          required_2={false}\n          excludeDates_2={null}\n          removeEndDate={props.removeEndDate}\n        />\n      </Row>\n    </Card>\n  )\n}"]},"metadata":{},"sourceType":"module"}