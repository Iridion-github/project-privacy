{"ast":null,"code":"var _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/areaTest/Quiz.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\nimport { QuizTimer } from './QuizTimer';\nimport { Question } from './Question';\nexport const Quiz = function (props) {\n  const {\n    0: questionCounter,\n    1: setQuestionCounter\n  } = useState(1);\n  const {\n    0: allUserAnswers,\n    1: setAllUserAnswers\n  } = useState(props.selectedTest.questions);\n  return __jsx(Row, {\n    className: \"w-100 text-center align-items-center justify-content-center m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    className: \"w-100 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    md: {\n      span: 4\n    },\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }), __jsx(Col, {\n    md: {\n      span: 1\n    },\n    className: \"d-flex align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    block: true,\n    variant: \"info\",\n    onClick: () => props.setSelectedTopic(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-long-arrow-alt-left mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }), \"I Test\")), __jsx(Col, {\n    md: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: {\n      fontSize: \"1.5rem\",\n      fontWeight: \"600\",\n      minWidth: \"285px !important\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"Argomento: \", props.selectedTopic))), __jsx(Row, {\n    className: \"w-100 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    md: {\n      span: 3\n    },\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), __jsx(Col, {\n    md: {\n      span: 1\n    },\n    className: \"d-flex align-items-center justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, questionCounter > 1 && __jsx(Button, {\n    block: true,\n    size: \"lg\",\n    variant: \"info\",\n    onClick: () => setQuestionCounter(questionCounter - 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-long-arrow-alt-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  }))), __jsx(Col, {\n    md: 4,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(Question, {\n    questionNumber: questionCounter,\n    question: props.selectedTest.questions[questionCounter - 1].text,\n    answers: props.selectedTest.questions[questionCounter - 1].answers,\n    allUserAnswers: allUserAnswers,\n    setAllUserAnswers: setAllUserAnswers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), __jsx(Col, {\n    md: 1,\n    className: \"d-flex align-items-center justify-content-start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, questionCounter < props.selectedTest.questions.length && __jsx(Button, {\n    block: true,\n    size: \"lg\",\n    variant: \"info\",\n    onClick: () => setQuestionCounter(questionCounter + 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-long-arrow-alt-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  })), questionCounter === props.selectedTest.questions.length && __jsx(Button, {\n    block: true,\n    size: \"lg\",\n    variant: \"success\",\n    onClick: () => {\n      props.setShowResults(true);\n      props.setSelectedTopic(null);\n      props.setResults(allUserAnswers);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, __jsx(Col, {\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Risultati\"), __jsx(Col, {\n    sm: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-tasks ml-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  })))))), __jsx(QuizTimer, {\n    milliseconds: props.selectedTest.timeLimit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/areaTest/Quiz.js"],"names":["useState","Row","Col","Button","QuizTimer","Question","Quiz","props","questionCounter","setQuestionCounter","allUserAnswers","setAllUserAnswers","selectedTest","questions","span","setSelectedTopic","fontSize","fontWeight","minWidth","selectedTopic","text","answers","length","setShowResults","setResults","timeLimit"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport {\n  Row,\n  Col,\n  Button\n} from 'react-bootstrap'\nimport { QuizTimer } from './QuizTimer'\nimport { Question } from './Question'\n\nexport const Quiz = function (props) {\n  const [questionCounter, setQuestionCounter] = useState(1)\n  const [allUserAnswers, setAllUserAnswers] = useState(props.selectedTest.questions)\n\n  return (\n    <Row className=\"w-100 text-center align-items-center justify-content-center m-auto\">\n      <Row className=\"w-100 mb-3\">\n        <Col md={{ span: 4 }} className=\"\">\n        </Col>\n        <Col md={{ span: 1 }} className=\"d-flex align-items-center\">\n          <Button\n            block\n            variant=\"info\"\n            onClick={() => props.setSelectedTopic(null)}\n          >\n            <i className=\"fas fa-long-arrow-alt-left mr-2\"></i>\n            I Test\n          </Button>\n        </Col>\n        <Col md={2}>\n          <div style={{ fontSize: \"1.5rem\", fontWeight: \"600\", minWidth: \"285px !important\" }}>Argomento: {props.selectedTopic}</div>\n        </Col>\n      </Row>\n\n      <Row className=\"w-100 mb-3\">\n        <Col md={{ span: 3 }} className=\"\">\n        </Col>\n        <Col md={{ span: 1 }} className=\"d-flex align-items-center justify-content-end\">\n          {(questionCounter > 1) &&\n            <Button\n              block\n              size=\"lg\"\n              variant=\"info\"\n              onClick={() => setQuestionCounter(questionCounter - 1)}\n            >\n              <i className=\"fas fa-long-arrow-alt-left\"></i>\n            </Button>\n          }\n        </Col>\n        <Col md={4} className=\"\">\n          <Question\n            questionNumber={questionCounter}\n            question={props.selectedTest.questions[questionCounter - 1].text}\n            answers={props.selectedTest.questions[questionCounter - 1].answers}\n            allUserAnswers={allUserAnswers}\n            setAllUserAnswers={setAllUserAnswers}\n          />\n        </Col>\n        <Col md={1} className=\"d-flex align-items-center justify-content-start\">\n          {(questionCounter < props.selectedTest.questions.length) &&\n            <Button\n              block\n              size=\"lg\"\n              variant=\"info\"\n              onClick={() => setQuestionCounter(questionCounter + 1)}\n            >\n              <i className=\"fas fa-long-arrow-alt-right\"></i>\n            </Button>\n          }\n          {(questionCounter === props.selectedTest.questions.length) &&\n            <Button\n              block\n              size=\"lg\"\n              variant=\"success\"\n              onClick={() => {\n                props.setShowResults(true)\n                props.setSelectedTopic(null)\n                props.setResults(allUserAnswers)\n              }}\n            >\n              <Row>\n                <Col sm={6}>\n                  Risultati\n                </Col>\n                <Col sm={5}>\n                  <i className=\"fas fa-tasks ml-3\"></i>\n                </Col>\n              </Row>\n            </Button>\n          }\n        </Col>\n      </Row>\n      <QuizTimer\n        milliseconds={props.selectedTest.timeLimit}\n      />\n    </Row>\n  )\n}"]},"metadata":{},"sourceType":"module"}