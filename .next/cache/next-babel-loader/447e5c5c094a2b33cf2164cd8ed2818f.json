{"ast":null,"code":"export var removeDuplicatesById = function removeDuplicatesById(arr) {\n  var ids = [];\n  var uniques = [];\n  arr.forEach(function (elem) {\n    if (!ids.includes(elem.id)) {\n      ids.push(elem.id);\n      uniques.push(elem);\n    }\n  });\n  return uniques;\n};\nexport var includesAll = function includesAll(toCheck, targets, isArray) {\n  var result = [];\n\n  if (isArray) {\n    for (var x = 0; x < toCheck.length; x++) {\n      var toCheckIsInclusive = true;\n\n      for (var y = 0; y < targets.length; y++) {\n        if (!toCheck[x].toLowerCase().includes(targets[y].toLowerCase())) toCheckIsInclusive = false;\n      }\n\n      if (toCheckIsInclusive) result.push(toCheck[x]);\n    }\n  } else {\n    var _toCheckIsInclusive = true;\n\n    for (var _y = 0; _y < targets.length; _y++) {\n      if (!toCheck || !toCheck.toLowerCase().includes(targets[_y].toLowerCase())) _toCheckIsInclusive = false;\n    }\n\n    if (_toCheckIsInclusive) result.push(toCheck);\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/utils/arrays.js"],"names":["removeDuplicatesById","arr","ids","uniques","forEach","elem","includes","id","push","includesAll","toCheck","targets","isArray","result","x","length","toCheckIsInclusive","y","toLowerCase"],"mappings":"AAAA,OAAO,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,GAAD,EAAS;AAC3C,MAAMC,GAAG,GAAG,EAAZ;AACA,MAAMC,OAAO,GAAG,EAAhB;AACAF,EAAAA,GAAG,CAACG,OAAJ,CAAY,UAAAC,IAAI,EAAI;AAClB,QAAI,CAACH,GAAG,CAACI,QAAJ,CAAaD,IAAI,CAACE,EAAlB,CAAL,EAA4B;AAC1BL,MAAAA,GAAG,CAACM,IAAJ,CAASH,IAAI,CAACE,EAAd;AACAJ,MAAAA,OAAO,CAACK,IAAR,CAAaH,IAAb;AACD;AACF,GALD;AAMA,SAAOF,OAAP;AACD,CAVM;AAYP,OAAO,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACC,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,EAA+B;AACxD,MAAMC,MAAM,GAAG,EAAf;;AACA,MAAID,OAAJ,EAAa;AACX,SAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACK,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,UAAIE,kBAAkB,GAAG,IAAzB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,OAAO,CAACI,MAA5B,EAAoCE,CAAC,EAArC,EAAyC;AACvC,YAAI,CAACP,OAAO,CAACI,CAAD,CAAP,CAAWI,WAAX,GAAyBZ,QAAzB,CAAkCK,OAAO,CAACM,CAAD,CAAP,CAAWC,WAAX,EAAlC,CAAL,EAAkEF,kBAAkB,GAAG,KAArB;AACnE;;AACD,UAAIA,kBAAJ,EAAwBH,MAAM,CAACL,IAAP,CAAYE,OAAO,CAACI,CAAD,CAAnB;AACzB;AACF,GARD,MAQO;AACL,QAAIE,mBAAkB,GAAG,IAAzB;;AACA,SAAK,IAAIC,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGN,OAAO,CAACI,MAA5B,EAAoCE,EAAC,EAArC,EAAyC;AACvC,UAAI,CAACP,OAAD,IAAY,CAACA,OAAO,CAACQ,WAAR,GAAsBZ,QAAtB,CAA+BK,OAAO,CAACM,EAAD,CAAP,CAAWC,WAAX,EAA/B,CAAjB,EAA2EF,mBAAkB,GAAG,KAArB;AAC5E;;AACD,QAAIA,mBAAJ,EAAwBH,MAAM,CAACL,IAAP,CAAYE,OAAZ;AACzB;;AACD,SAAOG,MAAP;AACD,CAlBM","sourcesContent":["export const removeDuplicatesById = (arr) => {\n  const ids = []\n  const uniques = []\n  arr.forEach(elem => {\n    if (!ids.includes(elem.id)) {\n      ids.push(elem.id)\n      uniques.push(elem)\n    }\n  })\n  return uniques\n}\n\nexport const includesAll = (toCheck, targets, isArray) => {\n  const result = []\n  if (isArray) {\n    for (let x = 0; x < toCheck.length; x++) {\n      let toCheckIsInclusive = true\n      for (let y = 0; y < targets.length; y++) {\n        if (!toCheck[x].toLowerCase().includes(targets[y].toLowerCase())) toCheckIsInclusive = false\n      }\n      if (toCheckIsInclusive) result.push(toCheck[x])\n    }\n  } else {\n    let toCheckIsInclusive = true\n    for (let y = 0; y < targets.length; y++) {\n      if (!toCheck || !toCheck.toLowerCase().includes(targets[y].toLowerCase())) toCheckIsInclusive = false\n    }\n    if (toCheckIsInclusive) result.push(toCheck)\n  }\n  return result\n}"]},"metadata":{},"sourceType":"module"}