{"ast":null,"code":"import { useRouter } from 'next/router';\nexport const getRelatedArticles = (openedArticleId, allArticles, lang) => {\n  let result = [];\n\n  for (let x = 0; x < allArticles.length && result.length < 5; x++) {\n    if (allArticles[x][lang].tags.some(x => allArticles.find(y => y.id === openedArticleId)[lang].tags.includes(x)) && openedArticleId !== allArticles[x].id) {\n      result.push(allArticles[x]);\n    }\n  }\n\n  return result;\n};\nexport const getBreadcrumbsForArticles = (articleId, articleTitle) => {\n  const router = useRouter();\n  const breadcrumbsList = [];\n  const section = router.asPath.slice(1);\n  const title = section.split(\"/\").reverse().pop();\n  breadcrumbsList.push({\n    title: 'Home',\n    path: '/'\n  });\n  breadcrumbsList.push({\n    title: title,\n    path: '/' + title\n  });\n  if (articleId) breadcrumbsList.push({\n    title: articleTitle,\n    path: section\n  });\n  return breadcrumbsList;\n};","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/utils/articles.js"],"names":["useRouter","getRelatedArticles","openedArticleId","allArticles","lang","result","x","length","tags","some","find","y","id","includes","push","getBreadcrumbsForArticles","articleId","articleTitle","router","breadcrumbsList","section","asPath","slice","title","split","reverse","pop","path"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,CAACC,eAAD,EAAkBC,WAAlB,EAA+BC,IAA/B,KAAwC;AACxE,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,WAAW,CAACI,MAAhB,IAA0BF,MAAM,CAACE,MAAP,GAAgB,CAA1D,EAA6DD,CAAC,EAA9D,EAAkE;AAChE,QACEH,WAAW,CAACG,CAAD,CAAX,CAAeF,IAAf,EAAqBI,IAArB,CAA0BC,IAA1B,CAA+BH,CAAC,IAAIH,WAAW,CAACO,IAAZ,CAAiBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASV,eAA/B,EAAgDE,IAAhD,EAAsDI,IAAtD,CAA2DK,QAA3D,CAAoEP,CAApE,CAApC,KACGJ,eAAe,KAAKC,WAAW,CAACG,CAAD,CAAX,CAAeM,EAFxC,EAGE;AACAP,MAAAA,MAAM,CAACS,IAAP,CAAYX,WAAW,CAACG,CAAD,CAAvB;AACD;AACF;;AACD,SAAOD,MAAP;AACD,CAXM;AAaP,OAAO,MAAMU,yBAAyB,GAAG,CAACC,SAAD,EAAYC,YAAZ,KAA6B;AACpE,QAAMC,MAAM,GAAGlB,SAAS,EAAxB;AACA,QAAMmB,eAAe,GAAG,EAAxB;AACA,QAAMC,OAAO,GAAGF,MAAM,CAACG,MAAP,CAAcC,KAAd,CAAoB,CAApB,CAAhB;AACA,QAAMC,KAAK,GAAGH,OAAO,CAACI,KAAR,CAAc,GAAd,EAAmBC,OAAnB,GAA6BC,GAA7B,EAAd;AACAP,EAAAA,eAAe,CAACL,IAAhB,CAAqB;AAAES,IAAAA,KAAK,EAAE,MAAT;AAAiBI,IAAAA,IAAI,EAAE;AAAvB,GAArB;AACAR,EAAAA,eAAe,CAACL,IAAhB,CAAqB;AAAES,IAAAA,KAAK,EAAEA,KAAT;AAAgBI,IAAAA,IAAI,EAAE,MAAMJ;AAA5B,GAArB;AACA,MAAIP,SAAJ,EAAeG,eAAe,CAACL,IAAhB,CAAqB;AAAES,IAAAA,KAAK,EAAEN,YAAT;AAAuBU,IAAAA,IAAI,EAAEP;AAA7B,GAArB;AACf,SAAOD,eAAP;AACD,CATM","sourcesContent":["import { useRouter } from 'next/router'\n\nexport const getRelatedArticles = (openedArticleId, allArticles, lang) => {\n  let result = []\n  for (let x = 0; x < allArticles.length && result.length < 5; x++) {\n    if (\n      allArticles[x][lang].tags.some(x => allArticles.find(y => y.id === openedArticleId)[lang].tags.includes(x))\n      && openedArticleId !== allArticles[x].id\n    ) {\n      result.push(allArticles[x])\n    }\n  }\n  return result\n}\n\nexport const getBreadcrumbsForArticles = (articleId, articleTitle) => {\n  const router = useRouter()\n  const breadcrumbsList = []\n  const section = router.asPath.slice(1)\n  const title = section.split(\"/\").reverse().pop()\n  breadcrumbsList.push({ title: 'Home', path: '/' })\n  breadcrumbsList.push({ title: title, path: '/' + title })\n  if (articleId) breadcrumbsList.push({ title: articleTitle, path: section })\n  return breadcrumbsList\n}"]},"metadata":{},"sourceType":"module"}