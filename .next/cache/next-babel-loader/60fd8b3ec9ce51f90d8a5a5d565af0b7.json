{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Row, Col } from 'react-bootstrap';\nexport var NumberInput = function NumberInput(_ref) {\n  var _ref$formGroupClass = _ref.formGroupClass,\n      formGroupClass = _ref$formGroupClass === void 0 ? \"\" : _ref$formGroupClass,\n      _ref$formLabelClass = _ref.formLabelClass,\n      formLabelClass = _ref$formLabelClass === void 0 ? \"\" : _ref$formLabelClass,\n      _ref$colSpan = _ref.colSpan,\n      colSpan = _ref$colSpan === void 0 ? 12 : _ref$colSpan,\n      _ref$validationFunc = _ref.validationFunc,\n      validationFunc = _ref$validationFunc === void 0 ? function () {\n    return true;\n  } : _ref$validationFunc,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? \"\" : _ref$label,\n      _ref$placeholderText = _ref.placeholderText,\n      placeholderText = _ref$placeholderText === void 0 ? \"\" : _ref$placeholderText,\n      _ref$textmuted = _ref.textmuted,\n      textmuted = _ref$textmuted === void 0 ? null : _ref$textmuted,\n      _ref$value = _ref.value,\n      value = _ref$value === void 0 ? undefined : _ref$value,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange,\n      _ref$isDisabled = _ref.isDisabled,\n      isDisabled = _ref$isDisabled === void 0 ? false : _ref$isDisabled;\n\n  var handleChange = function handleChange(val) {\n    if (validationFunc(val)) {\n      onChange(val);\n      return;\n    }\n  };\n\n  return __jsx(Form.Group, {\n    className: formGroupClass\n  }, label && label.length > 0 && __jsx(Form.Label, {\n    className: formLabelClass\n  }, label), __jsx(Row, {\n    className: \"w-100 ml-0 mr-0\"\n  }, __jsx(Col, {\n    md: colSpan,\n    className: \"pl-0 pr-0\"\n  }, __jsx(Form.Control, {\n    type: \"number\",\n    placeholder: placeholderText,\n    value: value,\n    onChange: function onChange(event) {\n      return handleChange(event.target.value);\n    },\n    disabled: isDisabled\n  }))), textmuted && __jsx(Form.Text, {\n    className: \"text-muted\"\n  }, textmuted));\n};\n/*\n------------------------------[RETURN]------------------------------\n\n<NumberInput\n  formGroupClass={\"\"}\n  formLabelClass={\"\"}\n  colSpan={8}\n  label={\"prova label\"}\n  placeholderText={\"\"}\n  textmuted={\"prova textmuted\"}\n  value={numeroArt}\n  onChange={setNumeroArt}\n  validationFunc={(num) => num >= 0 && num <= 10}\n  isDisabled={false}\n/>\n\n*/","map":null,"metadata":{},"sourceType":"module"}