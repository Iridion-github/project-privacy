{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/pages/articoli/[articleId].js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../../styles/Home.module.css';\nimport { useLanguage } from '../../context/siteLanguageContext'; //context\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { Row, Col } from 'react-bootstrap';\nimport { Header } from '../../components/layout/Header';\nimport { Navigation } from '../../components/layout/Navbar';\nimport { Breadcrumbs } from '../../components/layout/Breadcrumbs';\nimport { Footer } from '../../components/layout/Footer';\nimport { ArticleRead } from \"../../components/articles/ArticleRead\";\nimport { RelatedArticles } from \"../../components/articles/RelatedArticles\";\nimport { getRelatedArticles, getBreadcrumbsForArticles } from '../../utils/articles';\nimport { getBreadcrumbsForErrors } from '../../utils/errors';\nimport { ErrorComponent } from '../../components/layout/ErrorComponent';\n\nfunction articoli(_ref) {\n  _s();\n\n  var glossarywords = _ref.glossarywords,\n      DBarticles = _ref.DBarticles;\n  console.log(\"glossarywords:\", glossarywords);\n  console.log(\"DBarticles:\", DBarticles);\n  var siteLanguage = useLanguage(); //context\n\n  var router = useRouter();\n  var articleId = router.query.articleId;\n\n  var _useState = useState(DBarticles),\n      articles = _useState[0],\n      setArticles = _useState[1];\n\n  var _useState2 = useState(articleId),\n      openedArticle = _useState2[0],\n      setOpenedArticle = _useState2[1];\n\n  var handleOpenedArticle = function handleOpenedArticle(id) {\n    var fullRoute = id !== null ? '/articoli/' + id : '/articoli/';\n    router.push(fullRoute);\n    setOpenedArticle(id);\n  };\n\n  var relatedArticles = getRelatedArticles(articleId, articles, siteLanguage);\n  useEffect(function () {\n    if (articles.length === 0) {\n      console.log(\"useEffect - articles is empty!\");\n\n      if (DBarticles.map(function (el) {\n        return el.id;\n      }).includes(articleId)) {\n        setOpenedArticle(articleId);\n      }\n    }\n  });\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    title: siteLanguage === \"ita\" ? \"Articoli\" : \"Articles\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), __jsx(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), console.log(\"About to render breadcrumbs, articles:\", articles), openedArticle && articles.length > 0 && __jsx(Breadcrumbs, {\n    breadcrumbsList: getBreadcrumbsForArticles(openedArticle, articles.find(function (art) {\n      return art.id === openedArticle;\n    })[siteLanguage].title),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), !openedArticle && __jsx(Breadcrumbs, {\n    breadcrumbsList: getBreadcrumbsForErrors({\n      ita: \"Articolo inesistente\",\n      eng: \"No such article\"\n    }, \"/articoli\", siteLanguage),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), __jsx(\"main\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, !openedArticle && __jsx(ErrorComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }), __jsx(Row, {\n    className: \"w-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    md: 3,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), openedArticle && articles.length > 0 && __jsx(React.Fragment, null, __jsx(Col, {\n    md: 6,\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, __jsx(ArticleRead, {\n    article: articles.find(function (art) {\n      return art.id === openedArticle;\n    }),\n    allArticles: articles,\n    setOpenedArticle: handleOpenedArticle,\n    glossarywords: glossarywords,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  })), __jsx(Col, {\n    md: 3,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, __jsx(RelatedArticles, {\n    relatedArticles: relatedArticles,\n    setOpenedArticle: handleOpenedArticle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }))))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(articoli, \"ocjaoeaJJOE3flcXRJHAGt7QggE=\", false, function () {\n  return [useLanguage, useRouter];\n});\n\narticoli.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(context) {\n    var getArticleId, propsObj, articleId, apiUrlGlossary, resGlossaryword, glossarywords, apiUrlArticle, resArticle, DBarticles;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            getArticleId = /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(rawStr) {\n                var articleId;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        console.log(\"rawStr\", rawStr);\n                        articleId = rawStr.split('/articoli/')[1];\n                        console.log(\"1) articleId\", articleId);\n\n                        if (articleId.includes('/')) {\n                          console.log(\"articleId.includes('/') ! Phase 2\"); //[\"articoli/\",\"0/1\"]\n                          //[\"0/1\"] -> [\"1\"]\n\n                          articleId = articleId.split('/')[1].split('/')[1];\n                          console.log(\"2) articleId\", articleId);\n                        }\n\n                        console.log(\"3) about to return this articleId:\", articleId);\n\n                        while (true) {//wait\n                        }\n\n                        return _context.abrupt(\"return\", articleId);\n\n                      case 7:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function getArticleId(_x2) {\n                return _ref3.apply(this, arguments);\n              };\n            }();\n\n            propsObj = {\n              DBarticles: [],\n              glossarywords: []\n            };\n\n            if (context.req) {\n              _context2.next = 9;\n              break;\n            }\n\n            _context2.next = 5;\n            return getArticleId(context.asPath);\n\n          case 5:\n            articleId = _context2.sent;\n            location.replace(location.href + \"/\" + articleId);\n            _context2.next = 24;\n            break;\n\n          case 9:\n            //api of glossary\n            apiUrlGlossary = \"http://\" + context.req.headers.host + \"/api/glossaryword\";\n            _context2.next = 12;\n            return fetch(apiUrlGlossary);\n\n          case 12:\n            resGlossaryword = _context2.sent;\n            _context2.next = 15;\n            return resGlossaryword.json();\n\n          case 15:\n            glossarywords = _context2.sent;\n            //api of all articles (for the related articles)\n            apiUrlArticle = \"http://\" + context.req.headers.host + \"/api/article\";\n            _context2.next = 19;\n            return fetch(apiUrlArticle);\n\n          case 19:\n            resArticle = _context2.sent;\n            _context2.next = 22;\n            return resArticle.json();\n\n          case 22:\n            DBarticles = _context2.sent;\n            propsObj = {\n              DBarticles: DBarticles.data,\n              glossarywords: glossarywords.data\n            };\n\n          case 24:\n            return _context2.abrupt(\"return\", propsObj);\n\n          case 25:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default articoli;\n/* //Rimozione di getServerSideProps per deployare su Firebase\nexport async function getServerSideProps({ req }) {\n  //api of glossary\n  const apiUrlGlossary = \"http://\" + req.headers.host + \"/api/glossaryword\"\n  const resGlossaryword = await fetch(apiUrlGlossary)\n  const glossarywords = await resGlossaryword.json()\n  //api of all articles (for the related articles)\n  const apiUrlArticle = \"http://\" + req.headers.host + \"/api/article\"\n  const resArticle = await fetch(apiUrlArticle)\n  const DBarticles = await resArticle.json()\n  return { props: { DBarticles: DBarticles.data, glossarywords: glossarywords.data } }\n}\n*/","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/pages/articoli/[articleId].js"],"names":["styles","useLanguage","useState","useEffect","useRouter","Row","Col","Header","Navigation","Breadcrumbs","Footer","ArticleRead","RelatedArticles","getRelatedArticles","getBreadcrumbsForArticles","getBreadcrumbsForErrors","ErrorComponent","articoli","glossarywords","DBarticles","console","log","siteLanguage","router","articleId","query","articles","setArticles","openedArticle","setOpenedArticle","handleOpenedArticle","id","fullRoute","push","relatedArticles","length","map","el","includes","container","find","art","title","ita","eng","main","getInitialProps","context","getArticleId","rawStr","split","propsObj","req","asPath","location","replace","href","apiUrlGlossary","headers","host","fetch","resGlossaryword","json","apiUrlArticle","resArticle","data"],"mappings":"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","sourcesContent":["import styles from '../../styles/Home.module.css'\nimport { useLanguage } from '../../context/siteLanguageContext' //context\nimport { useState, useEffect } from 'react'\nimport { useRouter } from 'next/router'\nimport {\n  Row,\n  Col\n} from 'react-bootstrap'\nimport { Header } from '../../components/layout/Header'\nimport { Navigation } from '../../components/layout/Navbar'\nimport { Breadcrumbs } from '../../components/layout/Breadcrumbs'\nimport { Footer } from '../../components/layout/Footer'\nimport { ArticleRead } from \"../../components/articles/ArticleRead\"\nimport { RelatedArticles } from \"../../components/articles/RelatedArticles\"\nimport { getRelatedArticles, getBreadcrumbsForArticles } from '../../utils/articles'\nimport { getBreadcrumbsForErrors } from '../../utils/errors'\nimport { ErrorComponent } from '../../components/layout/ErrorComponent'\n\nfunction articoli({ glossarywords, DBarticles }) {\n  console.log(\"glossarywords:\", glossarywords)\n  console.log(\"DBarticles:\", DBarticles)\n  const siteLanguage = useLanguage() //context\n  const router = useRouter()\n  const { articleId } = router.query\n  const [articles, setArticles] = useState(DBarticles)\n  const [openedArticle, setOpenedArticle] = useState(articleId)\n\n  const handleOpenedArticle = (id) => {\n    const fullRoute = id !== null ? '/articoli/' + id : '/articoli/'\n    router.push(fullRoute)\n    setOpenedArticle(id)\n  }\n\n  let relatedArticles = getRelatedArticles(articleId, articles, siteLanguage)\n\n  useEffect(() => {\n    if (articles.length === 0) {\n      console.log(\"useEffect - articles is empty!\")\n      if (DBarticles.map(el => el.id).includes(articleId)) {\n        setOpenedArticle(articleId)\n      }\n    }\n  })\n\n  return (\n    <div className={styles.container}>\n      <Header\n        title={siteLanguage === \"ita\" ? \"Articoli\" : \"Articles\"}\n      />\n      {/* Navbar */}\n      <Navigation />\n      {console.log(\"About to render breadcrumbs, articles:\", articles)}\n      {(openedArticle && articles.length > 0) &&\n        <Breadcrumbs\n          breadcrumbsList={getBreadcrumbsForArticles(openedArticle, articles.find(art => art.id === openedArticle)[siteLanguage].title)}\n        />\n      }\n      {!openedArticle &&\n        <Breadcrumbs\n          breadcrumbsList={getBreadcrumbsForErrors({ ita: \"Articolo inesistente\", eng: \"No such article\" }, \"/articoli\", siteLanguage)}\n        />\n      }\n      {/* Page Content */}\n      <main className={styles.main}>\n        {!openedArticle &&\n          <ErrorComponent />\n        }\n        <Row className=\"w-100\">\n          <Col md={3} className=\"\">\n          </Col>\n          {(openedArticle && articles.length > 0) &&\n            <>\n              <Col md={6} className=\"justify-content-center\">\n                <ArticleRead\n                  article={articles.find(art => art.id === openedArticle)}\n                  allArticles={articles}\n                  setOpenedArticle={handleOpenedArticle}\n                  glossarywords={glossarywords}\n                />\n              </Col>\n              <Col md={3} className=\"\">\n                <RelatedArticles\n                  relatedArticles={relatedArticles}\n                  setOpenedArticle={handleOpenedArticle}\n                />\n              </Col>\n            </>\n          }\n        </Row>\n      </main>\n      {/* Footer */}\n      <Footer />\n    </div>\n  )\n}\n\narticoli.getInitialProps = async (context) => {\n\n  const getArticleId = async (rawStr) => {\n    console.log(\"rawStr\", rawStr)\n    let articleId = rawStr.split('/articoli/')[1]\n    console.log(\"1) articleId\", articleId)\n    if (articleId.includes('/')) {\n      console.log(\"articleId.includes('/') ! Phase 2\")\n      //[\"articoli/\",\"0/1\"]\n      //[\"0/1\"] -> [\"1\"]\n      articleId = articleId.split('/')[1].split('/')[1]\n      console.log(\"2) articleId\", articleId)\n    }\n    console.log(\"3) about to return this articleId:\", articleId)\n    while (true) {\n      //wait\n    }\n    return articleId\n  }\n\n  let propsObj = { DBarticles: [], glossarywords: [] }\n  if (!context.req) {\n    const articleId = await getArticleId(context.asPath)\n    location.replace(location.href + \"/\" + articleId)\n  } else {\n    //api of glossary\n    const apiUrlGlossary = \"http://\" + context.req.headers.host + \"/api/glossaryword\"\n    const resGlossaryword = await fetch(apiUrlGlossary)\n    const glossarywords = await resGlossaryword.json()\n    //api of all articles (for the related articles)\n    const apiUrlArticle = \"http://\" + context.req.headers.host + \"/api/article\"\n    const resArticle = await fetch(apiUrlArticle)\n    const DBarticles = await resArticle.json()\n    propsObj = { DBarticles: DBarticles.data, glossarywords: glossarywords.data }\n  }\n  return propsObj\n}\n\nexport default articoli\n\n/* //Rimozione di getServerSideProps per deployare su Firebase\nexport async function getServerSideProps({ req }) {\n  //api of glossary\n  const apiUrlGlossary = \"http://\" + req.headers.host + \"/api/glossaryword\"\n  const resGlossaryword = await fetch(apiUrlGlossary)\n  const glossarywords = await resGlossaryword.json()\n  //api of all articles (for the related articles)\n  const apiUrlArticle = \"http://\" + req.headers.host + \"/api/article\"\n  const resArticle = await fetch(apiUrlArticle)\n  const DBarticles = await resArticle.json()\n  return { props: { DBarticles: DBarticles.data, glossarywords: glossarywords.data } }\n}\n*/"]},"metadata":{},"sourceType":"module"}