{"ast":null,"code":"import mongoose from 'mongoose';\nconst TestSchema = new mongoose.Schema({\n  title: {\n    type: String,\n    required: [true, 'title is required!'],\n    unique: true,\n    trim: true\n  },\n  subtitle: {\n    type: String,\n    required: [true, 'subtitle is required!'],\n    unique: true,\n    trim: true\n  },\n  multipleAnswer: {\n    type: Boolean,\n    required: [true, 'multipleAnswer bool is required!'],\n    unique: true\n  },\n  pointsSystem: {\n    type: Boolean,\n    required: [true, 'pointsSystem bool is required!'],\n    unique: true\n  },\n  instructions: {\n    type: String,\n    required: [true, 'instructions are required!'],\n    trim: true\n  },\n  timeLimit: {\n    type: Number,\n    required: [true, 'timeLimit is required!']\n  },\n  questions: {\n    text: {\n      type: String,\n      required: [true, 'question text is required!'],\n      trim: true\n    },\n    answers: [{\n      text: {\n        type: String,\n        required: [true, 'question answer text is required!'],\n        trim: true\n      },\n      selected: {\n        type: Boolean,\n        required: [true, 'question answer selected is required!']\n      },\n      value: {\n        type: Boolean,\n        required: [true, 'question answer value is required!']\n      },\n      points: {\n        type: Number,\n        required: [true, 'question answer points are required!']\n      }\n    }]\n  }\n});\nexport default mongoose.models.Test || mongoose.model(\"Test\", TestSchema);","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/models/Test.js"],"names":["mongoose","TestSchema","Schema","title","type","String","required","unique","trim","subtitle","multipleAnswer","Boolean","pointsSystem","instructions","timeLimit","Number","questions","text","answers","selected","value","points","models","Test","model"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,MAAMC,UAAU,GAAG,IAAID,QAAQ,CAACE,MAAb,CAAoB;AACrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,IAAI,EAAEC,MADD;AAELC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,oBAAP,CAFL;AAGLC,IAAAA,MAAM,EAAE,IAHH;AAILC,IAAAA,IAAI,EAAE;AAJD,GAD8B;AAOrCC,EAAAA,QAAQ,EAAE;AACRL,IAAAA,IAAI,EAAEC,MADE;AAERC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,uBAAP,CAFF;AAGRC,IAAAA,MAAM,EAAE,IAHA;AAIRC,IAAAA,IAAI,EAAE;AAJE,GAP2B;AAarCE,EAAAA,cAAc,EAAE;AACdN,IAAAA,IAAI,EAAEO,OADQ;AAEdL,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,kCAAP,CAFI;AAGdC,IAAAA,MAAM,EAAE;AAHM,GAbqB;AAkBrCK,EAAAA,YAAY,EAAE;AACZR,IAAAA,IAAI,EAAEO,OADM;AAEZL,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,gCAAP,CAFE;AAGZC,IAAAA,MAAM,EAAE;AAHI,GAlBuB;AAuBrCM,EAAAA,YAAY,EAAE;AACZT,IAAAA,IAAI,EAAEC,MADM;AAEZC,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,4BAAP,CAFE;AAGZE,IAAAA,IAAI,EAAE;AAHM,GAvBuB;AA4BrCM,EAAAA,SAAS,EAAE;AACTV,IAAAA,IAAI,EAAEW,MADG;AAETT,IAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,wBAAP;AAFD,GA5B0B;AAgCrCU,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE;AACJb,MAAAA,IAAI,EAAEC,MADF;AAEJC,MAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,4BAAP,CAFN;AAGJE,MAAAA,IAAI,EAAE;AAHF,KADG;AAMTU,IAAAA,OAAO,EAAE,CACP;AACED,MAAAA,IAAI,EAAE;AACJb,QAAAA,IAAI,EAAEC,MADF;AAEJC,QAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,mCAAP,CAFN;AAGJE,QAAAA,IAAI,EAAE;AAHF,OADR;AAMEW,MAAAA,QAAQ,EAAE;AACRf,QAAAA,IAAI,EAAEO,OADE;AAERL,QAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,uCAAP;AAFF,OANZ;AAUEc,MAAAA,KAAK,EAAE;AACLhB,QAAAA,IAAI,EAAEO,OADD;AAELL,QAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,oCAAP;AAFL,OAVT;AAcEe,MAAAA,MAAM,EAAE;AACNjB,QAAAA,IAAI,EAAEW,MADA;AAENT,QAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,sCAAP;AAFJ;AAdV,KADO;AANA;AAhC0B,CAApB,CAAnB;AA8DA,eAAeN,QAAQ,CAACsB,MAAT,CAAgBC,IAAhB,IAAwBvB,QAAQ,CAACwB,KAAT,CAAe,MAAf,EAAuBvB,UAAvB,CAAvC","sourcesContent":["import mongoose from 'mongoose'\n\nconst TestSchema = new mongoose.Schema({\n  title: {\n    type: String,\n    required: [true, 'title is required!'],\n    unique: true,\n    trim: true\n  },\n  subtitle: {\n    type: String,\n    required: [true, 'subtitle is required!'],\n    unique: true,\n    trim: true\n  },\n  multipleAnswer: {\n    type: Boolean,\n    required: [true, 'multipleAnswer bool is required!'],\n    unique: true\n  },\n  pointsSystem: {\n    type: Boolean,\n    required: [true, 'pointsSystem bool is required!'],\n    unique: true\n  },\n  instructions: {\n    type: String,\n    required: [true, 'instructions are required!'],\n    trim: true\n  },\n  timeLimit: {\n    type: Number,\n    required: [true, 'timeLimit is required!']\n  },\n  questions: {\n    text: {\n      type: String,\n      required: [true, 'question text is required!'],\n      trim: true\n    },\n    answers: [\n      {\n        text: {\n          type: String,\n          required: [true, 'question answer text is required!'],\n          trim: true\n        },\n        selected: {\n          type: Boolean,\n          required: [true, 'question answer selected is required!']\n        },\n        value: {\n          type: Boolean,\n          required: [true, 'question answer value is required!']\n        },\n        points: {\n          type: Number,\n          required: [true, 'question answer points are required!']\n        }\n      }\n    ]\n  }\n})\n\nexport default mongoose.models.Test || mongoose.model(\"Test\", TestSchema)"]},"metadata":{},"sourceType":"module"}