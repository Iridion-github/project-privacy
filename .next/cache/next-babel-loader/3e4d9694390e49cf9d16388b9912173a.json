{"ast":null,"code":"var _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/archive/ui/DateInput.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\nimport it from 'date-fns/locale/it';\nregisterLocale('it', it);\nsetDefaultLocale('it');\nimport { Form, Row, Col } from 'react-bootstrap';\nexport const DateInput = function ({\n  formGroupClass = \"\",\n  formLabelClass = \"\",\n  calendarClassName = \"\",\n  datepickerClassName = \"\",\n  colSpan = 8,\n  validationFunc = () => true,\n  label = \"\",\n  textmuted = false,\n  value = new Date(),\n  onChange = val => val,\n  isDisabled = false,\n  withTime = false,\n  dateFormat = 'dd/MM/yyyy',\n  excludeDates = [],\n  filterDate = () => true,\n  locale = \"it\",\n  maxDate = undefined,\n  minDate = undefined,\n  readOnly = false,\n  required = true\n}) {\n  const props = {\n    formGroupClass,\n    formLabelClass,\n    calendarClassName,\n    datepickerClassName,\n    colSpan,\n    validationFunc,\n    label,\n    textmuted,\n    value,\n    onChange,\n    isDisabled,\n    withTime,\n    dateFormat,\n    excludeDates,\n    filterDate,\n    locale,\n    maxDate,\n    minDate,\n    readOnly,\n    required\n  };\n\n  const handleChange = val => {\n    if (validationFunc(val)) {\n      onChange(val);\n      return;\n    }\n  };\n\n  return __jsx(Form.Group, {\n    className: formGroupClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Label, {\n    className: formLabelClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, label), __jsx(Row, {\n    className: \"w-100 ml-0 mr-0 text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    md: colSpan,\n    className: \"pl-1 pr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, __jsx(DatePicker, {\n    selected: value,\n    className: datepickerClassName + \" datepicker-input\" //input-class\n    ,\n    calendarClassName: calendarClassName,\n    onChange: date => handleChange(date),\n    showTimeInput: withTime,\n    dateFormat: dateFormat,\n    disabled: isDisabled ? true : false,\n    excludeDates: excludeDates,\n    filterDate: filterDate,\n    locale: locale,\n    maxDate: maxDate,\n    minDate: minDate,\n    readOnly: readOnly,\n    required: required,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }))), textmuted && __jsx(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, textmuted));\n};\n/*\n------------------------------[RETURN]------------------------------\n      <DateInput\n        formGroupClass={\"\"}\n        formLabelClass={\"\"}\n        //colSpan={8}\n        label={\"prova label\"}\n        placeholderText={\"\"}\n        textmuted={\"prova textmuted\"}\n        value={startEs}\n        onChange={setStartEs}\n        validationFunc={el => el}\n        isDisabled={false}\n        calendarClassName={\"\"}\n        datepickerClassName={\"\"}\n        //withTime={true}\n        //dateFormat='MM/dd/yyyy'\n        excludeDates={[]}\n        filterDate={() => true}\n        locale={\"es\"}\n        //maxDate={new Date}\n        //minDate={new Date}\n        //readOnly={true}\n        required={true}\n      />\n*/","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/archive/ui/DateInput.js"],"names":["DatePicker","registerLocale","setDefaultLocale","it","Form","Row","Col","DateInput","formGroupClass","formLabelClass","calendarClassName","datepickerClassName","colSpan","validationFunc","label","textmuted","value","Date","onChange","val","isDisabled","withTime","dateFormat","excludeDates","filterDate","locale","maxDate","undefined","minDate","readOnly","required","props","handleChange","date"],"mappings":"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","sourcesContent":["import DatePicker from \"react-datepicker\"\nimport \"react-datepicker/dist/react-datepicker.css\"\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\"\nimport it from 'date-fns/locale/it'\nregisterLocale('it', it)\nsetDefaultLocale('it');\nimport {\n  Form,\n  Row,\n  Col\n} from 'react-bootstrap'\n\nexport const DateInput = function ({\n  formGroupClass = \"\",\n  formLabelClass = \"\",\n  calendarClassName = \"\",\n  datepickerClassName = \"\",\n  colSpan = 8,\n  validationFunc = () => true,\n  label = \"\",\n  textmuted = false,\n  value = new Date,\n  onChange = val => val,\n  isDisabled = false,\n  withTime = false,\n  dateFormat = 'dd/MM/yyyy',\n  excludeDates = [],\n  filterDate = () => true,\n  locale = \"it\",\n  maxDate = undefined,\n  minDate = undefined,\n  readOnly = false,\n  required = true,\n}) {\n\n  const props = {\n    formGroupClass,\n    formLabelClass,\n    calendarClassName,\n    datepickerClassName,\n    colSpan,\n    validationFunc,\n    label,\n    textmuted,\n    value,\n    onChange,\n    isDisabled,\n    withTime,\n    dateFormat,\n    excludeDates,\n    filterDate,\n    locale,\n    maxDate,\n    minDate,\n    readOnly,\n    required,\n  }\n\n  const handleChange = (val) => {\n    if (validationFunc(val)) {\n      onChange(val)\n      return\n    }\n  }\n\n  return (\n    <Form.Group className={formGroupClass}>\n      <Form.Label className={formLabelClass}>{label}</Form.Label>\n      <Row className=\"w-100 ml-0 mr-0 text-center\">\n        <Col md={colSpan} className=\"pl-1 pr-1\">\n          <DatePicker\n            selected={value}\n            className={datepickerClassName + \" datepicker-input\"} //input-class\n            calendarClassName={calendarClassName}\n            onChange={date => handleChange(date)}\n            showTimeInput={withTime}\n            dateFormat={dateFormat}\n            disabled={isDisabled ? true : false}\n            excludeDates={excludeDates}\n            filterDate={filterDate}\n            locale={locale}\n            maxDate={maxDate}\n            minDate={minDate}\n            readOnly={readOnly}\n            required={required}\n          />\n        </Col>\n      </Row>\n      {textmuted && <Form.Text className=\"text-muted\">\n        {textmuted}\n      </Form.Text>}\n    </Form.Group>\n  )\n}\n\n/*\n------------------------------[RETURN]------------------------------\n      <DateInput\n        formGroupClass={\"\"}\n        formLabelClass={\"\"}\n        //colSpan={8}\n        label={\"prova label\"}\n        placeholderText={\"\"}\n        textmuted={\"prova textmuted\"}\n        value={startEs}\n        onChange={setStartEs}\n        validationFunc={el => el}\n        isDisabled={false}\n        calendarClassName={\"\"}\n        datepickerClassName={\"\"}\n        //withTime={true}\n        //dateFormat='MM/dd/yyyy'\n        excludeDates={[]}\n        filterDate={() => true}\n        locale={\"es\"}\n        //maxDate={new Date}\n        //minDate={new Date}\n        //readOnly={true}\n        required={true}\n      />\n*/"]},"metadata":{},"sourceType":"module"}