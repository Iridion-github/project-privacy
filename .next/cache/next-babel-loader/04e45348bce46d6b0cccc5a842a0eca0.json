{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport stringToHTML from 'html-react-parser';\nimport { useLanguage } from '../../context/siteLanguageContext'; //context\n\nimport { Row, Col, Card, Button, ButtonToolbar, ButtonGroup, Image } from 'react-bootstrap';\nimport { ReviewContent } from './ReviewContent';\nimport { datePrettifier } from '../../utils/date';\nexport var ReviewRead = function ReviewRead(props) {\n  var siteLanguage = useLanguage(); //context\n\n  var _useState = useState(\"ita\"),\n      language = _useState[0],\n      setLanguage = _useState[1];\n\n  return __jsx(Row, {\n    className: \"w-100 m-auto\"\n  }, __jsx(Card, {\n    className: \"w-100 mb-4 p-1 grey-border\"\n  }, __jsx(Button, {\n    className: \"\",\n    variant: \"info\",\n    href: \"/recensioniBibliografiche\"\n  }, __jsx(\"i\", {\n    className: \"fas fa-long-arrow-alt-left mr-2\"\n  }), \" \", siteLanguage === \"ita\" ? \"Torna alle Recensioni\" : \"Back to Reviews\"), __jsx(Card.Header, {\n    className: \"pb-0\"\n  }, __jsx(Row, null, __jsx(Col, {\n    md: {\n      span: 12,\n      offset: 0\n    }\n  }, __jsx(Row, null, __jsx(\"h3\", {\n    className: \"\"\n  }, __jsx(\"strong\", null, props.review[language].title))))), __jsx(Row, null, __jsx(Col, {\n    md: 12\n  }, __jsx(Row, null, __jsx(Col, {\n    md: 12\n  }, __jsx(\"h6\", {\n    className: \"\"\n  }, \"\\xAB\", props.review[language].subtitle, \"\\xBB\"))))), __jsx(Row, {\n    className: \"w-100 ml-0\"\n  }, __jsx(Col, {\n    md: 9,\n    className: \"pr-0 pl-0\"\n  }, __jsx(Row, {\n    className: \"w-100 mr-0 ml-0\"\n  }, __jsx(Col, {\n    md: 6,\n    className: \"fake-navbar-item pr-0\"\n  }, __jsx(\"strong\", null, language === \"ita\" ? props.review.authors.length < 2 ? \"Autore: \" : \"Autori: \" : props.review.authors.length < 2 ? \"Author: \" : \"Authors: \"), props.review.authors.map(function (author, i) {\n    return i > 0 ? stringToHTML(\"<span className=\\\"pb-1\\\"> | </span> \".concat(author)) : author;\n  })), __jsx(Col, {\n    md: 6,\n    className: \"fake-navbar-item pr-0\"\n  }, __jsx(\"strong\", null, siteLanguage === \"ita\" ? \"Data: \" : \"Date: \"), \" \", datePrettifier(props.review.date, language, true)))), __jsx(Col, {\n    md: {\n      span: 1,\n      offset: 2\n    },\n    className: \"m-0 p-0\"\n  }, __jsx(ButtonToolbar, {\n    className: \"height-100 w-100\"\n  }, __jsx(ButtonGroup, {\n    className: \"w-100\"\n  }, __jsx(Button, {\n    className: \"btn btn-light grey-border\",\n    active: language === \"ita\",\n    href: \"#ita\",\n    onClick: function onClick() {\n      return setLanguage(\"ita\");\n    }\n  }, __jsx(Image, {\n    src: \"/bandiere/ita.png\",\n    className: \"black-border flag-icon\"\n  })), __jsx(Button, {\n    className: \"btn btn-light grey-border\",\n    active: language === \"eng\",\n    href: \"#eng\",\n    onClick: function onClick() {\n      return setLanguage(\"eng\");\n    }\n  }, __jsx(Image, {\n    src: \"/bandiere/GB.png\",\n    className: \"black-border flag-icon\"\n  }))))))), __jsx(Card.Body, null, __jsx(Row, null, __jsx(Col, {\n    md: 12,\n    className: \"\"\n  }, __jsx(ReviewContent, {\n    glossarywords: props.glossarywords //array preso dal db\n    ,\n    glossary: props.review.glossary //glossario della review aperta\n    ,\n    paragraphs: props.review[language].content,\n    previewImg: props.review.previewImg,\n    images: props.review.images\n  }))))));\n};","map":null,"metadata":{},"sourceType":"module"}