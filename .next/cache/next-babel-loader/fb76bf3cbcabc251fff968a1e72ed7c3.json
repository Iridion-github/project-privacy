{"ast":null,"code":"import dbConnect from '../../../utils/dbConnect';\nimport ArticleTopics from '../../../models/ArticleTopics';\nimport { whichToUpdate } from '../../../utils/dbFunctions';\ndbConnect();\nexport default (async (req, res) => {\n  const {\n    query: {\n      id\n    },\n    method,\n    body\n  } = req;\n  let targetTopic = await ArticleTopics.findOne({\n    id: id\n  });\n  if (!targetTopic) return res.status(400).json({\n    success: false,\n    error: \"No topic found for that id!\"\n  });\n\n  switch (method) {\n    case \"GET\":\n      try {\n        return res.status(200).json({\n          success: true,\n          data: targetTopic\n        });\n      } catch (error) {\n        return res.status(400).json({\n          success: false,\n          error\n        });\n      }\n\n    case \"PUT\":\n      try {\n        const updatedArticle = whichToUpdate(body, targetArticle);\n        targetArticle = updatedArticle;\n        await targetArticle.save();\n        return res.status(200).json({\n          success: true,\n          data: updatedArticle\n        });\n      } catch (error) {\n        return res.status(400).json({\n          success: false,\n          error: \"Failed update of existing article!\"\n        });\n      }\n\n    case \"PUT\":\n      try {\n        const updatedTopic = whichToUpdate(body, targetTopic);\n        targetTopic = updatedTopic;\n        await targetTopic.save();\n        return res.status(200).json({\n          success: true,\n          data: articleTopics\n        });\n      } catch (error) {\n        return res.status(400).json({\n          success: false,\n          error: \"Failed update of existing article topic!\"\n        });\n      }\n\n    case \"DELETE\":\n      try {\n        await ArticleTopics.deleteOne({\n          _id: targetTopic.id\n        });\n        await targetTopic.save();\n        return res.status(200).json({\n          success: true,\n          data: {}\n        });\n      } catch (error) {\n        return res.status(400).json({\n          success: false,\n          error: \"Failed deletion of article!\"\n        });\n      }\n\n    default:\n      res.status(400).json({\n        success: false,\n        error\n      });\n  }\n});","map":null,"metadata":{},"sourceType":"module"}