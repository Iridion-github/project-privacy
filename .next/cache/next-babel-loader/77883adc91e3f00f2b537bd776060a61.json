{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/Home.module.css';\nimport { useState } from 'react';\nimport { useLanguage } from '../context/siteLanguageContext'; //context\n\nimport { Row } from 'react-bootstrap';\nimport { Header } from '../components/layout/Header';\nimport { Navigation } from '../components/layout/Navbar';\nimport { TopicChoice } from '../components/areaTest/TopicChoice';\nimport { Quiz } from '../components/areaTest/Quiz';\nimport { Results } from '../components/areaTest/Results';\nimport { Footer } from '../components/layout/Footer';\n\nfunction areaTest({\n  tests\n}) {\n  const {\n    0: selectedTopic,\n    1: setSelectedTopic\n  } = useState(null);\n  const {\n    0: selectedTest,\n    1: setSelectedTest\n  } = useState(null);\n  const {\n    0: showResults,\n    1: setShowResults\n  } = useState(false);\n  const {\n    0: results,\n    1: setResults\n  } = useState([]);\n  const siteLanguage = useLanguage(); //context\n\n  return __jsx(\"div\", {\n    className: styles.container\n  }, __jsx(Header, {\n    title: siteLanguage === \"ita\" ? \"Area Test\" : \"Test Area\"\n  }), __jsx(Navigation, null), __jsx(\"main\", {\n    className: styles.main\n  }, __jsx(Row, {\n    className: \"w-100 m-auto\"\n  }, selectedTopic === null && showResults === false && __jsx(TopicChoice, {\n    setSelectedTopic: setSelectedTopic,\n    setSelectedTest: setSelectedTest\n  }), selectedTopic && __jsx(Quiz, {\n    selectedTopic: selectedTopic,\n    selectedTest: tests[selectedTest],\n    setSelectedTopic: setSelectedTopic,\n    setShowResults: setShowResults,\n    setResults: setResults\n  }), showResults && __jsx(Results, {\n    selectedTopic: selectedTopic,\n    selectedTest: tests[selectedTest],\n    setShowResults: setShowResults,\n    results: results\n  }))), __jsx(Footer, null));\n}\n\nareaTest.getInitialProps = async context => {\n  const apiUrl = \"http://\" + context.req.headers.host + \"/api/test\";\n  const res = await fetch(apiUrl);\n  const {\n    data\n  } = await res.json();\n  return {\n    tests: data\n  };\n};\n\nexport default areaTest;\n/* //Rimozione di getServerSideProps per deployare su Firebase\nexport async function getServerSideProps(context) {\n  const apiUrl = \"http://\" + context.req.headers.host + \"/api/test\"\n  const res = await fetch(apiUrl)\n  const { data } = await res.json()\n  return { props: { tests: data } }\n}\n*/","map":null,"metadata":{},"sourceType":"module"}