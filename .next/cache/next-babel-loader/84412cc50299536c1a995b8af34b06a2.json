{"ast":null,"code":"var _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/context/siteLanguageContext.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* Per implementare una traduzione globale del sito creaimo il context usato in _app.js */\nimport { useState, useContext, createContext } from 'react';\nconst siteLanguageContext = /*#__PURE__*/createContext();\nconst siteLanguageUpdateContext = /*#__PURE__*/createContext();\nexport function useLanguage() {\n  return useContext(siteLanguageContext);\n}\nexport function useLanguageUpdate() {\n  return useContext(siteLanguageUpdateContext);\n}\nexport function LanguageProvider({\n  children\n}) {\n  const {\n    0: siteLanguage,\n    1: setSiteLanguage\n  } = useState(\"ita\");\n\n  const changeSiteLanguage = newLang => {\n    setSiteLanguage(newLang);\n  };\n\n  return __jsx(siteLanguageContext.Provider, {\n    value: siteLanguage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, __jsx(siteLanguageUpdateContext.Provider, {\n    value: changeSiteLanguage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, children));\n}","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/context/siteLanguageContext.js"],"names":["useState","useContext","createContext","siteLanguageContext","siteLanguageUpdateContext","useLanguage","useLanguageUpdate","LanguageProvider","children","siteLanguage","setSiteLanguage","changeSiteLanguage","newLang"],"mappings":";;;;AAAA;AACA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,aAA/B,QAAoD,OAApD;AAEA,MAAMC,mBAAmB,gBAAGD,aAAa,EAAzC;AACA,MAAME,yBAAyB,gBAAGF,aAAa,EAA/C;AAEA,OAAO,SAASG,WAAT,GAAuB;AAC5B,SAAOJ,UAAU,CAACE,mBAAD,CAAjB;AACD;AAED,OAAO,SAASG,iBAAT,GAA6B;AAClC,SAAOL,UAAU,CAACG,yBAAD,CAAjB;AACD;AAED,OAAO,SAASG,gBAAT,CAA0B;AAAEC,EAAAA;AAAF,CAA1B,EAAwC;AAC7C,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCV,QAAQ,CAAC,KAAD,CAAhD;;AACA,QAAMW,kBAAkB,GAAIC,OAAD,IAAa;AACtCF,IAAAA,eAAe,CAACE,OAAD,CAAf;AACD,GAFD;;AAIA,SACE,MAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEH,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,yBAAD,CAA2B,QAA3B;AAAoC,IAAA,KAAK,EAAEE,kBAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,CADF,CADF;AAOD","sourcesContent":["/* Per implementare una traduzione globale del sito creaimo il context usato in _app.js */\nimport { useState, useContext, createContext } from 'react'\n\nconst siteLanguageContext = createContext()\nconst siteLanguageUpdateContext = createContext()\n\nexport function useLanguage() {\n  return useContext(siteLanguageContext)\n}\n\nexport function useLanguageUpdate() {\n  return useContext(siteLanguageUpdateContext)\n}\n\nexport function LanguageProvider({ children }) {\n  const [siteLanguage, setSiteLanguage] = useState(\"ita\")\n  const changeSiteLanguage = (newLang) => {\n    setSiteLanguage(newLang)\n  }\n\n  return (\n    <siteLanguageContext.Provider value={siteLanguage}>\n      <siteLanguageUpdateContext.Provider value={changeSiteLanguage}>\n        {children}\n      </siteLanguageUpdateContext.Provider>\n    </siteLanguageContext.Provider>\n  )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}