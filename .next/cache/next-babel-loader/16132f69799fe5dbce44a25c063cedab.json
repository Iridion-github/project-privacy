{"ast":null,"code":"var _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/archive/ui/Select.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Row, Col } from 'react-bootstrap';\nexport var Select = function Select(props) {\n  var _this = this;\n\n  var _props$formGroupClass = props.formGroupClass,\n      formGroupClass = _props$formGroupClass === void 0 ? \"\" : _props$formGroupClass,\n      _props$formLabelClass = props.formLabelClass,\n      formLabelClass = _props$formLabelClass === void 0 ? \"\" : _props$formLabelClass,\n      _props$validationFunc = props.validationFunc,\n      validationFunc = _props$validationFunc === void 0 ? function () {\n    return true;\n  } : _props$validationFunc,\n      _props$label = props.label,\n      label = _props$label === void 0 ? \"\" : _props$label,\n      _props$textmuted = props.textmuted,\n      textmuted = _props$textmuted === void 0 ? false : _props$textmuted,\n      _props$onChange = props.onChange,\n      onChange = _props$onChange === void 0 ? function (val) {\n    return val;\n  } : _props$onChange,\n      _props$isDisabled = props.isDisabled,\n      isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled,\n      _props$selectableOpti = props.selectableOptions,\n      selectableOptions = _props$selectableOpti === void 0 ? [] : _props$selectableOpti,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? \"\" : _props$defaultValue,\n      placeholder = props.placeholder,\n      _props$getOptionValue = props.getOptionValue,\n      getOptionValue = _props$getOptionValue === void 0 ? function (el) {\n    return el && el !== \"\" ? el : null;\n  } : _props$getOptionValue,\n      _props$getOptionStyle = props.getOptionStyle,\n      getOptionStyle = _props$getOptionStyle === void 0 ? function () {\n    return {};\n  } : _props$getOptionStyle;\n\n  var handleChange = function handleChange(val) {\n    if (validationFunc(val)) {\n      onChange(val);\n      return;\n    }\n  };\n\n  return __jsx(Form.Group, {\n    className: formGroupClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Label, {\n    className: formLabelClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, label), __jsx(Row, {\n    className: \"w-100 ml-0 mr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(Col, {\n    md: 12,\n    className: \"pl-1 pr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Control, {\n    as: \"select\",\n    placeholder: placeholder,\n    onChange: function onChange(event) {\n      return handleChange(event.target.value);\n    },\n    disabled: isDisabled,\n    value: defaultValue,\n    custom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, selectableOptions.map(function (el) {\n    return __jsx(\"option\", {\n      style: getOptionStyle(el),\n      key: el,\n      value: getOptionValue(el),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 42\n      }\n    }, el);\n  })))), textmuted && __jsx(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, textmuted));\n};\n/*\n------------------------------[STATE]------------------------------\nconst [selectVal, setSelectVal] = useState(\"\")\n\nconst [optionsList, setOptionsList] = useState([\n  \"blue\", \"red\", \"green\", \"cyan\"\n])\n\nconst handleChangeSelectVal = (val) => {\n  setSelectVal(val)\n}\n\n\n------------------------------[RETURN]------------------------------\n<Select\n  //formGroupClass={\"mt-5\"}\n  //formLabelClass={\"mt-5\"}\n  validationFunc={() => true}\n  label={\"label\"}\n  textmuted={\"text muted\"}\n  onChange={handleChangeSelectVal}\n  isDisabled={false}\n  selectableOptions={optionsList}\n  //placeholder={\"placeholder\"}\n  //getOptionValue={col => col}\n  //getOptionStyle={col => ({ color: `${col} !important` })}\n  defaultValue={selectVal}\n/>\n*/\n\n_c = Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/archive/ui/Select.js"],"names":["Form","Row","Col","Select","props","formGroupClass","formLabelClass","validationFunc","label","textmuted","onChange","val","isDisabled","selectableOptions","defaultValue","placeholder","getOptionValue","el","getOptionStyle","handleChange","event","target","value","map"],"mappings":"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","sourcesContent":["import {\n  Form,\n  Row,\n  Col\n} from 'react-bootstrap'\n\n\nexport const Select = function (props) {\n\n  const {\n    formGroupClass = \"\",\n    formLabelClass = \"\",\n    validationFunc = () => true,\n    label = \"\",\n    textmuted = false,\n    onChange = val => val,\n    isDisabled = false,\n    selectableOptions = [],\n    defaultValue = \"\",\n    placeholder,\n    getOptionValue = el => (el && el !== \"\") ? el : null,\n    getOptionStyle = () => ({}),\n  } = props\n\n  const handleChange = (val) => {\n    if (validationFunc(val)) {\n      onChange(val)\n      return\n    }\n  }\n\n  return (\n    <Form.Group className={formGroupClass}>\n      <Form.Label className={formLabelClass}>{label}</Form.Label>\n      <Row className=\"w-100 ml-0 mr-0\">\n        <Col md={12} className=\"pl-1 pr-1\">\n          <Form.Control\n            as=\"select\"\n            placeholder={placeholder}\n            onChange={(event) => handleChange(event.target.value)}\n            disabled={isDisabled}\n            value={defaultValue}\n            custom>\n            {selectableOptions.map(el => <option\n              style={getOptionStyle(el)}\n              key={el}\n              value={getOptionValue(el)}\n            >\n              {el}\n            </option>\n            )}\n          </Form.Control>\n        </Col>\n      </Row>\n      {textmuted && <Form.Text className=\"text-muted\">\n        {textmuted}\n      </Form.Text>}\n    </Form.Group>\n  )\n}\n\n/*\n------------------------------[STATE]------------------------------\nconst [selectVal, setSelectVal] = useState(\"\")\n\nconst [optionsList, setOptionsList] = useState([\n  \"blue\", \"red\", \"green\", \"cyan\"\n])\n\nconst handleChangeSelectVal = (val) => {\n  setSelectVal(val)\n}\n\n\n------------------------------[RETURN]------------------------------\n<Select\n  //formGroupClass={\"mt-5\"}\n  //formLabelClass={\"mt-5\"}\n  validationFunc={() => true}\n  label={\"label\"}\n  textmuted={\"text muted\"}\n  onChange={handleChangeSelectVal}\n  isDisabled={false}\n  selectableOptions={optionsList}\n  //placeholder={\"placeholder\"}\n  //getOptionValue={col => col}\n  //getOptionStyle={col => ({ color: `${col} !important` })}\n  defaultValue={selectVal}\n/>\n*/"]},"metadata":{},"sourceType":"module"}