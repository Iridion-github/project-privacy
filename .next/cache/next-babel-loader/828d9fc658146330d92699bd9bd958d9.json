{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { registerLocale, setDefaultLocale } from \"react-datepicker\";\nimport it from 'date-fns/locale/it';\nregisterLocale('it', it);\nsetDefaultLocale('it');\nimport { Form, Row, Col } from 'react-bootstrap';\nimport { DateInput } from './DateInput';\nexport var DateIntervalInput = function DateIntervalInput(_ref) {\n  var _ref$formLabelClass = _ref.formLabelClass,\n      formLabelClass = _ref$formLabelClass === void 0 ? \"\" : _ref$formLabelClass,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? \"\" : _ref$label,\n      _ref$textmuted = _ref.textmuted,\n      textmuted = _ref$textmuted === void 0 ? \"\" : _ref$textmuted,\n      _ref$colSpan_ = _ref.colSpan_1,\n      colSpan_1 = _ref$colSpan_ === void 0 ? 6 : _ref$colSpan_,\n      _ref$colSpan_2 = _ref.colSpan_2,\n      colSpan_2 = _ref$colSpan_2 === void 0 ? 6 : _ref$colSpan_2,\n      _ref$dateFormat = _ref.dateFormat,\n      dateFormat = _ref$dateFormat === void 0 ? 'dd/MM/yyyy' : _ref$dateFormat,\n      _ref$label2 = _ref.label1,\n      label1 = _ref$label2 === void 0 ? \"\" : _ref$label2,\n      _ref$value_ = _ref.value_1,\n      value_1 = _ref$value_ === void 0 ? new Date() : _ref$value_,\n      _ref$datepickerClassN = _ref.datepickerClassName_1,\n      datepickerClassName_1 = _ref$datepickerClassN === void 0 ? \"\" : _ref$datepickerClassN,\n      _ref$calendarClassNam = _ref.calendarClassName_1,\n      calendarClassName_1 = _ref$calendarClassNam === void 0 ? \"\" : _ref$calendarClassNam,\n      _ref$onChange_ = _ref.onChange_1,\n      onChange_1 = _ref$onChange_ === void 0 ? function (val) {\n    return val;\n  } : _ref$onChange_,\n      _ref$withTime_ = _ref.withTime_1,\n      withTime_1 = _ref$withTime_ === void 0 ? false : _ref$withTime_,\n      _ref$isDisabled_ = _ref.isDisabled_1,\n      isDisabled_1 = _ref$isDisabled_ === void 0 ? false : _ref$isDisabled_,\n      _ref$filterDate_ = _ref.filterDate_1,\n      filterDate_1 = _ref$filterDate_ === void 0 ? function () {\n    return true;\n  } : _ref$filterDate_,\n      _ref$locale_ = _ref.locale_1,\n      locale_1 = _ref$locale_ === void 0 ? \"it\" : _ref$locale_,\n      _ref$maxDate_ = _ref.maxDate_1,\n      maxDate_1 = _ref$maxDate_ === void 0 ? value_2 : _ref$maxDate_,\n      _ref$minDate_ = _ref.minDate_1,\n      minDate_1 = _ref$minDate_ === void 0 ? null : _ref$minDate_,\n      _ref$readOnly_ = _ref.readOnly_1,\n      readOnly_1 = _ref$readOnly_ === void 0 ? false : _ref$readOnly_,\n      _ref$required_ = _ref.required_1,\n      required_1 = _ref$required_ === void 0 ? false : _ref$required_,\n      _ref$excludeDates_ = _ref.excludeDates_1,\n      excludeDates_1 = _ref$excludeDates_ === void 0 ? [] : _ref$excludeDates_,\n      _ref$removeStartDate = _ref.removeStartDate,\n      removeStartDate = _ref$removeStartDate === void 0 ? null : _ref$removeStartDate,\n      _ref$label3 = _ref.label2,\n      label2 = _ref$label3 === void 0 ? \"\" : _ref$label3,\n      _ref$value_2 = _ref.value_2,\n      value_2 = _ref$value_2 === void 0 ? new Date() : _ref$value_2,\n      _ref$datepickerClassN2 = _ref.datepickerClassName_2,\n      datepickerClassName_2 = _ref$datepickerClassN2 === void 0 ? \"\" : _ref$datepickerClassN2,\n      _ref$calendarClassNam2 = _ref.calendarClassName_2,\n      calendarClassName_2 = _ref$calendarClassNam2 === void 0 ? \"\" : _ref$calendarClassNam2,\n      _ref$onChange_2 = _ref.onChange_2,\n      onChange_2 = _ref$onChange_2 === void 0 ? function (val) {\n    return val;\n  } : _ref$onChange_2,\n      _ref$withTime_2 = _ref.withTime_2,\n      withTime_2 = _ref$withTime_2 === void 0 ? false : _ref$withTime_2,\n      _ref$isDisabled_2 = _ref.isDisabled_2,\n      isDisabled_2 = _ref$isDisabled_2 === void 0 ? false : _ref$isDisabled_2,\n      _ref$filterDate_2 = _ref.filterDate_2,\n      filterDate_2 = _ref$filterDate_2 === void 0 ? function () {\n    return true;\n  } : _ref$filterDate_2,\n      _ref$locale_2 = _ref.locale_2,\n      locale_2 = _ref$locale_2 === void 0 ? \"it\" : _ref$locale_2,\n      _ref$maxDate_2 = _ref.maxDate_2,\n      maxDate_2 = _ref$maxDate_2 === void 0 ? null : _ref$maxDate_2,\n      _ref$minDate_2 = _ref.minDate_2,\n      minDate_2 = _ref$minDate_2 === void 0 ? value_1 : _ref$minDate_2,\n      _ref$readOnly_2 = _ref.readOnly_2,\n      readOnly_2 = _ref$readOnly_2 === void 0 ? false : _ref$readOnly_2,\n      _ref$required_2 = _ref.required_2,\n      required_2 = _ref$required_2 === void 0 ? false : _ref$required_2,\n      _ref$excludeDates_2 = _ref.excludeDates_2,\n      excludeDates_2 = _ref$excludeDates_2 === void 0 ? [] : _ref$excludeDates_2,\n      _ref$removeEndDate = _ref.removeEndDate,\n      removeEndDate = _ref$removeEndDate === void 0 ? null : _ref$removeEndDate;\n  return __jsx(React.Fragment, null, __jsx(Row, {\n    className: \"w-100 ml-0 mr-0\"\n  }, label && label.length > 0 ? __jsx(\"h5\", {\n    className: formLabelClass + \" w-100 text-center\"\n  }, label) : \"\", label1 && label1.length > 0 ? __jsx(Col, {\n    md: 6,\n    className: \"pl-1 pr-1 justify-content-center\"\n  }, __jsx(\"h5\", {\n    className: \"w-100 text-center mb-0\"\n  }, label1)) : \"\", label2 && label2.length > 0 ? __jsx(Col, {\n    md: 6,\n    className: \"pl-1 pr-1 justify-content-center\"\n  }, __jsx(\"h5\", {\n    className: \"w-100 text-center mb-0\"\n  }, label2)) : \"\"), __jsx(Row, {\n    className: \"w-100 justify-content-center ml-0 mr-0\"\n  }, __jsx(Col, {\n    md: colSpan_1,\n    className: \"pl-1 pr-1\"\n  }, __jsx(DateInput, {\n    value: value_1,\n    datepickerClassName: datepickerClassName_1,\n    calendarClassName: calendarClassName_1,\n    onChange: onChange_1,\n    withTime: withTime_1,\n    dateFormat: dateFormat,\n    isDisabled: isDisabled_1,\n    excludeDates: excludeDates_1,\n    filterDate: filterDate_1,\n    locale: locale_1,\n    maxDate: maxDate_1,\n    minDate: minDate_1,\n    readOnly: readOnly_1,\n    required: required_1,\n    removeDate: removeStartDate\n  })), __jsx(Col, {\n    md: colSpan_2,\n    className: \"pl-1 pr-1\"\n  }, __jsx(DateInput, {\n    value: value_2,\n    datepickerClassName: datepickerClassName_2,\n    calendarClassName: calendarClassName_2,\n    onChange: onChange_2,\n    withTime: withTime_2,\n    dateFormat: dateFormat,\n    isDisabled: isDisabled_2,\n    excludeDates: excludeDates_2,\n    filterDate: filterDate_2,\n    locale: locale_2,\n    maxDate: maxDate_2,\n    minDate: minDate_2,\n    readOnly: readOnly_2,\n    required: required_2,\n    removeDate: removeEndDate\n  }))), textmuted && __jsx(Row, {\n    className: \"small-text text-muted w-100 justify-content-center ml-0 mr-0\"\n  }, textmuted));\n};\n/*\n------------------------------[RETURN]------------------------------\n<DateIntervalInput\n        //container\n        formLabelClass=\"\"\n        label=\"prova interval\"\n        textmuted=\"prova textmuted interval\"\n        colSpan_1={3}\n        colSpan_2={3}\n        //dateFormat={} //Mai passarlo come null o \"\", causa bugs di Datepicker.js\n        //start\n        value_1={startEs}\n        //datepickerClassName_1={null}\n        //calendarClassName_1={null}\n        onChange_1={setStartEs}\n        withTime_1={false}\n        //isDisabled_1={false}\n        filterDate_1={() => true}\n        //locale_1={null}\n        maxDate_1={endEs} //maxDate_1 e value_2 devono sempre essere bindati alla stessa variabile di stato!\n        //minDate_1={new Date}\n        readOnly_1={false}\n        required_1={false}\n        //excludeDates_1={null}\n        //end\n        value_2={endEs} //\n        datepickerClassName_2={null}\n        calendarClassName_2={null}\n        onChange_2={setEndEs}\n        withTime_2={false}\n        isDisabled_2={false}\n        filterDate_2={() => true}\n        locale_2={null}\n        //maxDate_2={new Date}\n        //minDate_2={new Date}\n        readOnly_2={false}\n        required_2={false}\n        excludeDates_2={null}\n      />\n\n*/","map":null,"metadata":{},"sourceType":"module"}