{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Row, Col } from 'react-bootstrap';\nimport { NumberInput } from './NumberInput';\nexport const DateInputNoCalendar = function ({\n  formGroupClass = \"\",\n  formLabelClass = \"\",\n  calendarClassName = \"\",\n  datepickerClassName = \"\",\n  label = \"\",\n  textmuted = false,\n  selectedDay = \"\",\n  selectedMonth = \"\",\n  selectedYear = \"\",\n  onChange = null,\n  isDisabled = false,\n  withTime = false,\n  dateFormat = 'dd/MM/yyyy',\n  excludeDates = [],\n  filterDate = () => true,\n  locale = \"it\",\n  maxDate = undefined,\n  minDate = undefined,\n  readOnly = false,\n  required = true\n}) {\n  const props = {\n    formGroupClass,\n    formLabelClass,\n    calendarClassName,\n    datepickerClassName,\n    label,\n    textmuted,\n    selectedDay,\n    selectedMonth,\n    selectedYear,\n    onChange,\n    isDisabled,\n    withTime,\n    dateFormat,\n    excludeDates,\n    filterDate,\n    locale,\n    maxDate,\n    minDate,\n    readOnly,\n    required\n  };\n  const currentDate = new Date();\n  const currentYear = Number(currentDate.getYear()) + 1900;\n\n  const validateDay = num => {\n    return num >= 0 && num <= 31;\n  };\n\n  const validateMonth = num => {\n    return num >= 0 && num <= 12;\n  };\n\n  const validateYear = num => {\n    if (num.length < 4) {\n      return num >= 0 && num <= currentYear;\n    } else {\n      return num >= 1800 && num <= currentYear;\n    }\n  };\n\n  return __jsx(Form.Group, {\n    className: formGroupClass\n  }, __jsx(Form.Label, {\n    className: formLabelClass\n  }, label), __jsx(Row, {\n    className: \"w-100 ml-0 mr-0\"\n  }, __jsx(Col, {\n    md: 4,\n    className: \"pl-0 pr-1 PROVA\"\n  }, __jsx(NumberInput, {\n    formGroupClass: \"w-100\",\n    colSpan: 12,\n    placeholderText: \"GG\",\n    textmuted: \"\",\n    value: props.selectedDay,\n    onChange: num => props.onChange(\"day\", num),\n    validationFunc: validateDay\n  })), __jsx(Col, {\n    md: 4,\n    className: \"pl-1 pr-1\"\n  }, __jsx(NumberInput, {\n    colSpan: 12,\n    formGroupClass: \"w-100\",\n    placeholderText: \"MM\",\n    textmuted: \"\",\n    value: props.selectedMonth,\n    onChange: num => props.onChange(\"month\", num),\n    validationFunc: validateMonth\n  })), __jsx(Col, {\n    md: 4,\n    className: \"pl-1 pr-0\"\n  }, __jsx(NumberInput, {\n    colSpan: 12,\n    formGroupClass: \"w-100\",\n    placeholderText: \"AAAA\",\n    textmuted: \"\",\n    value: props.selectedYear,\n    onChange: num => props.onChange(\"year\", num),\n    validationFunc: validateYear\n  }))), textmuted && __jsx(Form.Text, {\n    className: \"text-muted\"\n  }, textmuted));\n};","map":null,"metadata":{},"sourceType":"module"}