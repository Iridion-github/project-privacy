{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { useLanguage } from '../../context/siteLanguageContext'; //context\n\nimport { Row, Col, Pagination, Form, Button } from 'react-bootstrap';\nexport var MyPagination = function MyPagination(props) {\n  var siteLanguage = useLanguage(); //context\n\n  var _useState = useState(\"\"),\n      targetPage = _useState[0],\n      setTargetPage = _useState[1];\n\n  var lastPage = props.totalPages;\n\n  var changePage = function changePage(destination) {\n    return props.setCurrentPage(destination);\n  };\n\n  var firstShownArticleIndex = props.currentPage === 1 ? 1 : props.currentPage * props.elementsPerPage + 1 - props.elementsPerPage;\n  var lastShownArticleIndex = props.currentPage === 1 ? 6 : props.currentPage * props.elementsPerPage;\n  if (lastShownArticleIndex > props.totalElements) lastShownArticleIndex = props.totalElements;\n  return __jsx(Row, {\n    className: \"w-100 m-auto justify-content-center\"\n  }, __jsx(Col, {\n    sm: 7,\n    className: \"m-auto text-center justify-content-center\"\n  }, __jsx(Pagination, {\n    size: \"sm\",\n    className: \"justify-content-end custom-pagination\"\n  }, __jsx(Pagination.First, {\n    onClick: function onClick() {\n      return changePage(1);\n    }\n  }), props.currentPage >= 4 && __jsx(Pagination.Ellipsis, {\n    disabled: true\n  }), props.currentPage - 2 > 0 && __jsx(Pagination.Item, {\n    onClick: function onClick() {\n      return changePage(props.currentPage - 2);\n    }\n  }, props.currentPage - 2), props.currentPage - 1 > 0 && __jsx(Pagination.Item, {\n    onClick: function onClick() {\n      return changePage(props.currentPage - 1);\n    }\n  }, props.currentPage - 1), __jsx(Pagination.Item, {\n    active: true\n  }, props.currentPage), props.currentPage + 1 < lastPage && __jsx(Pagination.Item, {\n    onClick: function onClick() {\n      return changePage(props.currentPage + 1);\n    }\n  }, props.currentPage + 1), props.currentPage + 2 < lastPage && __jsx(Pagination.Item, {\n    onClick: function onClick() {\n      return changePage(props.currentPage + 2);\n    }\n  }, props.currentPage + 2), props.currentPage <= lastPage - 4 && __jsx(Pagination.Ellipsis, {\n    disabled: true\n  }), props.currentPage < lastPage && __jsx(Pagination.Item, {\n    onClick: function onClick() {\n      return changePage(lastPage);\n    }\n  }, lastPage), __jsx(Pagination.Last, {\n    onClick: function onClick() {\n      return changePage(lastPage);\n    }\n  }), props.totalPages > 20 && __jsx(Form, {\n    inline: true,\n    className: \"ml-2\"\n  }, __jsx(Form.Group, {\n    controlId: \"goalPage\",\n    className: \"inline-form-custom\"\n  }, __jsx(Form.Control, {\n    value: targetPage,\n    onChange: function onChange(event) {\n      return setTargetPage(event.target.value);\n    },\n    size: \"sm\",\n    type: \"number\",\n    placeholder: siteLanguage === \"ita\" ? \"Vai a\" : \"Go to\",\n    className: \"small-input\"\n  }), __jsx(Button, {\n    disabled: targetPage === \"\",\n    size: \"sm\",\n    variant: \"info\",\n    className: \"ml-1\",\n    onClick: function onClick() {\n      return changePage(Number(targetPage));\n    }\n  }, __jsx(\"i\", {\n    className: \"fas fa-arrow-right\"\n  })))))), __jsx(Col, {\n    sm: 5,\n    className: \"m-auto text-right\"\n  }, __jsx(\"p\", {\n    className: \"ml-3 text-muted small-text pt-2 pr-5\"\n  }, siteLanguage === \"ita\" ? firstShownArticleIndex + \" - \" + lastShownArticleIndex + \" di \" + props.totalElements + \" articoli\" : firstShownArticleIndex + \" - \" + lastShownArticleIndex + \" of \" + props.totalElements + \" articles\")));\n};","map":null,"metadata":{},"sourceType":"module"}