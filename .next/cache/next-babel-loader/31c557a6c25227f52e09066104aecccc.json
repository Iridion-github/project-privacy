{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { Row, Col, Card, Button, Image, Nav, Badge } from 'react-bootstrap';\nimport { datePrettifier } from '../../utils/date';\nexport const ReviewPreview = function (props) {\n  const {\n    0: language,\n    1: setLanguage\n  } = useState(\"ita\");\n  return __jsx(Card, {\n    className: \"w-100 mb-4 grey-border\"\n  }, __jsx(Card.Header, null, __jsx(Nav, {\n    variant: \"tabs\",\n    defaultActiveKey: \"#ita\"\n  }, __jsx(Nav.Item, null, __jsx(Nav.Link, {\n    active: language === \"ita\",\n    href: \"#ita\",\n    onClick: () => setLanguage(\"ita\")\n  }, __jsx(Image, {\n    src: \"/bandiere/ita.png\",\n    className: \"black-border flag-icon\"\n  }))), __jsx(Nav.Item, null, __jsx(Nav.Link, {\n    active: language === \"eng\",\n    href: \"#eng\",\n    onClick: () => setLanguage(\"eng\")\n  }, \" \", __jsx(Image, {\n    src: \"/bandiere/GB.png\",\n    className: \"black-border flag-icon\"\n  }))))), __jsx(Card.Body, null, __jsx(Card.Img, {\n    className: \"article-preview-img\",\n    variant: \"top\",\n    src: props.review.previewImg\n  }), __jsx(Card.Title, {\n    className: \"article-preview-title\"\n  }, language === \"ita\" ? props.review.ita.title : props.review.eng.title), __jsx(Card.Text, {\n    className: \"article-preview-subtitle\"\n  }, language === \"ita\" ? props.review.ita.subtitle : props.review.eng.subtitle), __jsx(Row, {\n    className: \"justify-content-end pr-3\"\n  }, __jsx(Button, {\n    size: \"md\",\n    variant: \"info\",\n    onClick: () => props.setOpenedReview(props.review.id)\n  }, language === \"ita\" ? \"Leggi \" : \"Read \", __jsx(\"i\", {\n    className: \"ml-2 fab fa-readme\"\n  })))), __jsx(Card.Footer, null, __jsx(Row, null, __jsx(Col, {\n    md: 5,\n    className: \"pr-0\"\n  }, __jsx(\"small\", {\n    className: \"text-muted\"\n  }, props.review.authors.map((author, i) => {\n    return __jsx(Row, {\n      key: i\n    }, props.review.authors.length > 1 ? \" • \" + author + \"\\n\" : \" • \" + author, \" \");\n  }))), __jsx(Col, {\n    md: 3,\n    className: \"p-0\"\n  }, __jsx(\"span\", {\n    className: \"text-muted\"\n  }, \" \", props.review[language].tags.map(tag => __jsx(Badge, {\n    variant: \"info\",\n    className: \"mr-1\",\n    key: tag\n  }, tag)))), __jsx(Col, {\n    md: 4,\n    className: \"text-right p-0\"\n  }, __jsx(\"small\", {\n    className: \"text-muted\"\n  }, \" \", datePrettifier(props.review.date, language), \" \")))));\n};","map":null,"metadata":{},"sourceType":"module"}