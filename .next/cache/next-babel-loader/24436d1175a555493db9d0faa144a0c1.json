{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Form, Row, Col } from 'react-bootstrap';\nexport var Select = function Select(props) {\n  var _props$formGroupClass = props.formGroupClass,\n      formGroupClass = _props$formGroupClass === void 0 ? \"\" : _props$formGroupClass,\n      _props$formLabelClass = props.formLabelClass,\n      formLabelClass = _props$formLabelClass === void 0 ? \"\" : _props$formLabelClass,\n      _props$validationFunc = props.validationFunc,\n      validationFunc = _props$validationFunc === void 0 ? function () {\n    return true;\n  } : _props$validationFunc,\n      _props$label = props.label,\n      label = _props$label === void 0 ? \"\" : _props$label,\n      _props$textmuted = props.textmuted,\n      textmuted = _props$textmuted === void 0 ? false : _props$textmuted,\n      _props$onChange = props.onChange,\n      onChange = _props$onChange === void 0 ? function (val) {\n    return val;\n  } : _props$onChange,\n      _props$isDisabled = props.isDisabled,\n      isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled,\n      _props$selectableOpti = props.selectableOptions,\n      selectableOptions = _props$selectableOpti === void 0 ? [] : _props$selectableOpti,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? \"\" : _props$defaultValue,\n      placeholder = props.placeholder,\n      _props$getOptionValue = props.getOptionValue,\n      getOptionValue = _props$getOptionValue === void 0 ? function (el) {\n    return el && el !== \"\" ? el : null;\n  } : _props$getOptionValue,\n      _props$getOptionStyle = props.getOptionStyle,\n      getOptionStyle = _props$getOptionStyle === void 0 ? function () {\n    return {};\n  } : _props$getOptionStyle;\n\n  var handleChange = function handleChange(val) {\n    if (validationFunc(val)) {\n      onChange(val);\n      return;\n    }\n  };\n\n  return __jsx(Form.Group, {\n    className: formGroupClass\n  }, __jsx(Form.Label, {\n    className: formLabelClass\n  }, label), __jsx(Row, {\n    className: \"w-100 ml-0 mr-0\"\n  }, __jsx(Col, {\n    md: 12,\n    className: \"pl-1 pr-1\"\n  }, __jsx(Form.Control, {\n    as: \"select\",\n    placeholder: placeholder,\n    onChange: function onChange(event) {\n      return handleChange(event.target.value);\n    },\n    disabled: isDisabled,\n    value: defaultValue,\n    custom: true\n  }, selectableOptions.map(function (el) {\n    return __jsx(\"option\", {\n      style: getOptionStyle(el),\n      key: el,\n      value: getOptionValue(el)\n    }, el);\n  })))), textmuted && __jsx(Form.Text, {\n    className: \"text-muted\"\n  }, textmuted));\n};\n/*\n------------------------------[STATE]------------------------------\nconst [selectVal, setSelectVal] = useState(\"\")\n\nconst [optionsList, setOptionsList] = useState([\n  \"blue\", \"red\", \"green\", \"cyan\"\n])\n\nconst handleChangeSelectVal = (val) => {\n  setSelectVal(val)\n}\n\n\n------------------------------[RETURN]------------------------------\n<Select\n  //formGroupClass={\"mt-5\"}\n  //formLabelClass={\"mt-5\"}\n  validationFunc={() => true}\n  label={\"label\"}\n  textmuted={\"text muted\"}\n  onChange={handleChangeSelectVal}\n  isDisabled={false}\n  selectableOptions={optionsList}\n  //placeholder={\"placeholder\"}\n  //getOptionValue={col => col}\n  //getOptionStyle={col => ({ color: `${col} !important` })}\n  defaultValue={selectVal}\n/>\n*/","map":null,"metadata":{},"sourceType":"module"}