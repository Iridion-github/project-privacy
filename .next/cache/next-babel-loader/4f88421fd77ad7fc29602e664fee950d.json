{"ast":null,"code":"var _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/archive/ui/ReactSelect.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Form, Row, Col } from 'react-bootstrap';\nimport Select from 'react-select';\nexport const ReactSelect = function (props) {\n  //[CHECKPOINT] Cominciato con l'uso di react-select. Per ora si fallisce nel fargli prendere un tema.\n  const getStandardTheme = theme => _objectSpread(_objectSpread({}, theme), {}, {\n    //borderRadius: 0,\n    colors: _objectSpread(_objectSpread({}, theme.colors), {}, {\n      text: 'red' //primary25: 'hotpink',\n      //primary: 'black',\n\n    })\n  });\n\n  const {\n    formGroupClass = \"\",\n    formLabelClass = \"\",\n    isMulti = false,\n    validationFunc = () => true,\n    label = \"\",\n    textmuted = false,\n    onChange = val => val,\n    isDisabled = false,\n    selectableOptions = [],\n    defaultValue = \"\",\n    placeholder,\n    getOptionValue = el => el && el !== \"\" ? el : null,\n    getOptionStyle = () => ({}),\n    getCustomTheme = null\n  } = props;\n\n  const handleChange = val => {\n    if (validationFunc(val)) {\n      onChange(val);\n      return;\n    }\n  };\n\n  return __jsx(Form.Group, {\n    className: formGroupClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Label, {\n    className: formLabelClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, label), __jsx(Row, {\n    className: \"w-100 ml-0 mr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(Col, {\n    md: 12,\n    className: \"pl-1 pr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, __jsx(Select, {\n    isMulti: isMulti,\n    options: selectableOptions,\n    disabled: isDisabled,\n    defaultValue: defaultValue,\n    placeholder: placeholder,\n    onChange: handleChange,\n    getOptionValue: getOptionValue,\n    theme: getCustomTheme ? getCustomTheme : getStandardTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }))), textmuted && __jsx(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 27\n    }\n  }, textmuted));\n};","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/components/archive/ui/ReactSelect.js"],"names":["Form","Row","Col","Select","ReactSelect","props","getStandardTheme","theme","colors","text","formGroupClass","formLabelClass","isMulti","validationFunc","label","textmuted","onChange","val","isDisabled","selectableOptions","defaultValue","placeholder","getOptionValue","el","getOptionStyle","getCustomTheme","handleChange"],"mappings":";;;;;;;;;;AAAA,SACIA,IADJ,EAEIC,GAFJ,EAGIC,GAHJ,QAIO,iBAJP;AAKA,OAAOC,MAAP,MAAmB,cAAnB;AAGA,OAAO,MAAMC,WAAW,GAAG,UAAUC,KAAV,EAAiB;AAExC;AAEA,QAAMC,gBAAgB,GAAIC,KAAD,oCAClBA,KADkB;AAErB;AACAC,IAAAA,MAAM,kCACCD,KAAK,CAACC,MADP;AAEFC,MAAAA,IAAI,EAAE,KAFJ,CAGF;AACA;;AAJE;AAHe,IAAzB;;AAWA,QAAM;AACFC,IAAAA,cAAc,GAAG,EADf;AAEFC,IAAAA,cAAc,GAAG,EAFf;AAGFC,IAAAA,OAAO,GAAG,KAHR;AAIFC,IAAAA,cAAc,GAAG,MAAM,IAJrB;AAKFC,IAAAA,KAAK,GAAG,EALN;AAMFC,IAAAA,SAAS,GAAG,KANV;AAOFC,IAAAA,QAAQ,GAAGC,GAAG,IAAIA,GAPhB;AAQFC,IAAAA,UAAU,GAAG,KARX;AASFC,IAAAA,iBAAiB,GAAG,EATlB;AAUFC,IAAAA,YAAY,GAAG,EAVb;AAWFC,IAAAA,WAXE;AAYFC,IAAAA,cAAc,GAAGC,EAAE,IAAKA,EAAE,IAAIA,EAAE,KAAK,EAAd,GAAoBA,EAApB,GAAyB,IAZ9C;AAaFC,IAAAA,cAAc,GAAG,OAAO,EAAP,CAbf;AAcFC,IAAAA,cAAc,GAAG;AAdf,MAeFpB,KAfJ;;AAiBA,QAAMqB,YAAY,GAAIT,GAAD,IAAS;AAC1B,QAAIJ,cAAc,CAACI,GAAD,CAAlB,EAAyB;AACrBD,MAAAA,QAAQ,CAACC,GAAD,CAAR;AACA;AACH;AACJ,GALD;;AAOA,SACI,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAEP,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAEC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCG,KAAxC,CADJ,EAEI,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,OAAO,EAAEF,OADb;AAEI,IAAA,OAAO,EAAEO,iBAFb;AAGI,IAAA,QAAQ,EAAED,UAHd;AAII,IAAA,YAAY,EAAEE,YAJlB;AAKI,IAAA,WAAW,EAAEC,WALjB;AAMI,IAAA,QAAQ,EAAEK,YANd;AAOI,IAAA,cAAc,EAAEJ,cAPpB;AAQI,IAAA,KAAK,EAAEG,cAAc,GAAGA,cAAH,GAAoBnB,gBAR7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFJ,EAgBKS,SAAS,IAAI,MAAC,IAAD,CAAM,IAAN;AAAW,IAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACTA,SADS,CAhBlB,CADJ;AAsBH,CA7DM","sourcesContent":["import {\n    Form,\n    Row,\n    Col\n} from 'react-bootstrap'\nimport Select from 'react-select'\n\n\nexport const ReactSelect = function (props) {\n\n    //[CHECKPOINT] Cominciato con l'uso di react-select. Per ora si fallisce nel fargli prendere un tema.\n\n    const getStandardTheme = (theme) => ({\n        ...theme,\n        //borderRadius: 0,\n        colors: {\n            ...theme.colors,\n            text: 'red',\n            //primary25: 'hotpink',\n            //primary: 'black',\n        }\n    })\n\n    const {\n        formGroupClass = \"\",\n        formLabelClass = \"\",\n        isMulti = false,\n        validationFunc = () => true,\n        label = \"\",\n        textmuted = false,\n        onChange = val => val,\n        isDisabled = false,\n        selectableOptions = [],\n        defaultValue = \"\",\n        placeholder,\n        getOptionValue = el => (el && el !== \"\") ? el : null,\n        getOptionStyle = () => ({}),\n        getCustomTheme = null\n    } = props\n\n    const handleChange = (val) => {\n        if (validationFunc(val)) {\n            onChange(val)\n            return\n        }\n    }\n\n    return (\n        <Form.Group className={formGroupClass}>\n            <Form.Label className={formLabelClass}>{label}</Form.Label>\n            <Row className=\"w-100 ml-0 mr-0\">\n                <Col md={12} className=\"pl-1 pr-1\">\n                    <Select\n                        isMulti={isMulti}\n                        options={selectableOptions}\n                        disabled={isDisabled}\n                        defaultValue={defaultValue}\n                        placeholder={placeholder}\n                        onChange={handleChange}\n                        getOptionValue={getOptionValue}\n                        theme={getCustomTheme ? getCustomTheme : getStandardTheme}\n                    />\n                </Col>\n            </Row>\n            {textmuted && <Form.Text className=\"text-muted\">\n                {textmuted}\n            </Form.Text>}\n        </Form.Group>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}