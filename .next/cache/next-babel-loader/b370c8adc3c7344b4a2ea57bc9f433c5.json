{"ast":null,"code":"var _jsxFileName = \"/home/iridion/Desktop/Repos/Freelancer/project-privacy/pages/recensioniBibliografiche.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from '../styles/Home.module.css';\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { useLanguage, useLanguageUpdate } from '../context/siteLanguageContext'; //context\n\nimport { Row, Col } from 'react-bootstrap';\nimport { Header } from '../components/layout/Header';\nimport { Navigation } from '../components/layout/Navbar';\nimport { Breadcrumbs } from '../components/layout/Breadcrumbs';\nimport { Footer } from '../components/layout/Footer';\nimport { ReviewsList } from \"../components/reviews/ReviewsList\";\nimport { ReviewsLeftMenu } from \"../components/reviews/ReviewsLeftMenu\";\nimport { removeDuplicatesById, includesAll } from '../utils/arrays';\n\nfunction recensioniBibliografiche({\n  DBreviews,\n  reviewTopics\n}) {\n  const siteLanguage = useLanguage(); //context\n\n  const {\n    0: reviews,\n    1: setReviews\n  } = useState(DBreviews);\n  const {\n    0: openedReview,\n    1: setOpenedReview\n  } = useState(null);\n  const router = useRouter();\n\n  const handleOpenedReview = reviewId => {\n    const fullRoute = reviewId !== null ? '/recensioniBibliografiche/' + reviewId : '/recensioniBibliografiche/';\n    router.push(fullRoute);\n  };\n\n  const searchTopic = async (topic, lang) => {\n    handleOpenedReview(null);\n    setFilteredByTopic(true);\n    const result = [];\n\n    if (topic !== \"\") {\n      DBreviews.forEach(art => {\n        if (includesAll(art[lang].topic, topic, Array.isArray(art[lang].topic)).length > 0) {\n          result.push(art);\n        }\n      });\n    }\n\n    setReviews(result);\n  };\n\n  const removeTopicFilter = () => {\n    handleOpenedReview(null);\n    setFilteredByTopic(false);\n    setReviews(DBreviews);\n  };\n\n  const searchFilter = (reviews, input, lang) => {\n    const searchTerms = input.toLowerCase().split(\" \");\n    const found = [];\n\n    if (input !== \"\") {\n      reviews.forEach(rev => {\n        if (includesAll(rev.author, searchTerms, Array.isArray(rev.author)).length > 0 || includesAll(rev[lang].topic, searchTerms, Array.isArray(rev[lang].topic)).length > 0 || includesAll(rev[lang].tags, searchTerms, Array.isArray(rev[lang].tags)).length > 0 || includesAll(rev.ita.title, searchTerms, Array.isArray(rev.ita.title)).length > 0 || includesAll(rev.ita.subtitle, searchTerms, Array.isArray(rev.ita.subtitle)).length > 0 || includesAll(rev.ita.content, searchTerms, Array.isArray(rev.ita.content)).length > 0 || includesAll(rev.eng.title, searchTerms, Array.isArray(rev.eng.title)).length > 0 || includesAll(rev.eng.subtitle, searchTerms, Array.isArray(rev.eng.subtitle)).length > 0 || includesAll(rev.eng.content, searchTerms, Array.isArray(rev.eng.content)).length > 0) {\n          found.push(art);\n        }\n      });\n    }\n\n    const result = removeDuplicatesById(found);\n    return result;\n  };\n\n  const {\n    0: filtered,\n    1: setFiltered\n  } = useState(false);\n  const {\n    0: filteredByTopic,\n    1: setFilteredByTopic\n  } = useState(false);\n  const {\n    0: searchInput,\n    1: setSearchInput\n  } = useState(\"\");\n  return __jsx(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(Header, {\n    title: siteLanguage === \"ita\" ? \"Recensioni Bibliografiche\" : \"Bibliographic Reviews\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), __jsx(Navigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), __jsx(Breadcrumbs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), __jsx(\"main\", {\n    className: styles.main,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    className: \"w-100 mb-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    md: 3,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, __jsx(ReviewsLeftMenu, {\n    allReviews: reviews,\n    allTopics: reviewTopics,\n    searchTopic: searchTopic,\n    searchInput: searchInput,\n    setSearchInput: setSearchInput,\n    filteredByTopic: filteredByTopic,\n    removeTopicFilter: removeTopicFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  })), __jsx(Col, {\n    md: 6,\n    className: \"justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, openedReview === null && __jsx(ReviewsList, {\n    allReviews: reviews,\n    setOpenedReview: handleOpenedReview,\n    searchFilter: searchFilter,\n    filtered: filtered,\n    setFiltered: setFiltered,\n    searchInput: searchInput,\n    setSearchInput: setSearchInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  })), __jsx(Col, {\n    md: 3,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }))), __jsx(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }));\n}\n\nrecensioniBibliografiche.getInitialProps = async context => {\n  const apiUrlReview = \"http://\" + context.req.headers.host + \"/api/review\";\n  const resReview = await fetch(apiUrlReview);\n  const DBreviews = await resReview.json();\n  const apiUrlTopics = \"http://\" + context.req.headers.host + \"/api/reviewTopics\";\n  const resReviewTopics = await fetch(apiUrlTopics);\n  const reviewTopics = await resReviewTopics.json();\n  return {\n    DBreviews: DBreviews.data,\n    reviewTopics: reviewTopics.data\n  };\n};\n\nexport default recensioniBibliografiche;\n/* //Rimozione di getServerSideProps per deployare su Firebase\nexport async function getServerSideProps(context) {\n  const apiUrlReview = \"http://\" + context.req.headers.host + \"/api/review\"\n  const resReview = await fetch(apiUrlReview)\n  const DBreviews = await resReview.json()\n  const apiUrlTopics = \"http://\" + context.req.headers.host + \"/api/reviewTopics\"\n  const resReviewTopics = await fetch(apiUrlTopics)\n  const reviewTopics = await resReviewTopics.json()\n  return { props: { DBreviews: DBreviews.data, reviewTopics: reviewTopics.data } }\n}\n*/","map":{"version":3,"sources":["/home/iridion/Desktop/Repos/Freelancer/project-privacy/pages/recensioniBibliografiche.js"],"names":["styles","useState","useRouter","useLanguage","useLanguageUpdate","Row","Col","Header","Navigation","Breadcrumbs","Footer","ReviewsList","ReviewsLeftMenu","removeDuplicatesById","includesAll","recensioniBibliografiche","DBreviews","reviewTopics","siteLanguage","reviews","setReviews","openedReview","setOpenedReview","router","handleOpenedReview","reviewId","fullRoute","push","searchTopic","topic","lang","setFilteredByTopic","result","forEach","art","Array","isArray","length","removeTopicFilter","searchFilter","input","searchTerms","toLowerCase","split","found","rev","author","tags","ita","title","subtitle","content","eng","filtered","setFiltered","filteredByTopic","searchInput","setSearchInput","container","main","getInitialProps","context","apiUrlReview","req","headers","host","resReview","fetch","json","apiUrlTopics","resReviewTopics","data"],"mappings":"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","sourcesContent":["import styles from '../styles/Home.module.css'\nimport { useState } from 'react'\nimport { useRouter } from 'next/router'\nimport { useLanguage, useLanguageUpdate } from '../context/siteLanguageContext' //context\nimport {\n  Row,\n  Col\n} from 'react-bootstrap'\nimport { Header } from '../components/layout/Header'\nimport { Navigation } from '../components/layout/Navbar'\nimport { Breadcrumbs } from '../components/layout/Breadcrumbs'\nimport { Footer } from '../components/layout/Footer'\nimport { ReviewsList } from \"../components/reviews/ReviewsList\"\nimport { ReviewsLeftMenu } from \"../components/reviews/ReviewsLeftMenu\"\nimport { removeDuplicatesById, includesAll } from '../utils/arrays'\n\nfunction recensioniBibliografiche({ DBreviews, reviewTopics }) {\n  const siteLanguage = useLanguage() //context\n  const [reviews, setReviews] = useState(DBreviews)\n  const [openedReview, setOpenedReview] = useState(null)\n\n  const router = useRouter()\n\n  const handleOpenedReview = (reviewId) => {\n    const fullRoute = reviewId !== null ? '/recensioniBibliografiche/' + reviewId : '/recensioniBibliografiche/'\n    router.push(fullRoute)\n  }\n\n  const searchTopic = async (topic, lang) => {\n    handleOpenedReview(null)\n    setFilteredByTopic(true)\n    const result = []\n    if (topic !== \"\") {\n      DBreviews.forEach(art => {\n        if (includesAll(art[lang].topic, topic, Array.isArray(art[lang].topic)).length > 0) {\n          result.push(art)\n        }\n      })\n    }\n    setReviews(result)\n  }\n\n  const removeTopicFilter = () => {\n    handleOpenedReview(null)\n    setFilteredByTopic(false)\n    setReviews(DBreviews)\n  }\n\n  const searchFilter = (reviews, input, lang) => {\n    const searchTerms = input.toLowerCase().split(\" \")\n    const found = []\n    if (input !== \"\") {\n      reviews.forEach(rev => {\n        if (\n          includesAll(rev.author, searchTerms, Array.isArray(rev.author)).length > 0\n          || includesAll(rev[lang].topic, searchTerms, Array.isArray(rev[lang].topic)).length > 0\n          || includesAll(rev[lang].tags, searchTerms, Array.isArray(rev[lang].tags)).length > 0\n          || includesAll(rev.ita.title, searchTerms, Array.isArray(rev.ita.title)).length > 0\n          || includesAll(rev.ita.subtitle, searchTerms, Array.isArray(rev.ita.subtitle)).length > 0\n          || includesAll(rev.ita.content, searchTerms, Array.isArray(rev.ita.content)).length > 0\n          || includesAll(rev.eng.title, searchTerms, Array.isArray(rev.eng.title)).length > 0\n          || includesAll(rev.eng.subtitle, searchTerms, Array.isArray(rev.eng.subtitle)).length > 0\n          || includesAll(rev.eng.content, searchTerms, Array.isArray(rev.eng.content)).length > 0\n        ) {\n          found.push(art)\n        }\n      })\n    }\n    const result = removeDuplicatesById(found)\n    return result\n  }\n\n  const [filtered, setFiltered] = useState(false)\n  const [filteredByTopic, setFilteredByTopic] = useState(false)\n  const [searchInput, setSearchInput] = useState(\"\")\n\n  return (\n    <div className={styles.container}>\n      <Header\n        title={siteLanguage === \"ita\" ? \"Recensioni Bibliografiche\" : \"Bibliographic Reviews\"}\n      />\n      {/* Navbar */}\n      <Navigation />\n      <Breadcrumbs />\n      {/* Page Content */}\n      <main className={styles.main}>\n        <Row className=\"w-100 mb-5\">\n          <Col md={3} className=\"\">\n            <ReviewsLeftMenu\n              allReviews={reviews}\n              allTopics={reviewTopics}\n              searchTopic={searchTopic}\n              searchInput={searchInput}\n              setSearchInput={setSearchInput}\n              filteredByTopic={filteredByTopic}\n              removeTopicFilter={removeTopicFilter}\n            />\n          </Col>\n          <Col md={6} className=\"justify-content-center\">\n            {openedReview === null &&\n              <ReviewsList\n                allReviews={reviews}\n                setOpenedReview={handleOpenedReview}\n                searchFilter={searchFilter}\n                filtered={filtered}\n                setFiltered={setFiltered}\n                searchInput={searchInput}\n                setSearchInput={setSearchInput}\n              />\n            }\n          </Col>\n          <Col md={3} className=\"\">\n          </Col>\n        </Row>\n      </main>\n      {/* Footer */}\n      <Footer />\n    </div>\n  )\n}\n\nrecensioniBibliografiche.getInitialProps = async (context) => {\n  const apiUrlReview = \"http://\" + context.req.headers.host + \"/api/review\"\n  const resReview = await fetch(apiUrlReview)\n  const DBreviews = await resReview.json()\n  const apiUrlTopics = \"http://\" + context.req.headers.host + \"/api/reviewTopics\"\n  const resReviewTopics = await fetch(apiUrlTopics)\n  const reviewTopics = await resReviewTopics.json()\n  return { DBreviews: DBreviews.data, reviewTopics: reviewTopics.data }\n}\n\nexport default recensioniBibliografiche\n\n/* //Rimozione di getServerSideProps per deployare su Firebase\nexport async function getServerSideProps(context) {\n  const apiUrlReview = \"http://\" + context.req.headers.host + \"/api/review\"\n  const resReview = await fetch(apiUrlReview)\n  const DBreviews = await resReview.json()\n  const apiUrlTopics = \"http://\" + context.req.headers.host + \"/api/reviewTopics\"\n  const resReviewTopics = await fetch(apiUrlTopics)\n  const reviewTopics = await resReviewTopics.json()\n  return { props: { DBreviews: DBreviews.data, reviewTopics: reviewTopics.data } }\n}\n*/"]},"metadata":{},"sourceType":"module"}